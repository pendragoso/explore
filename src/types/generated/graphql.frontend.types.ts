// @ts-nocheck
import { GraphQLClient } from 'graphql-request';
import * as Dom from 'graphql-request/dist/types.dom';
import gql from 'graphql-tag';

export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  bigint: number;
  json: string;
  jsonb: Record<string, unknown> | null;
  numeric: number;
  timestamp: string;
  timestamptz: string;
  vector: string;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Array_Comparison_Exp = {
  /** is the array contained in the given array value */
  _contained_in?: InputMaybe<Array<Scalars['String']>>;
  /** does the array contain the given value */
  _contains?: InputMaybe<Array<Scalars['String']>>;
  _eq?: InputMaybe<Array<Scalars['String']>>;
  _gt?: InputMaybe<Array<Scalars['String']>>;
  _gte?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Array<Scalars['String']>>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Array<Scalars['String']>>;
  _lte?: InputMaybe<Array<Scalars['String']>>;
  _neq?: InputMaybe<Array<Scalars['String']>>;
  _nin?: InputMaybe<Array<Array<Scalars['String']>>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']>;
  _gt?: InputMaybe<Scalars['bigint']>;
  _gte?: InputMaybe<Scalars['bigint']>;
  _in?: InputMaybe<Array<Scalars['bigint']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['bigint']>;
  _lte?: InputMaybe<Scalars['bigint']>;
  _neq?: InputMaybe<Scalars['bigint']>;
  _nin?: InputMaybe<Array<Scalars['bigint']>>;
};

/** ordering argument of a cursor */
export const cursorOrdering = {
  /** ascending ordering of the cursor */
  Asc: 'ASC',
  /** descending ordering of the cursor */
  Desc: 'DESC',
} as const;

export type Cursor_Ordering =
  (typeof cursorOrdering)[keyof typeof cursorOrdering];
/** columns and relationships of "customMessage.content" */
export type CustomMessage_Content = {
  __typename?: 'customMessage_content';
  countryCodes: Array<Scalars['String']>;
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  localeCode: Locale_LocationCode_Enum;
  pageName: CustomMessage_PageName_Enum;
  storeId: Scalars['Int'];
  text: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "customMessage.content" */
export type CustomMessage_Content_Aggregate = {
  __typename?: 'customMessage_content_aggregate';
  aggregate: Maybe<CustomMessage_Content_Aggregate_Fields>;
  nodes: Array<CustomMessage_Content>;
};

/** aggregate fields of "customMessage.content" */
export type CustomMessage_Content_Aggregate_Fields = {
  __typename?: 'customMessage_content_aggregate_fields';
  avg: Maybe<CustomMessage_Content_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<CustomMessage_Content_Max_Fields>;
  min: Maybe<CustomMessage_Content_Min_Fields>;
  stddev: Maybe<CustomMessage_Content_Stddev_Fields>;
  stddev_pop: Maybe<CustomMessage_Content_Stddev_Pop_Fields>;
  stddev_samp: Maybe<CustomMessage_Content_Stddev_Samp_Fields>;
  sum: Maybe<CustomMessage_Content_Sum_Fields>;
  var_pop: Maybe<CustomMessage_Content_Var_Pop_Fields>;
  var_samp: Maybe<CustomMessage_Content_Var_Samp_Fields>;
  variance: Maybe<CustomMessage_Content_Variance_Fields>;
};

/** aggregate fields of "customMessage.content" */
export type CustomMessage_Content_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<CustomMessage_Content_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type CustomMessage_Content_Avg_Fields = {
  __typename?: 'customMessage_content_avg_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "customMessage.content". All fields are combined with a logical 'AND'. */
export type CustomMessage_Content_Bool_Exp = {
  _and?: InputMaybe<Array<CustomMessage_Content_Bool_Exp>>;
  _not?: InputMaybe<CustomMessage_Content_Bool_Exp>;
  _or?: InputMaybe<Array<CustomMessage_Content_Bool_Exp>>;
  countryCodes?: InputMaybe<String_Array_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  localeCode?: InputMaybe<Locale_LocationCode_Enum_Comparison_Exp>;
  pageName?: InputMaybe<CustomMessage_PageName_Enum_Comparison_Exp>;
  storeId?: InputMaybe<Int_Comparison_Exp>;
  text?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "customMessage.content" */
export const customMessageContentConstraint = {
  /** unique or primary key constraint on columns "id" */
  ContentPkey: 'content_pkey',
} as const;

export type CustomMessage_Content_Constraint =
  (typeof customMessageContentConstraint)[keyof typeof customMessageContentConstraint];
/** input type for incrementing numeric columns in table "customMessage.content" */
export type CustomMessage_Content_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  storeId?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "customMessage.content" */
export type CustomMessage_Content_Insert_Input = {
  countryCodes?: InputMaybe<Array<Scalars['String']>>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  localeCode?: InputMaybe<Locale_LocationCode_Enum>;
  pageName?: InputMaybe<CustomMessage_PageName_Enum>;
  storeId?: InputMaybe<Scalars['Int']>;
  text?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type CustomMessage_Content_Max_Fields = {
  __typename?: 'customMessage_content_max_fields';
  countryCodes: Maybe<Array<Scalars['String']>>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['Int']>;
  text: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type CustomMessage_Content_Min_Fields = {
  __typename?: 'customMessage_content_min_fields';
  countryCodes: Maybe<Array<Scalars['String']>>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['Int']>;
  text: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "customMessage.content" */
export type CustomMessage_Content_Mutation_Response = {
  __typename?: 'customMessage_content_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CustomMessage_Content>;
};

/** on_conflict condition type for table "customMessage.content" */
export type CustomMessage_Content_On_Conflict = {
  constraint: CustomMessage_Content_Constraint;
  update_columns: Array<CustomMessage_Content_Update_Column>;
  where?: InputMaybe<CustomMessage_Content_Bool_Exp>;
};

/** Ordering options when selecting data from "customMessage.content". */
export type CustomMessage_Content_Order_By = {
  countryCodes?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  localeCode?: InputMaybe<Order_By>;
  pageName?: InputMaybe<Order_By>;
  storeId?: InputMaybe<Order_By>;
  text?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: customMessage.content */
export type CustomMessage_Content_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "customMessage.content" */
export const customMessageContentSelectColumn = {
  /** column name */
  CountryCodes: 'countryCodes',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  LocaleCode: 'localeCode',
  /** column name */
  PageName: 'pageName',
  /** column name */
  StoreId: 'storeId',
  /** column name */
  Text: 'text',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type CustomMessage_Content_Select_Column =
  (typeof customMessageContentSelectColumn)[keyof typeof customMessageContentSelectColumn];
/** input type for updating data in table "customMessage.content" */
export type CustomMessage_Content_Set_Input = {
  countryCodes?: InputMaybe<Array<Scalars['String']>>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  localeCode?: InputMaybe<Locale_LocationCode_Enum>;
  pageName?: InputMaybe<CustomMessage_PageName_Enum>;
  storeId?: InputMaybe<Scalars['Int']>;
  text?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type CustomMessage_Content_Stddev_Fields = {
  __typename?: 'customMessage_content_stddev_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type CustomMessage_Content_Stddev_Pop_Fields = {
  __typename?: 'customMessage_content_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type CustomMessage_Content_Stddev_Samp_Fields = {
  __typename?: 'customMessage_content_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "customMessage_content" */
export type CustomMessage_Content_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CustomMessage_Content_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CustomMessage_Content_Stream_Cursor_Value_Input = {
  countryCodes?: InputMaybe<Array<Scalars['String']>>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  localeCode?: InputMaybe<Locale_LocationCode_Enum>;
  pageName?: InputMaybe<CustomMessage_PageName_Enum>;
  storeId?: InputMaybe<Scalars['Int']>;
  text?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type CustomMessage_Content_Sum_Fields = {
  __typename?: 'customMessage_content_sum_fields';
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['Int']>;
};

/** update columns of table "customMessage.content" */
export const customMessageContentUpdateColumn = {
  /** column name */
  CountryCodes: 'countryCodes',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  LocaleCode: 'localeCode',
  /** column name */
  PageName: 'pageName',
  /** column name */
  StoreId: 'storeId',
  /** column name */
  Text: 'text',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type CustomMessage_Content_Update_Column =
  (typeof customMessageContentUpdateColumn)[keyof typeof customMessageContentUpdateColumn];
export type CustomMessage_Content_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CustomMessage_Content_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CustomMessage_Content_Set_Input>;
  /** filter the rows which have to be updated */
  where: CustomMessage_Content_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CustomMessage_Content_Var_Pop_Fields = {
  __typename?: 'customMessage_content_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type CustomMessage_Content_Var_Samp_Fields = {
  __typename?: 'customMessage_content_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type CustomMessage_Content_Variance_Fields = {
  __typename?: 'customMessage_content_variance_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** columns and relationships of "customMessage.pageName" */
export type CustomMessage_PageName = {
  __typename?: 'customMessage_pageName';
  set: Scalars['String'];
};

/** aggregated selection of "customMessage.pageName" */
export type CustomMessage_PageName_Aggregate = {
  __typename?: 'customMessage_pageName_aggregate';
  aggregate: Maybe<CustomMessage_PageName_Aggregate_Fields>;
  nodes: Array<CustomMessage_PageName>;
};

/** aggregate fields of "customMessage.pageName" */
export type CustomMessage_PageName_Aggregate_Fields = {
  __typename?: 'customMessage_pageName_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<CustomMessage_PageName_Max_Fields>;
  min: Maybe<CustomMessage_PageName_Min_Fields>;
};

/** aggregate fields of "customMessage.pageName" */
export type CustomMessage_PageName_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<CustomMessage_PageName_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "customMessage.pageName". All fields are combined with a logical 'AND'. */
export type CustomMessage_PageName_Bool_Exp = {
  _and?: InputMaybe<Array<CustomMessage_PageName_Bool_Exp>>;
  _not?: InputMaybe<CustomMessage_PageName_Bool_Exp>;
  _or?: InputMaybe<Array<CustomMessage_PageName_Bool_Exp>>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "customMessage.pageName" */
export const customMessagePageNameConstraint = {
  /** unique or primary key constraint on columns "set" */
  PageNamePkey: 'pageName_pkey',
} as const;

export type CustomMessage_PageName_Constraint =
  (typeof customMessagePageNameConstraint)[keyof typeof customMessagePageNameConstraint];
export const customMessagePageNameEnum = {
  CheckoutCustomerInfo: 'checkout_customer_info',
  CheckoutDefault: 'checkout_default',
  CheckoutPaymentInfo: 'checkout_payment_info',
  CheckoutShippingInfo: 'checkout_shipping_info',
  HelloCart: 'hello_cart',
  HelloDefault: 'hello_default',
  HelloHomepage: 'hello_homepage',
  HelloItemDetails: 'hello_item_details',
  HelloItemList: 'hello_item_list',
} as const;

export type CustomMessage_PageName_Enum =
  (typeof customMessagePageNameEnum)[keyof typeof customMessagePageNameEnum];
/** Boolean expression to compare columns of type "customMessage_pageName_enum". All fields are combined with logical 'AND'. */
export type CustomMessage_PageName_Enum_Comparison_Exp = {
  _eq?: InputMaybe<CustomMessage_PageName_Enum>;
  _in?: InputMaybe<Array<CustomMessage_PageName_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<CustomMessage_PageName_Enum>;
  _nin?: InputMaybe<Array<CustomMessage_PageName_Enum>>;
};

/** input type for inserting data into table "customMessage.pageName" */
export type CustomMessage_PageName_Insert_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type CustomMessage_PageName_Max_Fields = {
  __typename?: 'customMessage_pageName_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type CustomMessage_PageName_Min_Fields = {
  __typename?: 'customMessage_pageName_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "customMessage.pageName" */
export type CustomMessage_PageName_Mutation_Response = {
  __typename?: 'customMessage_pageName_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CustomMessage_PageName>;
};

/** on_conflict condition type for table "customMessage.pageName" */
export type CustomMessage_PageName_On_Conflict = {
  constraint: CustomMessage_PageName_Constraint;
  update_columns: Array<CustomMessage_PageName_Update_Column>;
  where?: InputMaybe<CustomMessage_PageName_Bool_Exp>;
};

/** Ordering options when selecting data from "customMessage.pageName". */
export type CustomMessage_PageName_Order_By = {
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: customMessage.pageName */
export type CustomMessage_PageName_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "customMessage.pageName" */
export const customMessagePageNameSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type CustomMessage_PageName_Select_Column =
  (typeof customMessagePageNameSelectColumn)[keyof typeof customMessagePageNameSelectColumn];
/** input type for updating data in table "customMessage.pageName" */
export type CustomMessage_PageName_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "customMessage_pageName" */
export type CustomMessage_PageName_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CustomMessage_PageName_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CustomMessage_PageName_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "customMessage.pageName" */
export const customMessagePageNameUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type CustomMessage_PageName_Update_Column =
  (typeof customMessagePageNameUpdateColumn)[keyof typeof customMessagePageNameUpdateColumn];
export type CustomMessage_PageName_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CustomMessage_PageName_Set_Input>;
  /** filter the rows which have to be updated */
  where: CustomMessage_PageName_Bool_Exp;
};

/** columns and relationships of "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private = {
  __typename?: 'embedding_zonos_com_dev_digest_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_digest_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Digest_Private>;
};

/** aggregate fields of "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Private_Select_Column>
  >;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Digest_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_digest_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_digest_private" */
export const embeddingZonosComDevDigestPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevDigestPrivatePkey: 'zonos_com_dev_digest_private_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Private_Constraint =
  (typeof embeddingZonosComDevDigestPrivateConstraint)[keyof typeof embeddingZonosComDevDigestPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Digest_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Digest_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Digest_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_dev_digest_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Dev_Digest_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Digest_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Digest_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_digest_private". */
export type Embedding_Zonos_Com_Dev_Digest_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_digest_private */
export type Embedding_Zonos_Com_Dev_Digest_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Digest_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_digest_private" */
export const embeddingZonosComDevDigestPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Private_Select_Column =
  (typeof embeddingZonosComDevDigestPrivateSelectColumn)[keyof typeof embeddingZonosComDevDigestPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_dev_digest_private" */
export type Embedding_Zonos_Com_Dev_Digest_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Dev_Digest_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Digest_Private_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_digest_private" */
export const embeddingZonosComDevDigestPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Private_Update_Column =
  (typeof embeddingZonosComDevDigestPrivateUpdateColumn)[keyof typeof embeddingZonosComDevDigestPrivateUpdateColumn];
export type Embedding_Zonos_Com_Dev_Digest_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Digest_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public = {
  __typename?: 'embedding_zonos_com_dev_digest_public';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_PublicMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_digest_public_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Digest_Public>;
};

/** aggregate fields of "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Public_Select_Column>
  >;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Digest_Public_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_digest_public". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_digest_public" */
export const embeddingZonosComDevDigestPublicConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevDigestPublicPkey: 'zonos_com_dev_digest_public_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Public_Constraint =
  (typeof embeddingZonosComDevDigestPublicConstraint)[keyof typeof embeddingZonosComDevDigestPublicConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Digest_Public_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Digest_Public_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Digest_Public_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Mutation_Response = {
  __typename?: 'embedding_zonos_com_dev_digest_public_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Dev_Digest_Public>;
};

/** on_conflict condition type for table "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Digest_Public_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Digest_Public_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_digest_public". */
export type Embedding_Zonos_Com_Dev_Digest_Public_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_digest_public */
export type Embedding_Zonos_Com_Dev_Digest_Public_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Digest_Public_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_digest_public" */
export const embeddingZonosComDevDigestPublicSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Public_Select_Column =
  (typeof embeddingZonosComDevDigestPublicSelectColumn)[keyof typeof embeddingZonosComDevDigestPublicSelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_dev_digest_public" */
export type Embedding_Zonos_Com_Dev_Digest_Public_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Dev_Digest_Public_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Digest_Public_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_digest_public" */
export const embeddingZonosComDevDigestPublicUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Public_Update_Column =
  (typeof embeddingZonosComDevDigestPublicUpdateColumn)[keyof typeof embeddingZonosComDevDigestPublicUpdateColumn];
export type Embedding_Zonos_Com_Dev_Digest_Public_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Digest_Public_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_public_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_digest_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>
  >;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>
  >;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_digest_zonos_email_only" */
export const embeddingZonosComDevDigestZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevDigestZonosEmailOnlyPkey:
    'zonos_com_dev_digest_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComDevDigestZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComDevDigestZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_At_Path_Input =
  {
    metadata?: InputMaybe<Array<Scalars['String']>>;
  };

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Elem_Input =
  {
    metadata?: InputMaybe<Scalars['Int']>;
  };

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Mutation_Response =
  {
    __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int'];
    /** data from the rows affected by the mutation */
    returning: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  };

/** on_conflict condition type for table "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_digest_zonos_email_only". */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_digest_zonos_email_only */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_digest_zonos_email_only" */
export const embeddingZonosComDevDigestZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComDevDigestZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComDevDigestZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stddev_Pop_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_stddev_pop_fields';
    id: Maybe<Scalars['Float']>;
  };

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stddev_Samp_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_stddev_samp_fields';
    id: Maybe<Scalars['Float']>;
  };

/** Streaming cursor of the table "embedding_zonos_com_dev_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stream_Cursor_Input =
  {
    /** Stream column input with initial value */
    initial_value: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stream_Cursor_Value_Input;
    /** cursor ordering */
    ordering?: InputMaybe<Cursor_Ordering>;
  };

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_digest_zonos_email_only" */
export const embeddingZonosComDevDigestZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComDevDigestZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComDevDigestZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_digest_zonos_email_only_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private = {
  __typename?: 'embedding_zonos_com_dev_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Private>;
};

/** aggregate fields of "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Private_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_private" */
export const embeddingZonosComDevPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevPrivatePkey: 'zonos_com_dev_private_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Private_Constraint =
  (typeof embeddingZonosComDevPrivateConstraint)[keyof typeof embeddingZonosComDevPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_dev_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Dev_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_private". */
export type Embedding_Zonos_Com_Dev_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_private */
export type Embedding_Zonos_Com_Dev_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_private" */
export const embeddingZonosComDevPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Private_Select_Column =
  (typeof embeddingZonosComDevPrivateSelectColumn)[keyof typeof embeddingZonosComDevPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_dev_private" */
export type Embedding_Zonos_Com_Dev_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Dev_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Private_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_private" */
export const embeddingZonosComDevPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Private_Update_Column =
  (typeof embeddingZonosComDevPrivateUpdateColumn)[keyof typeof embeddingZonosComDevPrivateUpdateColumn];
export type Embedding_Zonos_Com_Dev_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public = {
  __typename?: 'embedding_zonos_com_dev_public';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_PublicMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_public_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Public_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Public>;
};

/** aggregate fields of "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Public_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Public_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Public_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Public_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Public_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Public_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Public_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Public_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Public_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Public_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Public_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Public_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_public". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Public_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_public" */
export const embeddingZonosComDevPublicConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevPublicPkey: 'zonos_com_dev_public_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Public_Constraint =
  (typeof embeddingZonosComDevPublicConstraint)[keyof typeof embeddingZonosComDevPublicConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Public_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Public_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Public_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Public_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Public_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Mutation_Response = {
  __typename?: 'embedding_zonos_com_dev_public_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Dev_Public>;
};

/** on_conflict condition type for table "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Public_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Public_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_public". */
export type Embedding_Zonos_Com_Dev_Public_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_public */
export type Embedding_Zonos_Com_Dev_Public_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Public_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_public" */
export const embeddingZonosComDevPublicSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Public_Select_Column =
  (typeof embeddingZonosComDevPublicSelectColumn)[keyof typeof embeddingZonosComDevPublicSelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Public_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Public_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Public_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_dev_public" */
export type Embedding_Zonos_Com_Dev_Public_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Dev_Public_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Public_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Public_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_public" */
export const embeddingZonosComDevPublicUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Public_Update_Column =
  (typeof embeddingZonosComDevPublicUpdateColumn)[keyof typeof embeddingZonosComDevPublicUpdateColumn];
export type Embedding_Zonos_Com_Dev_Public_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Public_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Public_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Public_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Public_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Public_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_public_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private = {
  __typename?: 'embedding_zonos_com_dev_split_front_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Split_Front_Private>;
};

/** aggregate fields of "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_split_front_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp = {
  _and?: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>
  >;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_split_front_private" */
export const embeddingZonosComDevSplitFrontPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevSplitFrontPrivateTPkey: 'zonos_com_dev_split_front_private_t_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Split_Front_Private_Constraint =
  (typeof embeddingZonosComDevSplitFrontPrivateConstraint)[keyof typeof embeddingZonosComDevSplitFrontPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Dev_Split_Front_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Split_Front_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_split_front_private". */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_split_front_private */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_split_front_private" */
export const embeddingZonosComDevSplitFrontPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Split_Front_Private_Select_Column =
  (typeof embeddingZonosComDevSplitFrontPrivateSelectColumn)[keyof typeof embeddingZonosComDevSplitFrontPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_dev_split_front_private" */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Dev_Split_Front_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_split_front_private" */
export const embeddingZonosComDevSplitFrontPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Split_Front_Private_Update_Column =
  (typeof embeddingZonosComDevSplitFrontPrivateUpdateColumn)[keyof typeof embeddingZonosComDevSplitFrontPrivateUpdateColumn];
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Aggregate_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_aggregate_fields';
    avg: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Avg_Fields>;
    count: Scalars['Int'];
    max: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Max_Fields>;
    min: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Min_Fields>;
    stddev: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stddev_Fields>;
    stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stddev_Pop_Fields>;
    stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stddev_Samp_Fields>;
    sum: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Sum_Fields>;
    var_pop: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Var_Pop_Fields>;
    var_samp: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Var_Samp_Fields>;
    variance: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Variance_Fields>;
  };

/** aggregate fields of "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Append_Input =
  {
    metadata?: InputMaybe<Scalars['jsonb']>;
  };

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_split_front_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>
  >;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>
  >;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export const embeddingZonosComDevSplitFrontZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevSplitFrontZonosEmailOnlyPkey:
    'zonos_com_dev_split_front_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComDevSplitFrontZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComDevSplitFrontZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_At_Path_Input =
  {
    metadata?: InputMaybe<Array<Scalars['String']>>;
  };

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Elem_Input =
  {
    metadata?: InputMaybe<Scalars['Int']>;
  };

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Key_Input =
  {
    metadata?: InputMaybe<Scalars['String']>;
  };

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Insert_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Mutation_Response =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int'];
    /** data from the rows affected by the mutation */
    returning: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  };

/** on_conflict condition type for table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_split_front_zonos_email_only". */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_split_front_zonos_email_only */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Pk_Columns_Input =
  {
    id: Scalars['bigint'];
  };

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Prepend_Input =
  {
    metadata?: InputMaybe<Scalars['jsonb']>;
  };

/** select columns of table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export const embeddingZonosComDevSplitFrontZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComDevSplitFrontZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComDevSplitFrontZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stddev_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_stddev_fields';
    id: Maybe<Scalars['Float']>;
  };

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stddev_Pop_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_stddev_pop_fields';
    id: Maybe<Scalars['Float']>;
  };

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stddev_Samp_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_stddev_samp_fields';
    id: Maybe<Scalars['Float']>;
  };

/** Streaming cursor of the table "embedding_zonos_com_dev_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stream_Cursor_Input =
  {
    /** Stream column input with initial value */
    initial_value: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stream_Cursor_Value_Input;
    /** cursor ordering */
    ordering?: InputMaybe<Cursor_Ordering>;
  };

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_split_front_zonos_email_only" */
export const embeddingZonosComDevSplitFrontZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComDevSplitFrontZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComDevSplitFrontZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Var_Pop_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_var_pop_fields';
    id: Maybe<Scalars['Float']>;
  };

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Var_Samp_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_var_samp_fields';
    id: Maybe<Scalars['Float']>;
  };

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Variance_Fields =
  {
    __typename?: 'embedding_zonos_com_dev_split_front_zonos_email_only_variance_fields';
    id: Maybe<Scalars['Float']>;
  };

/** columns and relationships of "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_dev_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_dev_zonos_email_only" */
export const embeddingZonosComDevZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDevZonosEmailOnlyPkey: 'zonos_com_dev_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComDevZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComDevZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Mutation_Response = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
};

/** on_conflict condition type for table "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_dev_zonos_email_only". */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_dev_zonos_email_only */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_dev_zonos_email_only" */
export const embeddingZonosComDevZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComDevZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComDevZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_dev_zonos_email_only" */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_dev_zonos_email_only" */
export const embeddingZonosComDevZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComDevZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComDevZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Dev_Zonos_Email_Only_Variance_Fields = {
  __typename?: 'embedding_zonos_com_dev_zonos_email_only_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private = {
  __typename?: 'embedding_zonos_com_digest_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_digest_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Digest_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Digest_Private>;
};

/** aggregate fields of "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Digest_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Digest_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Digest_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Digest_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Digest_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Digest_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Digest_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Digest_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Digest_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Digest_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Digest_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Digest_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_digest_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Digest_Private_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_digest_private" */
export const embeddingZonosComDigestPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDigestPrivatePkey: 'zonos_com_digest_private_pkey',
} as const;

export type Embedding_Zonos_Com_Digest_Private_Constraint =
  (typeof embeddingZonosComDigestPrivateConstraint)[keyof typeof embeddingZonosComDigestPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Digest_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Digest_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Digest_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Digest_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Digest_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_digest_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Digest_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Digest_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Digest_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_digest_private". */
export type Embedding_Zonos_Com_Digest_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_digest_private */
export type Embedding_Zonos_Com_Digest_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Digest_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_digest_private" */
export const embeddingZonosComDigestPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Digest_Private_Select_Column =
  (typeof embeddingZonosComDigestPrivateSelectColumn)[keyof typeof embeddingZonosComDigestPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Digest_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Digest_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Digest_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_digest_private" */
export type Embedding_Zonos_Com_Digest_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Digest_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Digest_Private_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Digest_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_digest_private" */
export const embeddingZonosComDigestPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Digest_Private_Update_Column =
  (typeof embeddingZonosComDigestPrivateUpdateColumn)[keyof typeof embeddingZonosComDigestPrivateUpdateColumn];
export type Embedding_Zonos_Com_Digest_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Digest_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Digest_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Digest_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Digest_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Digest_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_digest_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public = {
  __typename?: 'embedding_zonos_com_digest_public';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_PublicMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Aggregate = {
  __typename?: 'embedding_zonos_com_digest_public_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Digest_Public_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Digest_Public>;
};

/** aggregate fields of "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Digest_Public_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Digest_Public_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Digest_Public_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Digest_Public_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Digest_Public_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Digest_Public_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Digest_Public_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Digest_Public_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Digest_Public_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Digest_Public_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Digest_Public_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Digest_Public_Avg_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_digest_public". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Digest_Public_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_digest_public" */
export const embeddingZonosComDigestPublicConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDigestPublicPkey: 'zonos_com_digest_public_pkey',
} as const;

export type Embedding_Zonos_Com_Digest_Public_Constraint =
  (typeof embeddingZonosComDigestPublicConstraint)[keyof typeof embeddingZonosComDigestPublicConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Digest_Public_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Digest_Public_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Digest_Public_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Digest_Public_Max_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Digest_Public_Min_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Mutation_Response = {
  __typename?: 'embedding_zonos_com_digest_public_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Digest_Public>;
};

/** on_conflict condition type for table "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_On_Conflict = {
  constraint: Embedding_Zonos_Com_Digest_Public_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Digest_Public_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_digest_public". */
export type Embedding_Zonos_Com_Digest_Public_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_digest_public */
export type Embedding_Zonos_Com_Digest_Public_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Digest_Public_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_digest_public" */
export const embeddingZonosComDigestPublicSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Digest_Public_Select_Column =
  (typeof embeddingZonosComDigestPublicSelectColumn)[keyof typeof embeddingZonosComDigestPublicSelectColumn];
/** input type for updating data in table "embedding.zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Digest_Public_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Digest_Public_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Digest_Public_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_digest_public" */
export type Embedding_Zonos_Com_Digest_Public_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Digest_Public_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Digest_Public_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Digest_Public_Sum_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_digest_public" */
export const embeddingZonosComDigestPublicUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Digest_Public_Update_Column =
  (typeof embeddingZonosComDigestPublicUpdateColumn)[keyof typeof embeddingZonosComDigestPublicUpdateColumn];
export type Embedding_Zonos_Com_Digest_Public_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Digest_Public_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Digest_Public_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Digest_Public_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Digest_Public_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Digest_Public_Variance_Fields = {
  __typename?: 'embedding_zonos_com_digest_public_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_digest_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>
  >;
  _not?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_digest_zonos_email_only" */
export const embeddingZonosComDigestZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComDigestZonosEmailOnlyPkey: 'zonos_com_digest_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComDigestZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComDigestZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Mutation_Response = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
};

/** on_conflict condition type for table "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_digest_zonos_email_only". */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_digest_zonos_email_only */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_digest_zonos_email_only" */
export const embeddingZonosComDigestZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComDigestZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComDigestZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_digest_zonos_email_only" */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_digest_zonos_email_only" */
export const embeddingZonosComDigestZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComDigestZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComDigestZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Digest_Zonos_Email_Only_Variance_Fields = {
  __typename?: 'embedding_zonos_com_digest_zonos_email_only_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private = {
  __typename?: 'embedding_zonos_com_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Private>;
};

/** aggregate fields of "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Private_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Private_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Private_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_private" */
export const embeddingZonosComPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComPrivatePkey: 'zonos_com_private_pkey',
} as const;

export type Embedding_Zonos_Com_Private_Constraint =
  (typeof embeddingZonosComPrivateConstraint)[keyof typeof embeddingZonosComPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_private". */
export type Embedding_Zonos_Com_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_private */
export type Embedding_Zonos_Com_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_private" */
export const embeddingZonosComPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Private_Select_Column =
  (typeof embeddingZonosComPrivateSelectColumn)[keyof typeof embeddingZonosComPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_private" */
export type Embedding_Zonos_Com_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_private" */
export type Embedding_Zonos_Com_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Private_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_private" */
export const embeddingZonosComPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Private_Update_Column =
  (typeof embeddingZonosComPrivateUpdateColumn)[keyof typeof embeddingZonosComPrivateUpdateColumn];
export type Embedding_Zonos_Com_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public = {
  __typename?: 'embedding_zonos_com_public';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_PublicMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Aggregate = {
  __typename?: 'embedding_zonos_com_public_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Public_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Public>;
};

/** aggregate fields of "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_public_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Public_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Public_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Public_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Public_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Public_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Public_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Public_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Public_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Public_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Public_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Public_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Public_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Public_Avg_Fields = {
  __typename?: 'embedding_zonos_com_public_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_public". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Public_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Public_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Public_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_public" */
export const embeddingZonosComPublicConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComPublicPkey: 'zonos_com_public_pkey',
} as const;

export type Embedding_Zonos_Com_Public_Constraint =
  (typeof embeddingZonosComPublicConstraint)[keyof typeof embeddingZonosComPublicConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Public_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Public_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Public_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Public_Max_Fields = {
  __typename?: 'embedding_zonos_com_public_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Public_Min_Fields = {
  __typename?: 'embedding_zonos_com_public_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Mutation_Response = {
  __typename?: 'embedding_zonos_com_public_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Public>;
};

/** on_conflict condition type for table "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_On_Conflict = {
  constraint: Embedding_Zonos_Com_Public_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Public_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_public". */
export type Embedding_Zonos_Com_Public_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_public */
export type Embedding_Zonos_Com_Public_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Public_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_public" */
export const embeddingZonosComPublicSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Public_Select_Column =
  (typeof embeddingZonosComPublicSelectColumn)[keyof typeof embeddingZonosComPublicSelectColumn];
/** input type for updating data in table "embedding.zonos_com_public" */
export type Embedding_Zonos_Com_Public_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Public_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_public_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Public_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_public_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Public_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_public_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_public" */
export type Embedding_Zonos_Com_Public_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Public_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Public_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Public_Sum_Fields = {
  __typename?: 'embedding_zonos_com_public_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_public" */
export const embeddingZonosComPublicUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Public_Update_Column =
  (typeof embeddingZonosComPublicUpdateColumn)[keyof typeof embeddingZonosComPublicUpdateColumn];
export type Embedding_Zonos_Com_Public_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Public_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Public_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Public_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Public_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Public_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Public_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Public_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Public_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Public_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_public_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Public_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_public_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Public_Variance_Fields = {
  __typename?: 'embedding_zonos_com_public_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private = {
  __typename?: 'embedding_zonos_com_split_front_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_split_front_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Split_Front_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Split_Front_Private>;
};

/** aggregate fields of "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Split_Front_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Split_Front_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Split_Front_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Split_Front_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Split_Front_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Split_Front_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Split_Front_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Split_Front_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Split_Front_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Split_Front_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Private_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Front_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_split_front_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Split_Front_Private_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_split_front_private" */
export const embeddingZonosComSplitFrontPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComSplitFrontPrivatePkey: 'zonos_com_split_front_private_pkey',
} as const;

export type Embedding_Zonos_Com_Split_Front_Private_Constraint =
  (typeof embeddingZonosComSplitFrontPrivateConstraint)[keyof typeof embeddingZonosComSplitFrontPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Split_Front_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Split_Front_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Split_Front_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_split_front_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Split_Front_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Split_Front_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Split_Front_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_split_front_private". */
export type Embedding_Zonos_Com_Split_Front_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_split_front_private */
export type Embedding_Zonos_Com_Split_Front_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Front_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_split_front_private" */
export const embeddingZonosComSplitFrontPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Front_Private_Select_Column =
  (typeof embeddingZonosComSplitFrontPrivateSelectColumn)[keyof typeof embeddingZonosComSplitFrontPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_split_front_private" */
export type Embedding_Zonos_Com_Split_Front_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Split_Front_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Split_Front_Private_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_split_front_private" */
export const embeddingZonosComSplitFrontPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Front_Private_Update_Column =
  (typeof embeddingZonosComSplitFrontPrivateUpdateColumn)[keyof typeof embeddingZonosComSplitFrontPrivateUpdateColumn];
export type Embedding_Zonos_Com_Split_Front_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Split_Front_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Split_Front_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_split_front_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public = {
  __typename?: 'embedding_zonos_com_split_front_public';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_PublicMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Aggregate = {
  __typename?: 'embedding_zonos_com_split_front_public_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Split_Front_Public_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Split_Front_Public>;
};

/** aggregate fields of "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Split_Front_Public_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Split_Front_Public_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Split_Front_Public_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Split_Front_Public_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Split_Front_Public_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Split_Front_Public_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Split_Front_Public_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Split_Front_Public_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Split_Front_Public_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Split_Front_Public_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Public_Select_Column>
  >;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Front_Public_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Avg_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_split_front_public". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Split_Front_Public_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_split_front_public" */
export const embeddingZonosComSplitFrontPublicConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComSplitFrontPublicPkey: 'zonos_com_split_front_public_pkey',
} as const;

export type Embedding_Zonos_Com_Split_Front_Public_Constraint =
  (typeof embeddingZonosComSplitFrontPublicConstraint)[keyof typeof embeddingZonosComSplitFrontPublicConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Split_Front_Public_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Split_Front_Public_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Split_Front_Public_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Max_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Min_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Mutation_Response = {
  __typename?: 'embedding_zonos_com_split_front_public_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Split_Front_Public>;
};

/** on_conflict condition type for table "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_On_Conflict = {
  constraint: Embedding_Zonos_Com_Split_Front_Public_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Split_Front_Public_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_split_front_public". */
export type Embedding_Zonos_Com_Split_Front_Public_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_split_front_public */
export type Embedding_Zonos_Com_Split_Front_Public_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Front_Public_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_split_front_public" */
export const embeddingZonosComSplitFrontPublicSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Front_Public_Select_Column =
  (typeof embeddingZonosComSplitFrontPublicSelectColumn)[keyof typeof embeddingZonosComSplitFrontPublicSelectColumn];
/** input type for updating data in table "embedding.zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_split_front_public" */
export type Embedding_Zonos_Com_Split_Front_Public_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Split_Front_Public_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Split_Front_Public_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Sum_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_split_front_public" */
export const embeddingZonosComSplitFrontPublicUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Front_Public_Update_Column =
  (typeof embeddingZonosComSplitFrontPublicUpdateColumn)[keyof typeof embeddingZonosComSplitFrontPublicUpdateColumn];
export type Embedding_Zonos_Com_Split_Front_Public_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Split_Front_Public_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Split_Front_Public_Variance_Fields = {
  __typename?: 'embedding_zonos_com_split_front_public_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Aggregate_Fields =
  {
    __typename?: 'embedding_zonos_com_split_front_zonos_email_only_aggregate_fields';
    avg: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Avg_Fields>;
    count: Scalars['Int'];
    max: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Max_Fields>;
    min: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Min_Fields>;
    stddev: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stddev_Fields>;
    stddev_pop: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stddev_Pop_Fields>;
    stddev_samp: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stddev_Samp_Fields>;
    sum: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Sum_Fields>;
    var_pop: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Var_Pop_Fields>;
    var_samp: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Var_Samp_Fields>;
    variance: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Variance_Fields>;
  };

/** aggregate fields of "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_split_front_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>
  >;
  _not?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>
  >;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_split_front_zonos_email_only" */
export const embeddingZonosComSplitFrontZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComSplitFrontZonosEmailOnlyPkey:
    'zonos_com_split_front_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComSplitFrontZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComSplitFrontZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_At_Path_Input =
  {
    metadata?: InputMaybe<Array<Scalars['String']>>;
  };

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Elem_Input =
  {
    metadata?: InputMaybe<Scalars['Int']>;
  };

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Key_Input =
  {
    metadata?: InputMaybe<Scalars['String']>;
  };

/** input type for incrementing numeric columns in table "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Mutation_Response =
  {
    __typename?: 'embedding_zonos_com_split_front_zonos_email_only_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: Scalars['Int'];
    /** data from the rows affected by the mutation */
    returning: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  };

/** on_conflict condition type for table "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_split_front_zonos_email_only". */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_split_front_zonos_email_only */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Pk_Columns_Input =
  {
    id: Scalars['bigint'];
  };

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_split_front_zonos_email_only" */
export const embeddingZonosComSplitFrontZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComSplitFrontZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComSplitFrontZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stddev_Pop_Fields =
  {
    __typename?: 'embedding_zonos_com_split_front_zonos_email_only_stddev_pop_fields';
    id: Maybe<Scalars['Float']>;
  };

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stddev_Samp_Fields =
  {
    __typename?: 'embedding_zonos_com_split_front_zonos_email_only_stddev_samp_fields';
    id: Maybe<Scalars['Float']>;
  };

/** Streaming cursor of the table "embedding_zonos_com_split_front_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stream_Cursor_Input =
  {
    /** Stream column input with initial value */
    initial_value: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stream_Cursor_Value_Input;
    /** cursor ordering */
    ordering?: InputMaybe<Cursor_Ordering>;
  };

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_split_front_zonos_email_only" */
export const embeddingZonosComSplitFrontZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComSplitFrontZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComSplitFrontZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Variance_Fields = {
  __typename?: 'embedding_zonos_com_split_front_zonos_email_only_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private = {
  __typename?: 'embedding_zonos_com_split_private';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_PrivateMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Aggregate = {
  __typename?: 'embedding_zonos_com_split_private_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Split_Private_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Split_Private>;
};

/** aggregate fields of "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_split_private_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Split_Private_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Split_Private_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Split_Private_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Split_Private_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Split_Private_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Split_Private_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Split_Private_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Split_Private_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Split_Private_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Split_Private_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Private_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Split_Private_Avg_Fields = {
  __typename?: 'embedding_zonos_com_split_private_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_split_private". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Split_Private_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_split_private" */
export const embeddingZonosComSplitPrivateConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComSplitPrivatePkey: 'zonos_com_split_private_pkey',
} as const;

export type Embedding_Zonos_Com_Split_Private_Constraint =
  (typeof embeddingZonosComSplitPrivateConstraint)[keyof typeof embeddingZonosComSplitPrivateConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Split_Private_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Split_Private_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Split_Private_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Split_Private_Max_Fields = {
  __typename?: 'embedding_zonos_com_split_private_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Split_Private_Min_Fields = {
  __typename?: 'embedding_zonos_com_split_private_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Mutation_Response = {
  __typename?: 'embedding_zonos_com_split_private_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Split_Private>;
};

/** on_conflict condition type for table "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_On_Conflict = {
  constraint: Embedding_Zonos_Com_Split_Private_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Split_Private_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_split_private". */
export type Embedding_Zonos_Com_Split_Private_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_split_private */
export type Embedding_Zonos_Com_Split_Private_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Private_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_split_private" */
export const embeddingZonosComSplitPrivateSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Private_Select_Column =
  (typeof embeddingZonosComSplitPrivateSelectColumn)[keyof typeof embeddingZonosComSplitPrivateSelectColumn];
/** input type for updating data in table "embedding.zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Split_Private_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_split_private_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Split_Private_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_private_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Split_Private_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_private_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_split_private" */
export type Embedding_Zonos_Com_Split_Private_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Split_Private_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Split_Private_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Split_Private_Sum_Fields = {
  __typename?: 'embedding_zonos_com_split_private_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_split_private" */
export const embeddingZonosComSplitPrivateUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Private_Update_Column =
  (typeof embeddingZonosComSplitPrivateUpdateColumn)[keyof typeof embeddingZonosComSplitPrivateUpdateColumn];
export type Embedding_Zonos_Com_Split_Private_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Split_Private_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Split_Private_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Split_Private_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Split_Private_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Split_Private_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Split_Private_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_private_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Split_Private_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_private_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Split_Private_Variance_Fields = {
  __typename?: 'embedding_zonos_com_split_private_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public = {
  __typename?: 'embedding_zonos_com_split_public';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_PublicMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Aggregate = {
  __typename?: 'embedding_zonos_com_split_public_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Split_Public_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Split_Public>;
};

/** aggregate fields of "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_split_public_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Split_Public_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Split_Public_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Split_Public_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Split_Public_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Split_Public_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Split_Public_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Split_Public_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Split_Public_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Split_Public_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Split_Public_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Public_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Split_Public_Avg_Fields = {
  __typename?: 'embedding_zonos_com_split_public_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_split_public". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Split_Public_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_split_public" */
export const embeddingZonosComSplitPublicConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComSplitPublicPkey: 'zonos_com_split_public_pkey',
} as const;

export type Embedding_Zonos_Com_Split_Public_Constraint =
  (typeof embeddingZonosComSplitPublicConstraint)[keyof typeof embeddingZonosComSplitPublicConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Split_Public_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Split_Public_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Split_Public_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Split_Public_Max_Fields = {
  __typename?: 'embedding_zonos_com_split_public_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Split_Public_Min_Fields = {
  __typename?: 'embedding_zonos_com_split_public_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Mutation_Response = {
  __typename?: 'embedding_zonos_com_split_public_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Split_Public>;
};

/** on_conflict condition type for table "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_On_Conflict = {
  constraint: Embedding_Zonos_Com_Split_Public_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Split_Public_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_split_public". */
export type Embedding_Zonos_Com_Split_Public_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_split_public */
export type Embedding_Zonos_Com_Split_Public_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Public_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_split_public" */
export const embeddingZonosComSplitPublicSelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Public_Select_Column =
  (typeof embeddingZonosComSplitPublicSelectColumn)[keyof typeof embeddingZonosComSplitPublicSelectColumn];
/** input type for updating data in table "embedding.zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Split_Public_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_split_public_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Split_Public_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_public_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Split_Public_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_public_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_split_public" */
export type Embedding_Zonos_Com_Split_Public_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Split_Public_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Split_Public_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Split_Public_Sum_Fields = {
  __typename?: 'embedding_zonos_com_split_public_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_split_public" */
export const embeddingZonosComSplitPublicUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Public_Update_Column =
  (typeof embeddingZonosComSplitPublicUpdateColumn)[keyof typeof embeddingZonosComSplitPublicUpdateColumn];
export type Embedding_Zonos_Com_Split_Public_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Split_Public_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Split_Public_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Split_Public_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Split_Public_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Split_Public_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Split_Public_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_public_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Split_Public_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_public_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Split_Public_Variance_Fields = {
  __typename?: 'embedding_zonos_com_split_public_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Aggregate_FieldsCountArgs =
  {
    columns: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Select_Column>
    >;
    distinct: InputMaybe<Scalars['Boolean']>;
  };

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_split_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_split_zonos_email_only" */
export const embeddingZonosComSplitZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComSplitZonosEmailOnlyPkey: 'zonos_com_split_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComSplitZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComSplitZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Mutation_Response = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
};

/** on_conflict condition type for table "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Split_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_split_zonos_email_only". */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_split_zonos_email_only */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_split_zonos_email_only" */
export const embeddingZonosComSplitZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComSplitZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComSplitZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_split_zonos_email_only" */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Split_Zonos_Email_Only_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Stream_Cursor_Value_Input =
  {
    embedding?: InputMaybe<Scalars['vector']>;
    hash?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['bigint']>;
    metadata?: InputMaybe<Scalars['jsonb']>;
    pageContent?: InputMaybe<Scalars['String']>;
    source?: InputMaybe<Scalars['String']>;
  };

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_split_zonos_email_only" */
export const embeddingZonosComSplitZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComSplitZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComSplitZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Split_Zonos_Email_Only_Variance_Fields = {
  __typename?: 'embedding_zonos_com_split_zonos_email_only_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only = {
  __typename?: 'embedding_zonos_com_zonos_email_only';
  embedding: Scalars['vector'];
  hash: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Scalars['jsonb'];
  pageContent: Scalars['String'];
  source: Scalars['String'];
};

/** columns and relationships of "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_OnlyMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Aggregate = {
  __typename?: 'embedding_zonos_com_zonos_email_only_aggregate';
  aggregate: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Aggregate_Fields>;
  nodes: Array<Embedding_Zonos_Com_Zonos_Email_Only>;
};

/** aggregate fields of "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Aggregate_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_aggregate_fields';
  avg: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Max_Fields>;
  min: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Min_Fields>;
  stddev: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Stddev_Fields>;
  stddev_pop: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Stddev_Samp_Fields>;
  sum: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Sum_Fields>;
  var_pop: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Var_Pop_Fields>;
  var_samp: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Var_Samp_Fields>;
  variance: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Variance_Fields>;
};

/** aggregate fields of "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<
    Array<Embedding_Zonos_Com_Zonos_Email_Only_Select_Column>
  >;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Zonos_Email_Only_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Avg_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "embedding.zonos_com_zonos_email_only". All fields are combined with a logical 'AND'. */
export type Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp = {
  _and?: InputMaybe<Array<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>>;
  _not?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
  _or?: InputMaybe<Array<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>>;
  embedding?: InputMaybe<Vector_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  source?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "embedding.zonos_com_zonos_email_only" */
export const embeddingZonosComZonosEmailOnlyConstraint = {
  /** unique or primary key constraint on columns "id" */
  ZonosComZonosEmailOnlyPkey: 'zonos_com_zonos_email_only_pkey',
} as const;

export type Embedding_Zonos_Com_Zonos_Email_Only_Constraint =
  (typeof embeddingZonosComZonosEmailOnlyConstraint)[keyof typeof embeddingZonosComZonosEmailOnlyConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Embedding_Zonos_Com_Zonos_Email_Only_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Embedding_Zonos_Com_Zonos_Email_Only_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Embedding_Zonos_Com_Zonos_Email_Only_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Insert_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Max_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_max_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Min_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_min_fields';
  hash: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  source: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Mutation_Response = {
  __typename?: 'embedding_zonos_com_zonos_email_only_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Embedding_Zonos_Com_Zonos_Email_Only>;
};

/** on_conflict condition type for table "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_On_Conflict = {
  constraint: Embedding_Zonos_Com_Zonos_Email_Only_Constraint;
  update_columns: Array<Embedding_Zonos_Com_Zonos_Email_Only_Update_Column>;
  where?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
};

/** Ordering options when selecting data from "embedding.zonos_com_zonos_email_only". */
export type Embedding_Zonos_Com_Zonos_Email_Only_Order_By = {
  embedding?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  source?: InputMaybe<Order_By>;
};

/** primary key columns input for table: embedding.zonos_com_zonos_email_only */
export type Embedding_Zonos_Com_Zonos_Email_Only_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Embedding_Zonos_Com_Zonos_Email_Only_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "embedding.zonos_com_zonos_email_only" */
export const embeddingZonosComZonosEmailOnlySelectColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Zonos_Email_Only_Select_Column =
  (typeof embeddingZonosComZonosEmailOnlySelectColumn)[keyof typeof embeddingZonosComZonosEmailOnlySelectColumn];
/** input type for updating data in table "embedding.zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Set_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Stddev_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Stddev_Pop_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Stddev_Samp_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "embedding_zonos_com_zonos_email_only" */
export type Embedding_Zonos_Com_Zonos_Email_Only_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Embedding_Zonos_Com_Zonos_Email_Only_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Embedding_Zonos_Com_Zonos_Email_Only_Stream_Cursor_Value_Input = {
  embedding?: InputMaybe<Scalars['vector']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  source?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Sum_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "embedding.zonos_com_zonos_email_only" */
export const embeddingZonosComZonosEmailOnlyUpdateColumn = {
  /** column name */
  Embedding: 'embedding',
  /** column name */
  Hash: 'hash',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Source: 'source',
} as const;

export type Embedding_Zonos_Com_Zonos_Email_Only_Update_Column =
  (typeof embeddingZonosComZonosEmailOnlyUpdateColumn)[keyof typeof embeddingZonosComZonosEmailOnlyUpdateColumn];
export type Embedding_Zonos_Com_Zonos_Email_Only_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Set_Input>;
  /** filter the rows which have to be updated */
  where: Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Var_Pop_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Var_Samp_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Embedding_Zonos_Com_Zonos_Email_Only_Variance_Fields = {
  __typename?: 'embedding_zonos_com_zonos_email_only_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "error.event" */
export type Error_Event = {
  __typename?: 'error_event';
  createdAt: Scalars['timestamptz'];
  endpoint: Scalars['String'];
  errors: Scalars['jsonb'];
  href: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  /** deprecated - use metadata */
  meta: Maybe<Scalars['jsonb']>;
  metadata: Maybe<Scalars['jsonb']>;
  project: Error_ProjectName_Enum;
  requestPayload: Scalars['jsonb'];
  responseBody: Scalars['jsonb'];
  status: Scalars['Int'];
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "error.event" */
export type Error_EventErrorsArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "error.event" */
export type Error_EventMetaArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "error.event" */
export type Error_EventMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "error.event" */
export type Error_EventRequestPayloadArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "error.event" */
export type Error_EventResponseBodyArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "error.event" */
export type Error_Event_Aggregate = {
  __typename?: 'error_event_aggregate';
  aggregate: Maybe<Error_Event_Aggregate_Fields>;
  nodes: Array<Error_Event>;
};

/** aggregate fields of "error.event" */
export type Error_Event_Aggregate_Fields = {
  __typename?: 'error_event_aggregate_fields';
  avg: Maybe<Error_Event_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Error_Event_Max_Fields>;
  min: Maybe<Error_Event_Min_Fields>;
  stddev: Maybe<Error_Event_Stddev_Fields>;
  stddev_pop: Maybe<Error_Event_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Error_Event_Stddev_Samp_Fields>;
  sum: Maybe<Error_Event_Sum_Fields>;
  var_pop: Maybe<Error_Event_Var_Pop_Fields>;
  var_samp: Maybe<Error_Event_Var_Samp_Fields>;
  variance: Maybe<Error_Event_Variance_Fields>;
};

/** aggregate fields of "error.event" */
export type Error_Event_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Error_Event_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Error_Event_Append_Input = {
  errors?: InputMaybe<Scalars['jsonb']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  requestPayload?: InputMaybe<Scalars['jsonb']>;
  responseBody?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Error_Event_Avg_Fields = {
  __typename?: 'error_event_avg_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "error.event". All fields are combined with a logical 'AND'. */
export type Error_Event_Bool_Exp = {
  _and?: InputMaybe<Array<Error_Event_Bool_Exp>>;
  _not?: InputMaybe<Error_Event_Bool_Exp>;
  _or?: InputMaybe<Array<Error_Event_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  endpoint?: InputMaybe<String_Comparison_Exp>;
  errors?: InputMaybe<Jsonb_Comparison_Exp>;
  href?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  meta?: InputMaybe<Jsonb_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  project?: InputMaybe<Error_ProjectName_Enum_Comparison_Exp>;
  requestPayload?: InputMaybe<Jsonb_Comparison_Exp>;
  responseBody?: InputMaybe<Jsonb_Comparison_Exp>;
  status?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "error.event" */
export const errorEventConstraint = {
  /** unique or primary key constraint on columns "id" */
  EventPkey: 'event_pkey',
} as const;

export type Error_Event_Constraint =
  (typeof errorEventConstraint)[keyof typeof errorEventConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Error_Event_Delete_At_Path_Input = {
  errors?: InputMaybe<Array<Scalars['String']>>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Array<Scalars['String']>>;
  metadata?: InputMaybe<Array<Scalars['String']>>;
  requestPayload?: InputMaybe<Array<Scalars['String']>>;
  responseBody?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Error_Event_Delete_Elem_Input = {
  errors?: InputMaybe<Scalars['Int']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['Int']>;
  metadata?: InputMaybe<Scalars['Int']>;
  requestPayload?: InputMaybe<Scalars['Int']>;
  responseBody?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Error_Event_Delete_Key_Input = {
  errors?: InputMaybe<Scalars['String']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['String']>;
  metadata?: InputMaybe<Scalars['String']>;
  requestPayload?: InputMaybe<Scalars['String']>;
  responseBody?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "error.event" */
export type Error_Event_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  status?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "error.event" */
export type Error_Event_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  endpoint?: InputMaybe<Scalars['String']>;
  errors?: InputMaybe<Scalars['jsonb']>;
  href?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  project?: InputMaybe<Error_ProjectName_Enum>;
  requestPayload?: InputMaybe<Scalars['jsonb']>;
  responseBody?: InputMaybe<Scalars['jsonb']>;
  status?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Error_Event_Max_Fields = {
  __typename?: 'error_event_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  endpoint: Maybe<Scalars['String']>;
  href: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  status: Maybe<Scalars['Int']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Error_Event_Min_Fields = {
  __typename?: 'error_event_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  endpoint: Maybe<Scalars['String']>;
  href: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  status: Maybe<Scalars['Int']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "error.event" */
export type Error_Event_Mutation_Response = {
  __typename?: 'error_event_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Error_Event>;
};

/** on_conflict condition type for table "error.event" */
export type Error_Event_On_Conflict = {
  constraint: Error_Event_Constraint;
  update_columns: Array<Error_Event_Update_Column>;
  where?: InputMaybe<Error_Event_Bool_Exp>;
};

/** Ordering options when selecting data from "error.event". */
export type Error_Event_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  endpoint?: InputMaybe<Order_By>;
  errors?: InputMaybe<Order_By>;
  href?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  meta?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  project?: InputMaybe<Order_By>;
  requestPayload?: InputMaybe<Order_By>;
  responseBody?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: error.event */
export type Error_Event_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Error_Event_Prepend_Input = {
  errors?: InputMaybe<Scalars['jsonb']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  requestPayload?: InputMaybe<Scalars['jsonb']>;
  responseBody?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "error.event" */
export const errorEventSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Endpoint: 'endpoint',
  /** column name */
  Errors: 'errors',
  /** column name */
  Href: 'href',
  /** column name */
  Id: 'id',
  /** column name */
  Meta: 'meta',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  Project: 'project',
  /** column name */
  RequestPayload: 'requestPayload',
  /** column name */
  ResponseBody: 'responseBody',
  /** column name */
  Status: 'status',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Error_Event_Select_Column =
  (typeof errorEventSelectColumn)[keyof typeof errorEventSelectColumn];
/** input type for updating data in table "error.event" */
export type Error_Event_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  endpoint?: InputMaybe<Scalars['String']>;
  errors?: InputMaybe<Scalars['jsonb']>;
  href?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  project?: InputMaybe<Error_ProjectName_Enum>;
  requestPayload?: InputMaybe<Scalars['jsonb']>;
  responseBody?: InputMaybe<Scalars['jsonb']>;
  status?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Error_Event_Stddev_Fields = {
  __typename?: 'error_event_stddev_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Error_Event_Stddev_Pop_Fields = {
  __typename?: 'error_event_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Error_Event_Stddev_Samp_Fields = {
  __typename?: 'error_event_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "error_event" */
export type Error_Event_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Error_Event_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Error_Event_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  endpoint?: InputMaybe<Scalars['String']>;
  errors?: InputMaybe<Scalars['jsonb']>;
  href?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  project?: InputMaybe<Error_ProjectName_Enum>;
  requestPayload?: InputMaybe<Scalars['jsonb']>;
  responseBody?: InputMaybe<Scalars['jsonb']>;
  status?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Error_Event_Sum_Fields = {
  __typename?: 'error_event_sum_fields';
  id: Maybe<Scalars['bigint']>;
  status: Maybe<Scalars['Int']>;
};

/** update columns of table "error.event" */
export const errorEventUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Endpoint: 'endpoint',
  /** column name */
  Errors: 'errors',
  /** column name */
  Href: 'href',
  /** column name */
  Id: 'id',
  /** column name */
  Meta: 'meta',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  Project: 'project',
  /** column name */
  RequestPayload: 'requestPayload',
  /** column name */
  ResponseBody: 'responseBody',
  /** column name */
  Status: 'status',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Error_Event_Update_Column =
  (typeof errorEventUpdateColumn)[keyof typeof errorEventUpdateColumn];
export type Error_Event_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Error_Event_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Error_Event_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Error_Event_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Error_Event_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Error_Event_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Error_Event_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Error_Event_Set_Input>;
  /** filter the rows which have to be updated */
  where: Error_Event_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Error_Event_Var_Pop_Fields = {
  __typename?: 'error_event_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Error_Event_Var_Samp_Fields = {
  __typename?: 'error_event_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Error_Event_Variance_Fields = {
  __typename?: 'error_event_variance_fields';
  id: Maybe<Scalars['Float']>;
  status: Maybe<Scalars['Float']>;
};

/** columns and relationships of "error.project" */
export type Error_Project = {
  __typename?: 'error_project';
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  name: Error_ProjectName_Enum;
  /** An object relationship */
  projectName: Error_ProjectName;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "error.projectName" */
export type Error_ProjectName = {
  __typename?: 'error_projectName';
  /** An object relationship */
  project: Maybe<Error_Project>;
  set: Scalars['String'];
};

/** aggregated selection of "error.projectName" */
export type Error_ProjectName_Aggregate = {
  __typename?: 'error_projectName_aggregate';
  aggregate: Maybe<Error_ProjectName_Aggregate_Fields>;
  nodes: Array<Error_ProjectName>;
};

/** aggregate fields of "error.projectName" */
export type Error_ProjectName_Aggregate_Fields = {
  __typename?: 'error_projectName_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Error_ProjectName_Max_Fields>;
  min: Maybe<Error_ProjectName_Min_Fields>;
};

/** aggregate fields of "error.projectName" */
export type Error_ProjectName_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Error_ProjectName_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "error.projectName". All fields are combined with a logical 'AND'. */
export type Error_ProjectName_Bool_Exp = {
  _and?: InputMaybe<Array<Error_ProjectName_Bool_Exp>>;
  _not?: InputMaybe<Error_ProjectName_Bool_Exp>;
  _or?: InputMaybe<Array<Error_ProjectName_Bool_Exp>>;
  project?: InputMaybe<Error_Project_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "error.projectName" */
export const errorProjectNameConstraint = {
  /** unique or primary key constraint on columns "set" */
  ProjectNamePkey: 'projectName_pkey',
} as const;

export type Error_ProjectName_Constraint =
  (typeof errorProjectNameConstraint)[keyof typeof errorProjectNameConstraint];
export const errorProjectNameEnum = {
  Dashboard: 'dashboard',
  ZonosCom: 'zonos_com',
} as const;

export type Error_ProjectName_Enum =
  (typeof errorProjectNameEnum)[keyof typeof errorProjectNameEnum];
/** Boolean expression to compare columns of type "error_projectName_enum". All fields are combined with logical 'AND'. */
export type Error_ProjectName_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Error_ProjectName_Enum>;
  _in?: InputMaybe<Array<Error_ProjectName_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Error_ProjectName_Enum>;
  _nin?: InputMaybe<Array<Error_ProjectName_Enum>>;
};

/** input type for inserting data into table "error.projectName" */
export type Error_ProjectName_Insert_Input = {
  project?: InputMaybe<Error_Project_Obj_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Error_ProjectName_Max_Fields = {
  __typename?: 'error_projectName_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Error_ProjectName_Min_Fields = {
  __typename?: 'error_projectName_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "error.projectName" */
export type Error_ProjectName_Mutation_Response = {
  __typename?: 'error_projectName_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Error_ProjectName>;
};

/** input type for inserting object relation for remote table "error.projectName" */
export type Error_ProjectName_Obj_Rel_Insert_Input = {
  data: Error_ProjectName_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Error_ProjectName_On_Conflict>;
};

/** on_conflict condition type for table "error.projectName" */
export type Error_ProjectName_On_Conflict = {
  constraint: Error_ProjectName_Constraint;
  update_columns: Array<Error_ProjectName_Update_Column>;
  where?: InputMaybe<Error_ProjectName_Bool_Exp>;
};

/** Ordering options when selecting data from "error.projectName". */
export type Error_ProjectName_Order_By = {
  project?: InputMaybe<Error_Project_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: error.projectName */
export type Error_ProjectName_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "error.projectName" */
export const errorProjectNameSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Error_ProjectName_Select_Column =
  (typeof errorProjectNameSelectColumn)[keyof typeof errorProjectNameSelectColumn];
/** input type for updating data in table "error.projectName" */
export type Error_ProjectName_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "error_projectName" */
export type Error_ProjectName_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Error_ProjectName_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Error_ProjectName_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "error.projectName" */
export const errorProjectNameUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Error_ProjectName_Update_Column =
  (typeof errorProjectNameUpdateColumn)[keyof typeof errorProjectNameUpdateColumn];
export type Error_ProjectName_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Error_ProjectName_Set_Input>;
  /** filter the rows which have to be updated */
  where: Error_ProjectName_Bool_Exp;
};

/** aggregated selection of "error.project" */
export type Error_Project_Aggregate = {
  __typename?: 'error_project_aggregate';
  aggregate: Maybe<Error_Project_Aggregate_Fields>;
  nodes: Array<Error_Project>;
};

/** aggregate fields of "error.project" */
export type Error_Project_Aggregate_Fields = {
  __typename?: 'error_project_aggregate_fields';
  avg: Maybe<Error_Project_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Error_Project_Max_Fields>;
  min: Maybe<Error_Project_Min_Fields>;
  stddev: Maybe<Error_Project_Stddev_Fields>;
  stddev_pop: Maybe<Error_Project_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Error_Project_Stddev_Samp_Fields>;
  sum: Maybe<Error_Project_Sum_Fields>;
  var_pop: Maybe<Error_Project_Var_Pop_Fields>;
  var_samp: Maybe<Error_Project_Var_Samp_Fields>;
  variance: Maybe<Error_Project_Variance_Fields>;
};

/** aggregate fields of "error.project" */
export type Error_Project_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Error_Project_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Error_Project_Avg_Fields = {
  __typename?: 'error_project_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "error.project". All fields are combined with a logical 'AND'. */
export type Error_Project_Bool_Exp = {
  _and?: InputMaybe<Array<Error_Project_Bool_Exp>>;
  _not?: InputMaybe<Error_Project_Bool_Exp>;
  _or?: InputMaybe<Array<Error_Project_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<Error_ProjectName_Enum_Comparison_Exp>;
  projectName?: InputMaybe<Error_ProjectName_Bool_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "error.project" */
export const errorProjectConstraint = {
  /** unique or primary key constraint on columns "name" */
  ProjectNameKey: 'project_name_key',
  /** unique or primary key constraint on columns "id" */
  ProjectPkey: 'project_pkey',
} as const;

export type Error_Project_Constraint =
  (typeof errorProjectConstraint)[keyof typeof errorProjectConstraint];
/** input type for incrementing numeric columns in table "error.project" */
export type Error_Project_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "error.project" */
export type Error_Project_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Error_ProjectName_Enum>;
  projectName?: InputMaybe<Error_ProjectName_Obj_Rel_Insert_Input>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Error_Project_Max_Fields = {
  __typename?: 'error_project_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Error_Project_Min_Fields = {
  __typename?: 'error_project_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "error.project" */
export type Error_Project_Mutation_Response = {
  __typename?: 'error_project_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Error_Project>;
};

/** input type for inserting object relation for remote table "error.project" */
export type Error_Project_Obj_Rel_Insert_Input = {
  data: Error_Project_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Error_Project_On_Conflict>;
};

/** on_conflict condition type for table "error.project" */
export type Error_Project_On_Conflict = {
  constraint: Error_Project_Constraint;
  update_columns: Array<Error_Project_Update_Column>;
  where?: InputMaybe<Error_Project_Bool_Exp>;
};

/** Ordering options when selecting data from "error.project". */
export type Error_Project_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projectName?: InputMaybe<Error_ProjectName_Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: error.project */
export type Error_Project_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "error.project" */
export const errorProjectSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Name: 'name',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Error_Project_Select_Column =
  (typeof errorProjectSelectColumn)[keyof typeof errorProjectSelectColumn];
/** input type for updating data in table "error.project" */
export type Error_Project_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Error_ProjectName_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Error_Project_Stddev_Fields = {
  __typename?: 'error_project_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Error_Project_Stddev_Pop_Fields = {
  __typename?: 'error_project_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Error_Project_Stddev_Samp_Fields = {
  __typename?: 'error_project_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "error_project" */
export type Error_Project_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Error_Project_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Error_Project_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Error_ProjectName_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Error_Project_Sum_Fields = {
  __typename?: 'error_project_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "error.project" */
export const errorProjectUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Name: 'name',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Error_Project_Update_Column =
  (typeof errorProjectUpdateColumn)[keyof typeof errorProjectUpdateColumn];
export type Error_Project_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Error_Project_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Error_Project_Set_Input>;
  /** filter the rows which have to be updated */
  where: Error_Project_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Error_Project_Var_Pop_Fields = {
  __typename?: 'error_project_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Error_Project_Var_Samp_Fields = {
  __typename?: 'error_project_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Error_Project_Variance_Fields = {
  __typename?: 'error_project_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "feature.aspect" */
export type Feature_Aspect = {
  __typename?: 'feature_aspect';
  /** An array relationship */
  aspectLinks: Array<Feature_AudienceAspectLink>;
  /** An aggregate relationship */
  aspectLinks_aggregate: Feature_AudienceAspectLink_Aggregate;
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  key: Feature_AspectKey_Enum;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "feature.aspect" */
export type Feature_AspectAspectLinksArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceAspectLink_Order_By>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

/** columns and relationships of "feature.aspect" */
export type Feature_AspectAspectLinks_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceAspectLink_Order_By>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

/** columns and relationships of "feature.aspectKey" */
export type Feature_AspectKey = {
  __typename?: 'feature_aspectKey';
  set: Scalars['String'];
};

/** aggregated selection of "feature.aspectKey" */
export type Feature_AspectKey_Aggregate = {
  __typename?: 'feature_aspectKey_aggregate';
  aggregate: Maybe<Feature_AspectKey_Aggregate_Fields>;
  nodes: Array<Feature_AspectKey>;
};

/** aggregate fields of "feature.aspectKey" */
export type Feature_AspectKey_Aggregate_Fields = {
  __typename?: 'feature_aspectKey_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Feature_AspectKey_Max_Fields>;
  min: Maybe<Feature_AspectKey_Min_Fields>;
};

/** aggregate fields of "feature.aspectKey" */
export type Feature_AspectKey_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_AspectKey_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "feature.aspectKey". All fields are combined with a logical 'AND'. */
export type Feature_AspectKey_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_AspectKey_Bool_Exp>>;
  _not?: InputMaybe<Feature_AspectKey_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_AspectKey_Bool_Exp>>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.aspectKey" */
export const featureAspectKeyConstraint = {
  /** unique or primary key constraint on columns "set" */
  AspectKeyPkey: 'aspectKey_pkey',
} as const;

export type Feature_AspectKey_Constraint =
  (typeof featureAspectKeyConstraint)[keyof typeof featureAspectKeyConstraint];
export const featureAspectKeyEnum = {
  AdminShowCarrierList: 'admin_show_carrier_list',
  Checkout_2_0: 'checkout_2_0',
  ClassifySingleRequest: 'classify_single_request',
  ComConsolidation: 'com_consolidation',
  DocsSearchOpenAiQa: 'docs_search_open_ai_qa',
  ExploreFrontendMutation: 'explore_frontend_mutation',
  ExploreWeaviateMutation: 'explore_weaviate_mutation',
  FeatureAspect: 'feature_aspect',
  LocaleMessage: 'locale_message',
  PageAuditor: 'page_auditor',
  PromptExplorer: 'prompt_explorer',
  TeamAuditor: 'team_auditor',
} as const;

export type Feature_AspectKey_Enum =
  (typeof featureAspectKeyEnum)[keyof typeof featureAspectKeyEnum];
/** Boolean expression to compare columns of type "feature_aspectKey_enum". All fields are combined with logical 'AND'. */
export type Feature_AspectKey_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Feature_AspectKey_Enum>;
  _in?: InputMaybe<Array<Feature_AspectKey_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Feature_AspectKey_Enum>;
  _nin?: InputMaybe<Array<Feature_AspectKey_Enum>>;
};

/** input type for inserting data into table "feature.aspectKey" */
export type Feature_AspectKey_Insert_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Feature_AspectKey_Max_Fields = {
  __typename?: 'feature_aspectKey_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Feature_AspectKey_Min_Fields = {
  __typename?: 'feature_aspectKey_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "feature.aspectKey" */
export type Feature_AspectKey_Mutation_Response = {
  __typename?: 'feature_aspectKey_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_AspectKey>;
};

/** on_conflict condition type for table "feature.aspectKey" */
export type Feature_AspectKey_On_Conflict = {
  constraint: Feature_AspectKey_Constraint;
  update_columns: Array<Feature_AspectKey_Update_Column>;
  where?: InputMaybe<Feature_AspectKey_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.aspectKey". */
export type Feature_AspectKey_Order_By = {
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.aspectKey */
export type Feature_AspectKey_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "feature.aspectKey" */
export const featureAspectKeySelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Feature_AspectKey_Select_Column =
  (typeof featureAspectKeySelectColumn)[keyof typeof featureAspectKeySelectColumn];
/** input type for updating data in table "feature.aspectKey" */
export type Feature_AspectKey_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "feature_aspectKey" */
export type Feature_AspectKey_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_AspectKey_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_AspectKey_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "feature.aspectKey" */
export const featureAspectKeyUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Feature_AspectKey_Update_Column =
  (typeof featureAspectKeyUpdateColumn)[keyof typeof featureAspectKeyUpdateColumn];
export type Feature_AspectKey_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_AspectKey_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_AspectKey_Bool_Exp;
};

/** aggregated selection of "feature.aspect" */
export type Feature_Aspect_Aggregate = {
  __typename?: 'feature_aspect_aggregate';
  aggregate: Maybe<Feature_Aspect_Aggregate_Fields>;
  nodes: Array<Feature_Aspect>;
};

/** aggregate fields of "feature.aspect" */
export type Feature_Aspect_Aggregate_Fields = {
  __typename?: 'feature_aspect_aggregate_fields';
  avg: Maybe<Feature_Aspect_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Feature_Aspect_Max_Fields>;
  min: Maybe<Feature_Aspect_Min_Fields>;
  stddev: Maybe<Feature_Aspect_Stddev_Fields>;
  stddev_pop: Maybe<Feature_Aspect_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Feature_Aspect_Stddev_Samp_Fields>;
  sum: Maybe<Feature_Aspect_Sum_Fields>;
  var_pop: Maybe<Feature_Aspect_Var_Pop_Fields>;
  var_samp: Maybe<Feature_Aspect_Var_Samp_Fields>;
  variance: Maybe<Feature_Aspect_Variance_Fields>;
};

/** aggregate fields of "feature.aspect" */
export type Feature_Aspect_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_Aspect_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Feature_Aspect_Avg_Fields = {
  __typename?: 'feature_aspect_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "feature.aspect". All fields are combined with a logical 'AND'. */
export type Feature_Aspect_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_Aspect_Bool_Exp>>;
  _not?: InputMaybe<Feature_Aspect_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_Aspect_Bool_Exp>>;
  aspectLinks?: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
  aspectLinks_aggregate?: InputMaybe<Feature_AudienceAspectLink_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  key?: InputMaybe<Feature_AspectKey_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.aspect" */
export const featureAspectConstraint = {
  /** unique or primary key constraint on columns "key" */
  AspectKeyKey: 'aspect_key_key',
  /** unique or primary key constraint on columns "id" */
  AspectPkey: 'aspect_pkey',
} as const;

export type Feature_Aspect_Constraint =
  (typeof featureAspectConstraint)[keyof typeof featureAspectConstraint];
/** input type for incrementing numeric columns in table "feature.aspect" */
export type Feature_Aspect_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "feature.aspect" */
export type Feature_Aspect_Insert_Input = {
  aspectLinks?: InputMaybe<Feature_AudienceAspectLink_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  key?: InputMaybe<Feature_AspectKey_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Feature_Aspect_Max_Fields = {
  __typename?: 'feature_aspect_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Feature_Aspect_Min_Fields = {
  __typename?: 'feature_aspect_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "feature.aspect" */
export type Feature_Aspect_Mutation_Response = {
  __typename?: 'feature_aspect_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_Aspect>;
};

/** input type for inserting object relation for remote table "feature.aspect" */
export type Feature_Aspect_Obj_Rel_Insert_Input = {
  data: Feature_Aspect_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Feature_Aspect_On_Conflict>;
};

/** on_conflict condition type for table "feature.aspect" */
export type Feature_Aspect_On_Conflict = {
  constraint: Feature_Aspect_Constraint;
  update_columns: Array<Feature_Aspect_Update_Column>;
  where?: InputMaybe<Feature_Aspect_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.aspect". */
export type Feature_Aspect_Order_By = {
  aspectLinks_aggregate?: InputMaybe<Feature_AudienceAspectLink_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.aspect */
export type Feature_Aspect_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "feature.aspect" */
export const featureAspectSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Key: 'key',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_Aspect_Select_Column =
  (typeof featureAspectSelectColumn)[keyof typeof featureAspectSelectColumn];
/** input type for updating data in table "feature.aspect" */
export type Feature_Aspect_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  key?: InputMaybe<Feature_AspectKey_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Feature_Aspect_Stddev_Fields = {
  __typename?: 'feature_aspect_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Feature_Aspect_Stddev_Pop_Fields = {
  __typename?: 'feature_aspect_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Feature_Aspect_Stddev_Samp_Fields = {
  __typename?: 'feature_aspect_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "feature_aspect" */
export type Feature_Aspect_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_Aspect_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_Aspect_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  key?: InputMaybe<Feature_AspectKey_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Feature_Aspect_Sum_Fields = {
  __typename?: 'feature_aspect_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "feature.aspect" */
export const featureAspectUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Key: 'key',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_Aspect_Update_Column =
  (typeof featureAspectUpdateColumn)[keyof typeof featureAspectUpdateColumn];
export type Feature_Aspect_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Feature_Aspect_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_Aspect_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_Aspect_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Feature_Aspect_Var_Pop_Fields = {
  __typename?: 'feature_aspect_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Feature_Aspect_Var_Samp_Fields = {
  __typename?: 'feature_aspect_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Feature_Aspect_Variance_Fields = {
  __typename?: 'feature_aspect_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "feature.audience" */
export type Feature_Audience = {
  __typename?: 'feature_audience';
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  entityLinks: Array<Feature_AudienceEntityLink>;
  /** An aggregate relationship */
  entityLinks_aggregate: Feature_AudienceEntityLink_Aggregate;
  id: Scalars['bigint'];
  name: Feature_AudienceName_Enum;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "feature.audience" */
export type Feature_AudienceEntityLinksArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceEntityLink_Order_By>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

/** columns and relationships of "feature.audience" */
export type Feature_AudienceEntityLinks_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceEntityLink_Order_By>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

/** many-to-many relationship: audience => aspect linking table */
export type Feature_AudienceAspectLink = {
  __typename?: 'feature_audienceAspectLink';
  /** An object relationship */
  aspect: Feature_Aspect;
  aspectId: Scalars['bigint'];
  /** An object relationship */
  audience: Feature_Audience;
  audienceId: Scalars['bigint'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Aggregate = {
  __typename?: 'feature_audienceAspectLink_aggregate';
  aggregate: Maybe<Feature_AudienceAspectLink_Aggregate_Fields>;
  nodes: Array<Feature_AudienceAspectLink>;
};

export type Feature_AudienceAspectLink_Aggregate_Bool_Exp = {
  count?: InputMaybe<Feature_AudienceAspectLink_Aggregate_Bool_Exp_Count>;
};

export type Feature_AudienceAspectLink_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Aggregate_Fields = {
  __typename?: 'feature_audienceAspectLink_aggregate_fields';
  avg: Maybe<Feature_AudienceAspectLink_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Feature_AudienceAspectLink_Max_Fields>;
  min: Maybe<Feature_AudienceAspectLink_Min_Fields>;
  stddev: Maybe<Feature_AudienceAspectLink_Stddev_Fields>;
  stddev_pop: Maybe<Feature_AudienceAspectLink_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Feature_AudienceAspectLink_Stddev_Samp_Fields>;
  sum: Maybe<Feature_AudienceAspectLink_Sum_Fields>;
  var_pop: Maybe<Feature_AudienceAspectLink_Var_Pop_Fields>;
  var_samp: Maybe<Feature_AudienceAspectLink_Var_Samp_Fields>;
  variance: Maybe<Feature_AudienceAspectLink_Variance_Fields>;
};

/** aggregate fields of "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Aggregate_Order_By = {
  avg?: InputMaybe<Feature_AudienceAspectLink_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Feature_AudienceAspectLink_Max_Order_By>;
  min?: InputMaybe<Feature_AudienceAspectLink_Min_Order_By>;
  stddev?: InputMaybe<Feature_AudienceAspectLink_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Feature_AudienceAspectLink_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Feature_AudienceAspectLink_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Feature_AudienceAspectLink_Sum_Order_By>;
  var_pop?: InputMaybe<Feature_AudienceAspectLink_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Feature_AudienceAspectLink_Var_Samp_Order_By>;
  variance?: InputMaybe<Feature_AudienceAspectLink_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Arr_Rel_Insert_Input = {
  data: Array<Feature_AudienceAspectLink_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Feature_AudienceAspectLink_On_Conflict>;
};

/** aggregate avg on columns */
export type Feature_AudienceAspectLink_Avg_Fields = {
  __typename?: 'feature_audienceAspectLink_avg_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Avg_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "feature.audienceAspectLink". All fields are combined with a logical 'AND'. */
export type Feature_AudienceAspectLink_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_AudienceAspectLink_Bool_Exp>>;
  _not?: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_AudienceAspectLink_Bool_Exp>>;
  aspect?: InputMaybe<Feature_Aspect_Bool_Exp>;
  aspectId?: InputMaybe<Bigint_Comparison_Exp>;
  audience?: InputMaybe<Feature_Audience_Bool_Exp>;
  audienceId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.audienceAspectLink" */
export const featureAudienceAspectLinkConstraint = {
  /** unique or primary key constraint on columns "id" */
  AudienceAspectLinkPkey: 'audienceAspectLink_pkey',
} as const;

export type Feature_AudienceAspectLink_Constraint =
  (typeof featureAudienceAspectLinkConstraint)[keyof typeof featureAudienceAspectLinkConstraint];
/** input type for incrementing numeric columns in table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Inc_Input = {
  aspectId?: InputMaybe<Scalars['bigint']>;
  audienceId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Insert_Input = {
  aspect?: InputMaybe<Feature_Aspect_Obj_Rel_Insert_Input>;
  aspectId?: InputMaybe<Scalars['bigint']>;
  audience?: InputMaybe<Feature_Audience_Obj_Rel_Insert_Input>;
  audienceId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Feature_AudienceAspectLink_Max_Fields = {
  __typename?: 'feature_audienceAspectLink_max_fields';
  aspectId: Maybe<Scalars['bigint']>;
  audienceId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Max_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Feature_AudienceAspectLink_Min_Fields = {
  __typename?: 'feature_audienceAspectLink_min_fields';
  aspectId: Maybe<Scalars['bigint']>;
  audienceId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Min_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Mutation_Response = {
  __typename?: 'feature_audienceAspectLink_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_AudienceAspectLink>;
};

/** on_conflict condition type for table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_On_Conflict = {
  constraint: Feature_AudienceAspectLink_Constraint;
  update_columns: Array<Feature_AudienceAspectLink_Update_Column>;
  where?: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.audienceAspectLink". */
export type Feature_AudienceAspectLink_Order_By = {
  aspect?: InputMaybe<Feature_Aspect_Order_By>;
  aspectId?: InputMaybe<Order_By>;
  audience?: InputMaybe<Feature_Audience_Order_By>;
  audienceId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.audienceAspectLink */
export type Feature_AudienceAspectLink_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "feature.audienceAspectLink" */
export const featureAudienceAspectLinkSelectColumn = {
  /** column name */
  AspectId: 'aspectId',
  /** column name */
  AudienceId: 'audienceId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_AudienceAspectLink_Select_Column =
  (typeof featureAudienceAspectLinkSelectColumn)[keyof typeof featureAudienceAspectLinkSelectColumn];
/** input type for updating data in table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Set_Input = {
  aspectId?: InputMaybe<Scalars['bigint']>;
  audienceId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Feature_AudienceAspectLink_Stddev_Fields = {
  __typename?: 'feature_audienceAspectLink_stddev_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Stddev_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Feature_AudienceAspectLink_Stddev_Pop_Fields = {
  __typename?: 'feature_audienceAspectLink_stddev_pop_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Stddev_Pop_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Feature_AudienceAspectLink_Stddev_Samp_Fields = {
  __typename?: 'feature_audienceAspectLink_stddev_samp_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Stddev_Samp_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "feature_audienceAspectLink" */
export type Feature_AudienceAspectLink_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_AudienceAspectLink_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_AudienceAspectLink_Stream_Cursor_Value_Input = {
  aspectId?: InputMaybe<Scalars['bigint']>;
  audienceId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Feature_AudienceAspectLink_Sum_Fields = {
  __typename?: 'feature_audienceAspectLink_sum_fields';
  aspectId: Maybe<Scalars['bigint']>;
  audienceId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Sum_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "feature.audienceAspectLink" */
export const featureAudienceAspectLinkUpdateColumn = {
  /** column name */
  AspectId: 'aspectId',
  /** column name */
  AudienceId: 'audienceId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_AudienceAspectLink_Update_Column =
  (typeof featureAudienceAspectLinkUpdateColumn)[keyof typeof featureAudienceAspectLinkUpdateColumn];
export type Feature_AudienceAspectLink_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Feature_AudienceAspectLink_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_AudienceAspectLink_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_AudienceAspectLink_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Feature_AudienceAspectLink_Var_Pop_Fields = {
  __typename?: 'feature_audienceAspectLink_var_pop_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Var_Pop_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Feature_AudienceAspectLink_Var_Samp_Fields = {
  __typename?: 'feature_audienceAspectLink_var_samp_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Var_Samp_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Feature_AudienceAspectLink_Variance_Fields = {
  __typename?: 'feature_audienceAspectLink_variance_fields';
  aspectId: Maybe<Scalars['Float']>;
  audienceId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "feature.audienceAspectLink" */
export type Feature_AudienceAspectLink_Variance_Order_By = {
  aspectId?: InputMaybe<Order_By>;
  audienceId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** many-to-many-relationship: audience => entity linking table */
export type Feature_AudienceEntityLink = {
  __typename?: 'feature_audienceEntityLink';
  /** An object relationship */
  audience: Feature_Audience;
  audienceId: Scalars['bigint'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  entity: Feature_Entity;
  entityId: Scalars['bigint'];
  id: Scalars['bigint'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Aggregate = {
  __typename?: 'feature_audienceEntityLink_aggregate';
  aggregate: Maybe<Feature_AudienceEntityLink_Aggregate_Fields>;
  nodes: Array<Feature_AudienceEntityLink>;
};

export type Feature_AudienceEntityLink_Aggregate_Bool_Exp = {
  count?: InputMaybe<Feature_AudienceEntityLink_Aggregate_Bool_Exp_Count>;
};

export type Feature_AudienceEntityLink_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Aggregate_Fields = {
  __typename?: 'feature_audienceEntityLink_aggregate_fields';
  avg: Maybe<Feature_AudienceEntityLink_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Feature_AudienceEntityLink_Max_Fields>;
  min: Maybe<Feature_AudienceEntityLink_Min_Fields>;
  stddev: Maybe<Feature_AudienceEntityLink_Stddev_Fields>;
  stddev_pop: Maybe<Feature_AudienceEntityLink_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Feature_AudienceEntityLink_Stddev_Samp_Fields>;
  sum: Maybe<Feature_AudienceEntityLink_Sum_Fields>;
  var_pop: Maybe<Feature_AudienceEntityLink_Var_Pop_Fields>;
  var_samp: Maybe<Feature_AudienceEntityLink_Var_Samp_Fields>;
  variance: Maybe<Feature_AudienceEntityLink_Variance_Fields>;
};

/** aggregate fields of "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Aggregate_Order_By = {
  avg?: InputMaybe<Feature_AudienceEntityLink_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Feature_AudienceEntityLink_Max_Order_By>;
  min?: InputMaybe<Feature_AudienceEntityLink_Min_Order_By>;
  stddev?: InputMaybe<Feature_AudienceEntityLink_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Feature_AudienceEntityLink_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Feature_AudienceEntityLink_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Feature_AudienceEntityLink_Sum_Order_By>;
  var_pop?: InputMaybe<Feature_AudienceEntityLink_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Feature_AudienceEntityLink_Var_Samp_Order_By>;
  variance?: InputMaybe<Feature_AudienceEntityLink_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Arr_Rel_Insert_Input = {
  data: Array<Feature_AudienceEntityLink_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Feature_AudienceEntityLink_On_Conflict>;
};

/** aggregate avg on columns */
export type Feature_AudienceEntityLink_Avg_Fields = {
  __typename?: 'feature_audienceEntityLink_avg_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Avg_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "feature.audienceEntityLink". All fields are combined with a logical 'AND'. */
export type Feature_AudienceEntityLink_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_AudienceEntityLink_Bool_Exp>>;
  _not?: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_AudienceEntityLink_Bool_Exp>>;
  audience?: InputMaybe<Feature_Audience_Bool_Exp>;
  audienceId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  entity?: InputMaybe<Feature_Entity_Bool_Exp>;
  entityId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.audienceEntityLink" */
export const featureAudienceEntityLinkConstraint = {
  /** unique or primary key constraint on columns "id" */
  AudienceEntityLinkPkey: 'audienceEntityLink_pkey',
} as const;

export type Feature_AudienceEntityLink_Constraint =
  (typeof featureAudienceEntityLinkConstraint)[keyof typeof featureAudienceEntityLinkConstraint];
/** input type for incrementing numeric columns in table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Inc_Input = {
  audienceId?: InputMaybe<Scalars['bigint']>;
  entityId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Insert_Input = {
  audience?: InputMaybe<Feature_Audience_Obj_Rel_Insert_Input>;
  audienceId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  entity?: InputMaybe<Feature_Entity_Obj_Rel_Insert_Input>;
  entityId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Feature_AudienceEntityLink_Max_Fields = {
  __typename?: 'feature_audienceEntityLink_max_fields';
  audienceId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  entityId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Max_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Feature_AudienceEntityLink_Min_Fields = {
  __typename?: 'feature_audienceEntityLink_min_fields';
  audienceId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  entityId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Min_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Mutation_Response = {
  __typename?: 'feature_audienceEntityLink_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_AudienceEntityLink>;
};

/** on_conflict condition type for table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_On_Conflict = {
  constraint: Feature_AudienceEntityLink_Constraint;
  update_columns: Array<Feature_AudienceEntityLink_Update_Column>;
  where?: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.audienceEntityLink". */
export type Feature_AudienceEntityLink_Order_By = {
  audience?: InputMaybe<Feature_Audience_Order_By>;
  audienceId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  entity?: InputMaybe<Feature_Entity_Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.audienceEntityLink */
export type Feature_AudienceEntityLink_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "feature.audienceEntityLink" */
export const featureAudienceEntityLinkSelectColumn = {
  /** column name */
  AudienceId: 'audienceId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  EntityId: 'entityId',
  /** column name */
  Id: 'id',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_AudienceEntityLink_Select_Column =
  (typeof featureAudienceEntityLinkSelectColumn)[keyof typeof featureAudienceEntityLinkSelectColumn];
/** input type for updating data in table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Set_Input = {
  audienceId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  entityId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Feature_AudienceEntityLink_Stddev_Fields = {
  __typename?: 'feature_audienceEntityLink_stddev_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Stddev_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Feature_AudienceEntityLink_Stddev_Pop_Fields = {
  __typename?: 'feature_audienceEntityLink_stddev_pop_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Stddev_Pop_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Feature_AudienceEntityLink_Stddev_Samp_Fields = {
  __typename?: 'feature_audienceEntityLink_stddev_samp_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Stddev_Samp_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "feature_audienceEntityLink" */
export type Feature_AudienceEntityLink_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_AudienceEntityLink_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_AudienceEntityLink_Stream_Cursor_Value_Input = {
  audienceId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  entityId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Feature_AudienceEntityLink_Sum_Fields = {
  __typename?: 'feature_audienceEntityLink_sum_fields';
  audienceId: Maybe<Scalars['bigint']>;
  entityId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Sum_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "feature.audienceEntityLink" */
export const featureAudienceEntityLinkUpdateColumn = {
  /** column name */
  AudienceId: 'audienceId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  EntityId: 'entityId',
  /** column name */
  Id: 'id',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_AudienceEntityLink_Update_Column =
  (typeof featureAudienceEntityLinkUpdateColumn)[keyof typeof featureAudienceEntityLinkUpdateColumn];
export type Feature_AudienceEntityLink_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Feature_AudienceEntityLink_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_AudienceEntityLink_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_AudienceEntityLink_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Feature_AudienceEntityLink_Var_Pop_Fields = {
  __typename?: 'feature_audienceEntityLink_var_pop_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Var_Pop_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Feature_AudienceEntityLink_Var_Samp_Fields = {
  __typename?: 'feature_audienceEntityLink_var_samp_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Var_Samp_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Feature_AudienceEntityLink_Variance_Fields = {
  __typename?: 'feature_audienceEntityLink_variance_fields';
  audienceId: Maybe<Scalars['Float']>;
  entityId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "feature.audienceEntityLink" */
export type Feature_AudienceEntityLink_Variance_Order_By = {
  audienceId?: InputMaybe<Order_By>;
  entityId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "feature.audienceName" */
export type Feature_AudienceName = {
  __typename?: 'feature_audienceName';
  set: Scalars['String'];
};

/** aggregated selection of "feature.audienceName" */
export type Feature_AudienceName_Aggregate = {
  __typename?: 'feature_audienceName_aggregate';
  aggregate: Maybe<Feature_AudienceName_Aggregate_Fields>;
  nodes: Array<Feature_AudienceName>;
};

/** aggregate fields of "feature.audienceName" */
export type Feature_AudienceName_Aggregate_Fields = {
  __typename?: 'feature_audienceName_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Feature_AudienceName_Max_Fields>;
  min: Maybe<Feature_AudienceName_Min_Fields>;
};

/** aggregate fields of "feature.audienceName" */
export type Feature_AudienceName_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_AudienceName_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "feature.audienceName". All fields are combined with a logical 'AND'. */
export type Feature_AudienceName_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_AudienceName_Bool_Exp>>;
  _not?: InputMaybe<Feature_AudienceName_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_AudienceName_Bool_Exp>>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.audienceName" */
export const featureAudienceNameConstraint = {
  /** unique or primary key constraint on columns "set" */
  AudienceNamePkey: 'audienceName_pkey',
} as const;

export type Feature_AudienceName_Constraint =
  (typeof featureAudienceNameConstraint)[keyof typeof featureAudienceNameConstraint];
export const featureAudienceNameEnum = {
  AccountsReceivable: 'accounts_receivable',
  AustraliaHead: 'australia_head',
  CheckoutSales: 'checkout_sales',
  Designer: 'designer',
  DocsContributor: 'docs_contributor',
  EngineeringHead: 'engineering_head',
  Executive: 'executive',
  ExecutiveAssistant: 'executive_assistant',
  FrontendEngineer: 'frontend_engineer',
  I18nKnownLanguage: 'i18n_known_language',
  I18nSales: 'i18n_sales',
  ProServeHead: 'pro_serve_head',
  ProductManager: 'product_manager',
  ReportTo: 'report_to',
  Seo: 'seo',
  TechLead: 'tech_lead',
} as const;

export type Feature_AudienceName_Enum =
  (typeof featureAudienceNameEnum)[keyof typeof featureAudienceNameEnum];
/** Boolean expression to compare columns of type "feature_audienceName_enum". All fields are combined with logical 'AND'. */
export type Feature_AudienceName_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Feature_AudienceName_Enum>;
  _in?: InputMaybe<Array<Feature_AudienceName_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Feature_AudienceName_Enum>;
  _nin?: InputMaybe<Array<Feature_AudienceName_Enum>>;
};

/** input type for inserting data into table "feature.audienceName" */
export type Feature_AudienceName_Insert_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Feature_AudienceName_Max_Fields = {
  __typename?: 'feature_audienceName_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Feature_AudienceName_Min_Fields = {
  __typename?: 'feature_audienceName_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "feature.audienceName" */
export type Feature_AudienceName_Mutation_Response = {
  __typename?: 'feature_audienceName_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_AudienceName>;
};

/** on_conflict condition type for table "feature.audienceName" */
export type Feature_AudienceName_On_Conflict = {
  constraint: Feature_AudienceName_Constraint;
  update_columns: Array<Feature_AudienceName_Update_Column>;
  where?: InputMaybe<Feature_AudienceName_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.audienceName". */
export type Feature_AudienceName_Order_By = {
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.audienceName */
export type Feature_AudienceName_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "feature.audienceName" */
export const featureAudienceNameSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Feature_AudienceName_Select_Column =
  (typeof featureAudienceNameSelectColumn)[keyof typeof featureAudienceNameSelectColumn];
/** input type for updating data in table "feature.audienceName" */
export type Feature_AudienceName_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "feature_audienceName" */
export type Feature_AudienceName_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_AudienceName_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_AudienceName_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "feature.audienceName" */
export const featureAudienceNameUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Feature_AudienceName_Update_Column =
  (typeof featureAudienceNameUpdateColumn)[keyof typeof featureAudienceNameUpdateColumn];
export type Feature_AudienceName_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_AudienceName_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_AudienceName_Bool_Exp;
};

/** aggregated selection of "feature.audience" */
export type Feature_Audience_Aggregate = {
  __typename?: 'feature_audience_aggregate';
  aggregate: Maybe<Feature_Audience_Aggregate_Fields>;
  nodes: Array<Feature_Audience>;
};

/** aggregate fields of "feature.audience" */
export type Feature_Audience_Aggregate_Fields = {
  __typename?: 'feature_audience_aggregate_fields';
  avg: Maybe<Feature_Audience_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Feature_Audience_Max_Fields>;
  min: Maybe<Feature_Audience_Min_Fields>;
  stddev: Maybe<Feature_Audience_Stddev_Fields>;
  stddev_pop: Maybe<Feature_Audience_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Feature_Audience_Stddev_Samp_Fields>;
  sum: Maybe<Feature_Audience_Sum_Fields>;
  var_pop: Maybe<Feature_Audience_Var_Pop_Fields>;
  var_samp: Maybe<Feature_Audience_Var_Samp_Fields>;
  variance: Maybe<Feature_Audience_Variance_Fields>;
};

/** aggregate fields of "feature.audience" */
export type Feature_Audience_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_Audience_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Feature_Audience_Avg_Fields = {
  __typename?: 'feature_audience_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "feature.audience". All fields are combined with a logical 'AND'. */
export type Feature_Audience_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_Audience_Bool_Exp>>;
  _not?: InputMaybe<Feature_Audience_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_Audience_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  entityLinks?: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
  entityLinks_aggregate?: InputMaybe<Feature_AudienceEntityLink_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<Feature_AudienceName_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.audience" */
export const featureAudienceConstraint = {
  /** unique or primary key constraint on columns "name" */
  AudienceNameKey: 'audience_name_key',
  /** unique or primary key constraint on columns "id" */
  AudiencePkey: 'audience_pkey',
} as const;

export type Feature_Audience_Constraint =
  (typeof featureAudienceConstraint)[keyof typeof featureAudienceConstraint];
/** input type for incrementing numeric columns in table "feature.audience" */
export type Feature_Audience_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "feature.audience" */
export type Feature_Audience_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  entityLinks?: InputMaybe<Feature_AudienceEntityLink_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Feature_AudienceName_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Feature_Audience_Max_Fields = {
  __typename?: 'feature_audience_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Feature_Audience_Min_Fields = {
  __typename?: 'feature_audience_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "feature.audience" */
export type Feature_Audience_Mutation_Response = {
  __typename?: 'feature_audience_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_Audience>;
};

/** input type for inserting object relation for remote table "feature.audience" */
export type Feature_Audience_Obj_Rel_Insert_Input = {
  data: Feature_Audience_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Feature_Audience_On_Conflict>;
};

/** on_conflict condition type for table "feature.audience" */
export type Feature_Audience_On_Conflict = {
  constraint: Feature_Audience_Constraint;
  update_columns: Array<Feature_Audience_Update_Column>;
  where?: InputMaybe<Feature_Audience_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.audience". */
export type Feature_Audience_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  entityLinks_aggregate?: InputMaybe<Feature_AudienceEntityLink_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.audience */
export type Feature_Audience_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "feature.audience" */
export const featureAudienceSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Name: 'name',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_Audience_Select_Column =
  (typeof featureAudienceSelectColumn)[keyof typeof featureAudienceSelectColumn];
/** input type for updating data in table "feature.audience" */
export type Feature_Audience_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Feature_AudienceName_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Feature_Audience_Stddev_Fields = {
  __typename?: 'feature_audience_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Feature_Audience_Stddev_Pop_Fields = {
  __typename?: 'feature_audience_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Feature_Audience_Stddev_Samp_Fields = {
  __typename?: 'feature_audience_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "feature_audience" */
export type Feature_Audience_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_Audience_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_Audience_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  name?: InputMaybe<Feature_AudienceName_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Feature_Audience_Sum_Fields = {
  __typename?: 'feature_audience_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "feature.audience" */
export const featureAudienceUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Name: 'name',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_Audience_Update_Column =
  (typeof featureAudienceUpdateColumn)[keyof typeof featureAudienceUpdateColumn];
export type Feature_Audience_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Feature_Audience_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_Audience_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_Audience_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Feature_Audience_Var_Pop_Fields = {
  __typename?: 'feature_audience_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Feature_Audience_Var_Samp_Fields = {
  __typename?: 'feature_audience_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Feature_Audience_Variance_Fields = {
  __typename?: 'feature_audience_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "feature.entity" */
export type Feature_Entity = {
  __typename?: 'feature_entity';
  createdAt: Scalars['timestamptz'];
  email: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  storeId: Maybe<Scalars['bigint']>;
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "feature.entity" */
export type Feature_Entity_Aggregate = {
  __typename?: 'feature_entity_aggregate';
  aggregate: Maybe<Feature_Entity_Aggregate_Fields>;
  nodes: Array<Feature_Entity>;
};

/** aggregate fields of "feature.entity" */
export type Feature_Entity_Aggregate_Fields = {
  __typename?: 'feature_entity_aggregate_fields';
  avg: Maybe<Feature_Entity_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Feature_Entity_Max_Fields>;
  min: Maybe<Feature_Entity_Min_Fields>;
  stddev: Maybe<Feature_Entity_Stddev_Fields>;
  stddev_pop: Maybe<Feature_Entity_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Feature_Entity_Stddev_Samp_Fields>;
  sum: Maybe<Feature_Entity_Sum_Fields>;
  var_pop: Maybe<Feature_Entity_Var_Pop_Fields>;
  var_samp: Maybe<Feature_Entity_Var_Samp_Fields>;
  variance: Maybe<Feature_Entity_Variance_Fields>;
};

/** aggregate fields of "feature.entity" */
export type Feature_Entity_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Feature_Entity_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Feature_Entity_Avg_Fields = {
  __typename?: 'feature_entity_avg_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "feature.entity". All fields are combined with a logical 'AND'. */
export type Feature_Entity_Bool_Exp = {
  _and?: InputMaybe<Array<Feature_Entity_Bool_Exp>>;
  _not?: InputMaybe<Feature_Entity_Bool_Exp>;
  _or?: InputMaybe<Array<Feature_Entity_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  storeId?: InputMaybe<Bigint_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature.entity" */
export const featureEntityConstraint = {
  /** unique or primary key constraint on columns "email" */
  EntityEmailKey: 'entity_email_key',
  /** unique or primary key constraint on columns "id" */
  EntityPkey: 'entity_pkey',
  /** unique or primary key constraint on columns "storeId" */
  EntityStoreIdKey: 'entity_storeId_key',
} as const;

export type Feature_Entity_Constraint =
  (typeof featureEntityConstraint)[keyof typeof featureEntityConstraint];
/** input type for incrementing numeric columns in table "feature.entity" */
export type Feature_Entity_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  storeId?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "feature.entity" */
export type Feature_Entity_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  storeId?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Feature_Entity_Max_Fields = {
  __typename?: 'feature_entity_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  email: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Feature_Entity_Min_Fields = {
  __typename?: 'feature_entity_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  email: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "feature.entity" */
export type Feature_Entity_Mutation_Response = {
  __typename?: 'feature_entity_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_Entity>;
};

/** input type for inserting object relation for remote table "feature.entity" */
export type Feature_Entity_Obj_Rel_Insert_Input = {
  data: Feature_Entity_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Feature_Entity_On_Conflict>;
};

/** on_conflict condition type for table "feature.entity" */
export type Feature_Entity_On_Conflict = {
  constraint: Feature_Entity_Constraint;
  update_columns: Array<Feature_Entity_Update_Column>;
  where?: InputMaybe<Feature_Entity_Bool_Exp>;
};

/** Ordering options when selecting data from "feature.entity". */
export type Feature_Entity_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  storeId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: feature.entity */
export type Feature_Entity_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "feature.entity" */
export const featureEntitySelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Email: 'email',
  /** column name */
  Id: 'id',
  /** column name */
  StoreId: 'storeId',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_Entity_Select_Column =
  (typeof featureEntitySelectColumn)[keyof typeof featureEntitySelectColumn];
/** input type for updating data in table "feature.entity" */
export type Feature_Entity_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  storeId?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Feature_Entity_Stddev_Fields = {
  __typename?: 'feature_entity_stddev_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Feature_Entity_Stddev_Pop_Fields = {
  __typename?: 'feature_entity_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Feature_Entity_Stddev_Samp_Fields = {
  __typename?: 'feature_entity_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "feature_entity" */
export type Feature_Entity_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Feature_Entity_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Feature_Entity_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  storeId?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Feature_Entity_Sum_Fields = {
  __typename?: 'feature_entity_sum_fields';
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['bigint']>;
};

/** update columns of table "feature.entity" */
export const featureEntityUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Email: 'email',
  /** column name */
  Id: 'id',
  /** column name */
  StoreId: 'storeId',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Feature_Entity_Update_Column =
  (typeof featureEntityUpdateColumn)[keyof typeof featureEntityUpdateColumn];
export type Feature_Entity_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Feature_Entity_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Feature_Entity_Set_Input>;
  /** filter the rows which have to be updated */
  where: Feature_Entity_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Feature_Entity_Var_Pop_Fields = {
  __typename?: 'feature_entity_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Feature_Entity_Var_Samp_Fields = {
  __typename?: 'feature_entity_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Feature_Entity_Variance_Fields = {
  __typename?: 'feature_entity_variance_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** columns and relationships of "graphHub.category" */
export type GraphHub_Category = {
  __typename?: 'graphHub_category';
  /** An object relationship */
  categoryLabel: GraphHub_CategoryLabel;
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  deployedInstances: Array<GraphHub_DeployedInstance>;
  /** An aggregate relationship */
  deployedInstances_aggregate: GraphHub_DeployedInstance_Aggregate;
  /** An array relationship */
  draftInstances: Array<GraphHub_DraftInstance>;
  /** An aggregate relationship */
  draftInstances_aggregate: GraphHub_DraftInstance_Aggregate;
  id: Scalars['bigint'];
  label: GraphHub_CategoryLabel_Enum;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "graphHub.category" */
export type GraphHub_CategoryDeployedInstancesArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.category" */
export type GraphHub_CategoryDeployedInstances_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.category" */
export type GraphHub_CategoryDraftInstancesArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.category" */
export type GraphHub_CategoryDraftInstances_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel = {
  __typename?: 'graphHub_categoryLabel';
  /** An object relationship */
  category: Maybe<GraphHub_Category>;
  set: Scalars['String'];
};

/** aggregated selection of "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Aggregate = {
  __typename?: 'graphHub_categoryLabel_aggregate';
  aggregate: Maybe<GraphHub_CategoryLabel_Aggregate_Fields>;
  nodes: Array<GraphHub_CategoryLabel>;
};

/** aggregate fields of "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Aggregate_Fields = {
  __typename?: 'graphHub_categoryLabel_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<GraphHub_CategoryLabel_Max_Fields>;
  min: Maybe<GraphHub_CategoryLabel_Min_Fields>;
};

/** aggregate fields of "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_CategoryLabel_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "graphHub.categoryLabel". All fields are combined with a logical 'AND'. */
export type GraphHub_CategoryLabel_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_CategoryLabel_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_CategoryLabel_Bool_Exp>>;
  category?: InputMaybe<GraphHub_Category_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.categoryLabel" */
export const graphHubCategoryLabelConstraint = {
  /** unique or primary key constraint on columns "set" */
  CategoryLabelPkey: 'categoryLabel_pkey',
} as const;

export type GraphHub_CategoryLabel_Constraint =
  (typeof graphHubCategoryLabelConstraint)[keyof typeof graphHubCategoryLabelConstraint];
export const graphHubCategoryLabelEnum = {
  Carrier: 'carrier',
  Catalog: 'catalog',
  Classify: 'classify',
  Label: 'label',
  LandedCost: 'landed_cost',
} as const;

export type GraphHub_CategoryLabel_Enum =
  (typeof graphHubCategoryLabelEnum)[keyof typeof graphHubCategoryLabelEnum];
/** Boolean expression to compare columns of type "graphHub_categoryLabel_enum". All fields are combined with logical 'AND'. */
export type GraphHub_CategoryLabel_Enum_Comparison_Exp = {
  _eq?: InputMaybe<GraphHub_CategoryLabel_Enum>;
  _in?: InputMaybe<Array<GraphHub_CategoryLabel_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<GraphHub_CategoryLabel_Enum>;
  _nin?: InputMaybe<Array<GraphHub_CategoryLabel_Enum>>;
};

/** input type for inserting data into table "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Insert_Input = {
  category?: InputMaybe<GraphHub_Category_Obj_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type GraphHub_CategoryLabel_Max_Fields = {
  __typename?: 'graphHub_categoryLabel_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type GraphHub_CategoryLabel_Min_Fields = {
  __typename?: 'graphHub_categoryLabel_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Mutation_Response = {
  __typename?: 'graphHub_categoryLabel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_CategoryLabel>;
};

/** input type for inserting object relation for remote table "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Obj_Rel_Insert_Input = {
  data: GraphHub_CategoryLabel_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_CategoryLabel_On_Conflict>;
};

/** on_conflict condition type for table "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_On_Conflict = {
  constraint: GraphHub_CategoryLabel_Constraint;
  update_columns: Array<GraphHub_CategoryLabel_Update_Column>;
  where?: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.categoryLabel". */
export type GraphHub_CategoryLabel_Order_By = {
  category?: InputMaybe<GraphHub_Category_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.categoryLabel */
export type GraphHub_CategoryLabel_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "graphHub.categoryLabel" */
export const graphHubCategoryLabelSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type GraphHub_CategoryLabel_Select_Column =
  (typeof graphHubCategoryLabelSelectColumn)[keyof typeof graphHubCategoryLabelSelectColumn];
/** input type for updating data in table "graphHub.categoryLabel" */
export type GraphHub_CategoryLabel_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "graphHub_categoryLabel" */
export type GraphHub_CategoryLabel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_CategoryLabel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_CategoryLabel_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "graphHub.categoryLabel" */
export const graphHubCategoryLabelUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type GraphHub_CategoryLabel_Update_Column =
  (typeof graphHubCategoryLabelUpdateColumn)[keyof typeof graphHubCategoryLabelUpdateColumn];
export type GraphHub_CategoryLabel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_CategoryLabel_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_CategoryLabel_Bool_Exp;
};

/** aggregated selection of "graphHub.category" */
export type GraphHub_Category_Aggregate = {
  __typename?: 'graphHub_category_aggregate';
  aggregate: Maybe<GraphHub_Category_Aggregate_Fields>;
  nodes: Array<GraphHub_Category>;
};

/** aggregate fields of "graphHub.category" */
export type GraphHub_Category_Aggregate_Fields = {
  __typename?: 'graphHub_category_aggregate_fields';
  avg: Maybe<GraphHub_Category_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_Category_Max_Fields>;
  min: Maybe<GraphHub_Category_Min_Fields>;
  stddev: Maybe<GraphHub_Category_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_Category_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_Category_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_Category_Sum_Fields>;
  var_pop: Maybe<GraphHub_Category_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_Category_Var_Samp_Fields>;
  variance: Maybe<GraphHub_Category_Variance_Fields>;
};

/** aggregate fields of "graphHub.category" */
export type GraphHub_Category_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_Category_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type GraphHub_Category_Avg_Fields = {
  __typename?: 'graphHub_category_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "graphHub.category". All fields are combined with a logical 'AND'. */
export type GraphHub_Category_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_Category_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_Category_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_Category_Bool_Exp>>;
  categoryLabel?: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deployedInstances?: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
  deployedInstances_aggregate?: InputMaybe<GraphHub_DeployedInstance_Aggregate_Bool_Exp>;
  draftInstances?: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
  draftInstances_aggregate?: InputMaybe<GraphHub_DraftInstance_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  label?: InputMaybe<GraphHub_CategoryLabel_Enum_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.category" */
export const graphHubCategoryConstraint = {
  /** unique or primary key constraint on columns "label" */
  CategoryLabelKey: 'category_label_key',
  /** unique or primary key constraint on columns "id" */
  CategoryPkey: 'category_pkey',
} as const;

export type GraphHub_Category_Constraint =
  (typeof graphHubCategoryConstraint)[keyof typeof graphHubCategoryConstraint];
/** input type for incrementing numeric columns in table "graphHub.category" */
export type GraphHub_Category_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.category" */
export type GraphHub_Category_Insert_Input = {
  categoryLabel?: InputMaybe<GraphHub_CategoryLabel_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedInstances?: InputMaybe<GraphHub_DeployedInstance_Arr_Rel_Insert_Input>;
  draftInstances?: InputMaybe<GraphHub_DraftInstance_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<GraphHub_CategoryLabel_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GraphHub_Category_Max_Fields = {
  __typename?: 'graphHub_category_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type GraphHub_Category_Min_Fields = {
  __typename?: 'graphHub_category_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "graphHub.category" */
export type GraphHub_Category_Mutation_Response = {
  __typename?: 'graphHub_category_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_Category>;
};

/** input type for inserting object relation for remote table "graphHub.category" */
export type GraphHub_Category_Obj_Rel_Insert_Input = {
  data: GraphHub_Category_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_Category_On_Conflict>;
};

/** on_conflict condition type for table "graphHub.category" */
export type GraphHub_Category_On_Conflict = {
  constraint: GraphHub_Category_Constraint;
  update_columns: Array<GraphHub_Category_Update_Column>;
  where?: InputMaybe<GraphHub_Category_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.category". */
export type GraphHub_Category_Order_By = {
  categoryLabel?: InputMaybe<GraphHub_CategoryLabel_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedInstances_aggregate?: InputMaybe<GraphHub_DeployedInstance_Aggregate_Order_By>;
  draftInstances_aggregate?: InputMaybe<GraphHub_DraftInstance_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.category */
export type GraphHub_Category_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.category" */
export const graphHubCategorySelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type GraphHub_Category_Select_Column =
  (typeof graphHubCategorySelectColumn)[keyof typeof graphHubCategorySelectColumn];
/** input type for updating data in table "graphHub.category" */
export type GraphHub_Category_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<GraphHub_CategoryLabel_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type GraphHub_Category_Stddev_Fields = {
  __typename?: 'graphHub_category_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_Category_Stddev_Pop_Fields = {
  __typename?: 'graphHub_category_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_Category_Stddev_Samp_Fields = {
  __typename?: 'graphHub_category_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "graphHub_category" */
export type GraphHub_Category_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_Category_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_Category_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<GraphHub_CategoryLabel_Enum>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type GraphHub_Category_Sum_Fields = {
  __typename?: 'graphHub_category_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "graphHub.category" */
export const graphHubCategoryUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type GraphHub_Category_Update_Column =
  (typeof graphHubCategoryUpdateColumn)[keyof typeof graphHubCategoryUpdateColumn];
export type GraphHub_Category_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_Category_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_Category_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_Category_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_Category_Var_Pop_Fields = {
  __typename?: 'graphHub_category_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type GraphHub_Category_Var_Samp_Fields = {
  __typename?: 'graphHub_category_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type GraphHub_Category_Variance_Fields = {
  __typename?: 'graphHub_category_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** Saved queries from explore.com */
export type GraphHub_DeployedInstance = {
  __typename?: 'graphHub_deployedInstance';
  /** An object relationship */
  category: GraphHub_Category;
  categoryId: Scalars['bigint'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  deployedSchema: GraphHub_DeployedSchema;
  deployedSchemaId: Scalars['bigint'];
  id: Scalars['bigint'];
  label: Maybe<Scalars['String']>;
  query: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
  variables: Scalars['json'];
};

/** Saved queries from explore.com */
export type GraphHub_DeployedInstanceVariablesArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Aggregate = {
  __typename?: 'graphHub_deployedInstance_aggregate';
  aggregate: Maybe<GraphHub_DeployedInstance_Aggregate_Fields>;
  nodes: Array<GraphHub_DeployedInstance>;
};

export type GraphHub_DeployedInstance_Aggregate_Bool_Exp = {
  count?: InputMaybe<GraphHub_DeployedInstance_Aggregate_Bool_Exp_Count>;
};

export type GraphHub_DeployedInstance_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Aggregate_Fields = {
  __typename?: 'graphHub_deployedInstance_aggregate_fields';
  avg: Maybe<GraphHub_DeployedInstance_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_DeployedInstance_Max_Fields>;
  min: Maybe<GraphHub_DeployedInstance_Min_Fields>;
  stddev: Maybe<GraphHub_DeployedInstance_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_DeployedInstance_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_DeployedInstance_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_DeployedInstance_Sum_Fields>;
  var_pop: Maybe<GraphHub_DeployedInstance_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_DeployedInstance_Var_Samp_Fields>;
  variance: Maybe<GraphHub_DeployedInstance_Variance_Fields>;
};

/** aggregate fields of "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Aggregate_Order_By = {
  avg?: InputMaybe<GraphHub_DeployedInstance_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<GraphHub_DeployedInstance_Max_Order_By>;
  min?: InputMaybe<GraphHub_DeployedInstance_Min_Order_By>;
  stddev?: InputMaybe<GraphHub_DeployedInstance_Stddev_Order_By>;
  stddev_pop?: InputMaybe<GraphHub_DeployedInstance_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<GraphHub_DeployedInstance_Stddev_Samp_Order_By>;
  sum?: InputMaybe<GraphHub_DeployedInstance_Sum_Order_By>;
  var_pop?: InputMaybe<GraphHub_DeployedInstance_Var_Pop_Order_By>;
  var_samp?: InputMaybe<GraphHub_DeployedInstance_Var_Samp_Order_By>;
  variance?: InputMaybe<GraphHub_DeployedInstance_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Arr_Rel_Insert_Input = {
  data: Array<GraphHub_DeployedInstance_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DeployedInstance_On_Conflict>;
};

/** aggregate avg on columns */
export type GraphHub_DeployedInstance_Avg_Fields = {
  __typename?: 'graphHub_deployedInstance_avg_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Avg_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "graphHub.deployedInstance". All fields are combined with a logical 'AND'. */
export type GraphHub_DeployedInstance_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DeployedInstance_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DeployedInstance_Bool_Exp>>;
  category?: InputMaybe<GraphHub_Category_Bool_Exp>;
  categoryId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deployedSchema?: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
  deployedSchemaId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  label?: InputMaybe<String_Comparison_Exp>;
  query?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
  variables?: InputMaybe<Json_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.deployedInstance" */
export const graphHubDeployedInstanceConstraint = {
  /** unique or primary key constraint on columns "id" */
  DeployedInstancePkey: 'deployedInstance_pkey',
} as const;

export type GraphHub_DeployedInstance_Constraint =
  (typeof graphHubDeployedInstanceConstraint)[keyof typeof graphHubDeployedInstanceConstraint];
/** input type for incrementing numeric columns in table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Inc_Input = {
  categoryId?: InputMaybe<Scalars['bigint']>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Insert_Input = {
  category?: InputMaybe<GraphHub_Category_Obj_Rel_Insert_Input>;
  categoryId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchema?: InputMaybe<GraphHub_DeployedSchema_Obj_Rel_Insert_Input>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<Scalars['String']>;
  query?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  variables?: InputMaybe<Scalars['json']>;
};

/** aggregate max on columns */
export type GraphHub_DeployedInstance_Max_Fields = {
  __typename?: 'graphHub_deployedInstance_max_fields';
  categoryId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  deployedSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  label: Maybe<Scalars['String']>;
  query: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Max_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  query?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type GraphHub_DeployedInstance_Min_Fields = {
  __typename?: 'graphHub_deployedInstance_min_fields';
  categoryId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  deployedSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  label: Maybe<Scalars['String']>;
  query: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Min_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  query?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Mutation_Response = {
  __typename?: 'graphHub_deployedInstance_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DeployedInstance>;
};

/** on_conflict condition type for table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_On_Conflict = {
  constraint: GraphHub_DeployedInstance_Constraint;
  update_columns: Array<GraphHub_DeployedInstance_Update_Column>;
  where?: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.deployedInstance". */
export type GraphHub_DeployedInstance_Order_By = {
  category?: InputMaybe<GraphHub_Category_Order_By>;
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchema?: InputMaybe<GraphHub_DeployedSchema_Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  query?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
  variables?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.deployedInstance */
export type GraphHub_DeployedInstance_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.deployedInstance" */
export const graphHubDeployedInstanceSelectColumn = {
  /** column name */
  CategoryId: 'categoryId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DeployedSchemaId: 'deployedSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  Query: 'query',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
  /** column name */
  Variables: 'variables',
} as const;

export type GraphHub_DeployedInstance_Select_Column =
  (typeof graphHubDeployedInstanceSelectColumn)[keyof typeof graphHubDeployedInstanceSelectColumn];
/** input type for updating data in table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Set_Input = {
  categoryId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<Scalars['String']>;
  query?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  variables?: InputMaybe<Scalars['json']>;
};

/** aggregate stddev on columns */
export type GraphHub_DeployedInstance_Stddev_Fields = {
  __typename?: 'graphHub_deployedInstance_stddev_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Stddev_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_DeployedInstance_Stddev_Pop_Fields = {
  __typename?: 'graphHub_deployedInstance_stddev_pop_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Stddev_Pop_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_DeployedInstance_Stddev_Samp_Fields = {
  __typename?: 'graphHub_deployedInstance_stddev_samp_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Stddev_Samp_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "graphHub_deployedInstance" */
export type GraphHub_DeployedInstance_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DeployedInstance_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DeployedInstance_Stream_Cursor_Value_Input = {
  categoryId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<Scalars['String']>;
  query?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  variables?: InputMaybe<Scalars['json']>;
};

/** aggregate sum on columns */
export type GraphHub_DeployedInstance_Sum_Fields = {
  __typename?: 'graphHub_deployedInstance_sum_fields';
  categoryId: Maybe<Scalars['bigint']>;
  deployedSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Sum_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "graphHub.deployedInstance" */
export const graphHubDeployedInstanceUpdateColumn = {
  /** column name */
  CategoryId: 'categoryId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DeployedSchemaId: 'deployedSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  Query: 'query',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
  /** column name */
  Variables: 'variables',
} as const;

export type GraphHub_DeployedInstance_Update_Column =
  (typeof graphHubDeployedInstanceUpdateColumn)[keyof typeof graphHubDeployedInstanceUpdateColumn];
export type GraphHub_DeployedInstance_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_DeployedInstance_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DeployedInstance_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DeployedInstance_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_DeployedInstance_Var_Pop_Fields = {
  __typename?: 'graphHub_deployedInstance_var_pop_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Var_Pop_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GraphHub_DeployedInstance_Var_Samp_Fields = {
  __typename?: 'graphHub_deployedInstance_var_samp_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Var_Samp_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type GraphHub_DeployedInstance_Variance_Fields = {
  __typename?: 'graphHub_deployedInstance_variance_fields';
  categoryId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "graphHub.deployedInstance" */
export type GraphHub_DeployedInstance_Variance_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema = {
  __typename?: 'graphHub_deployedSchema';
  createdAt: Scalars['timestamptz'];
  data: Maybe<Scalars['String']>;
  /** An array relationship */
  deployedInstances: Array<GraphHub_DeployedInstance>;
  /** An aggregate relationship */
  deployedInstances_aggregate: GraphHub_DeployedInstance_Aggregate;
  /** An array relationship */
  deployedSchemaChunks: Array<GraphHub_DeployedSchemaChunk>;
  /** An aggregate relationship */
  deployedSchemaChunks_aggregate: GraphHub_DeployedSchemaChunk_Aggregate;
  /** An object relationship */
  deployedSchemaLabel: GraphHub_DeployedSchemaLabel;
  id: Scalars['bigint'];
  label: GraphHub_DeployedSchemaLabel_Enum;
  /** Prompt used to create series of chunks */
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchemaDeployedInstancesArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchemaDeployedInstances_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchemaDeployedSchemaChunksArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchemaDeployedSchemaChunks_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk = {
  __typename?: 'graphHub_deployedSchemaChunk';
  /** Generated API reference from our schema definition */
  apiReferenceData: Scalars['String'];
  apiReferenceDataLabel: Maybe<Scalars['String']>;
  /** An object relationship */
  bulkJob: Maybe<Prompt_BulkJob>;
  bulkJobId: Maybe<Scalars['bigint']>;
  /** An object relationship */
  chatCompletionOption: Maybe<Prompt_ChatCompletionOption>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  deployedSchema: GraphHub_DeployedSchema;
  deployedSchemaId: Scalars['bigint'];
  id: Scalars['bigint'];
  schemaDefinition: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Aggregate = {
  __typename?: 'graphHub_deployedSchemaChunk_aggregate';
  aggregate: Maybe<GraphHub_DeployedSchemaChunk_Aggregate_Fields>;
  nodes: Array<GraphHub_DeployedSchemaChunk>;
};

export type GraphHub_DeployedSchemaChunk_Aggregate_Bool_Exp = {
  count?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Bool_Exp_Count>;
};

export type GraphHub_DeployedSchemaChunk_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Aggregate_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_aggregate_fields';
  avg: Maybe<GraphHub_DeployedSchemaChunk_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_DeployedSchemaChunk_Max_Fields>;
  min: Maybe<GraphHub_DeployedSchemaChunk_Min_Fields>;
  stddev: Maybe<GraphHub_DeployedSchemaChunk_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_DeployedSchemaChunk_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_DeployedSchemaChunk_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_DeployedSchemaChunk_Sum_Fields>;
  var_pop: Maybe<GraphHub_DeployedSchemaChunk_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_DeployedSchemaChunk_Var_Samp_Fields>;
  variance: Maybe<GraphHub_DeployedSchemaChunk_Variance_Fields>;
};

/** aggregate fields of "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Aggregate_Order_By = {
  avg?: InputMaybe<GraphHub_DeployedSchemaChunk_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<GraphHub_DeployedSchemaChunk_Max_Order_By>;
  min?: InputMaybe<GraphHub_DeployedSchemaChunk_Min_Order_By>;
  stddev?: InputMaybe<GraphHub_DeployedSchemaChunk_Stddev_Order_By>;
  stddev_pop?: InputMaybe<GraphHub_DeployedSchemaChunk_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<GraphHub_DeployedSchemaChunk_Stddev_Samp_Order_By>;
  sum?: InputMaybe<GraphHub_DeployedSchemaChunk_Sum_Order_By>;
  var_pop?: InputMaybe<GraphHub_DeployedSchemaChunk_Var_Pop_Order_By>;
  var_samp?: InputMaybe<GraphHub_DeployedSchemaChunk_Var_Samp_Order_By>;
  variance?: InputMaybe<GraphHub_DeployedSchemaChunk_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Arr_Rel_Insert_Input = {
  data: Array<GraphHub_DeployedSchemaChunk_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DeployedSchemaChunk_On_Conflict>;
};

/** aggregate avg on columns */
export type GraphHub_DeployedSchemaChunk_Avg_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_avg_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Avg_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "graphHub.deployedSchemaChunk". All fields are combined with a logical 'AND'. */
export type GraphHub_DeployedSchemaChunk_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Bool_Exp>>;
  apiReferenceData?: InputMaybe<String_Comparison_Exp>;
  apiReferenceDataLabel?: InputMaybe<String_Comparison_Exp>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  bulkJobId?: InputMaybe<Bigint_Comparison_Exp>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  chatCompletionOptionId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deployedSchema?: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
  deployedSchemaId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  schemaDefinition?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.deployedSchemaChunk" */
export const graphHubDeployedSchemaChunkConstraint = {
  /** unique or primary key constraint on columns "id" */
  DeployedSchemaChunkPkey: 'deployedSchemaChunk_pkey',
} as const;

export type GraphHub_DeployedSchemaChunk_Constraint =
  (typeof graphHubDeployedSchemaChunkConstraint)[keyof typeof graphHubDeployedSchemaChunkConstraint];
/** input type for incrementing numeric columns in table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Inc_Input = {
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Insert_Input = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Scalars['String']>;
  apiReferenceDataLabel?: InputMaybe<Scalars['String']>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Obj_Rel_Insert_Input>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Obj_Rel_Insert_Input>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchema?: InputMaybe<GraphHub_DeployedSchema_Obj_Rel_Insert_Input>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GraphHub_DeployedSchemaChunk_Max_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_max_fields';
  /** Generated API reference from our schema definition */
  apiReferenceData: Maybe<Scalars['String']>;
  apiReferenceDataLabel: Maybe<Scalars['String']>;
  bulkJobId: Maybe<Scalars['bigint']>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  deployedSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Max_Order_By = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Order_By>;
  apiReferenceDataLabel?: InputMaybe<Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type GraphHub_DeployedSchemaChunk_Min_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_min_fields';
  /** Generated API reference from our schema definition */
  apiReferenceData: Maybe<Scalars['String']>;
  apiReferenceDataLabel: Maybe<Scalars['String']>;
  bulkJobId: Maybe<Scalars['bigint']>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  deployedSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Min_Order_By = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Order_By>;
  apiReferenceDataLabel?: InputMaybe<Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Mutation_Response = {
  __typename?: 'graphHub_deployedSchemaChunk_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DeployedSchemaChunk>;
};

/** on_conflict condition type for table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_On_Conflict = {
  constraint: GraphHub_DeployedSchemaChunk_Constraint;
  update_columns: Array<GraphHub_DeployedSchemaChunk_Update_Column>;
  where?: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.deployedSchemaChunk". */
export type GraphHub_DeployedSchemaChunk_Order_By = {
  apiReferenceData?: InputMaybe<Order_By>;
  apiReferenceDataLabel?: InputMaybe<Order_By>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchema?: InputMaybe<GraphHub_DeployedSchema_Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.deployedSchemaChunk */
export type GraphHub_DeployedSchemaChunk_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.deployedSchemaChunk" */
export const graphHubDeployedSchemaChunkSelectColumn = {
  /** column name */
  ApiReferenceData: 'apiReferenceData',
  /** column name */
  ApiReferenceDataLabel: 'apiReferenceDataLabel',
  /** column name */
  BulkJobId: 'bulkJobId',
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DeployedSchemaId: 'deployedSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type GraphHub_DeployedSchemaChunk_Select_Column =
  (typeof graphHubDeployedSchemaChunkSelectColumn)[keyof typeof graphHubDeployedSchemaChunkSelectColumn];
/** input type for updating data in table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Set_Input = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Scalars['String']>;
  apiReferenceDataLabel?: InputMaybe<Scalars['String']>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type GraphHub_DeployedSchemaChunk_Stddev_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_stddev_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Stddev_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_DeployedSchemaChunk_Stddev_Pop_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_stddev_pop_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Stddev_Pop_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_DeployedSchemaChunk_Stddev_Samp_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_stddev_samp_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Stddev_Samp_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "graphHub_deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DeployedSchemaChunk_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DeployedSchemaChunk_Stream_Cursor_Value_Input = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Scalars['String']>;
  apiReferenceDataLabel?: InputMaybe<Scalars['String']>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type GraphHub_DeployedSchemaChunk_Sum_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_sum_fields';
  bulkJobId: Maybe<Scalars['bigint']>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  deployedSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Sum_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "graphHub.deployedSchemaChunk" */
export const graphHubDeployedSchemaChunkUpdateColumn = {
  /** column name */
  ApiReferenceData: 'apiReferenceData',
  /** column name */
  ApiReferenceDataLabel: 'apiReferenceDataLabel',
  /** column name */
  BulkJobId: 'bulkJobId',
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DeployedSchemaId: 'deployedSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type GraphHub_DeployedSchemaChunk_Update_Column =
  (typeof graphHubDeployedSchemaChunkUpdateColumn)[keyof typeof graphHubDeployedSchemaChunkUpdateColumn];
export type GraphHub_DeployedSchemaChunk_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_DeployedSchemaChunk_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DeployedSchemaChunk_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DeployedSchemaChunk_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_DeployedSchemaChunk_Var_Pop_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_var_pop_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Var_Pop_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GraphHub_DeployedSchemaChunk_Var_Samp_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_var_samp_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Var_Samp_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type GraphHub_DeployedSchemaChunk_Variance_Fields = {
  __typename?: 'graphHub_deployedSchemaChunk_variance_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  deployedSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "graphHub.deployedSchemaChunk" */
export type GraphHub_DeployedSchemaChunk_Variance_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  deployedSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel = {
  __typename?: 'graphHub_deployedSchemaLabel';
  /** An array relationship */
  deployedSchemas: Array<GraphHub_DeployedSchema>;
  /** An aggregate relationship */
  deployedSchemas_aggregate: GraphHub_DeployedSchema_Aggregate;
  set: Scalars['String'];
};

/** columns and relationships of "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabelDeployedSchemasArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchema_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

/** columns and relationships of "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabelDeployedSchemas_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchema_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

/** aggregated selection of "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Aggregate = {
  __typename?: 'graphHub_deployedSchemaLabel_aggregate';
  aggregate: Maybe<GraphHub_DeployedSchemaLabel_Aggregate_Fields>;
  nodes: Array<GraphHub_DeployedSchemaLabel>;
};

/** aggregate fields of "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Aggregate_Fields = {
  __typename?: 'graphHub_deployedSchemaLabel_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<GraphHub_DeployedSchemaLabel_Max_Fields>;
  min: Maybe<GraphHub_DeployedSchemaLabel_Min_Fields>;
};

/** aggregate fields of "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "graphHub.deployedSchemaLabel". All fields are combined with a logical 'AND'. */
export type GraphHub_DeployedSchemaLabel_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Bool_Exp>>;
  deployedSchemas?: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
  deployedSchemas_aggregate?: InputMaybe<GraphHub_DeployedSchema_Aggregate_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.deployedSchemaLabel" */
export const graphHubDeployedSchemaLabelConstraint = {
  /** unique or primary key constraint on columns "set" */
  DeployedSchemaLabelPkey: 'deployedSchemaLabel_pkey',
} as const;

export type GraphHub_DeployedSchemaLabel_Constraint =
  (typeof graphHubDeployedSchemaLabelConstraint)[keyof typeof graphHubDeployedSchemaLabelConstraint];
export const graphHubDeployedSchemaLabelEnum = {
  Auth: 'auth',
  Customer: 'customer',
  Frontend: 'frontend',
  Internal: 'internal',
  Viewport: 'viewport',
  Weaviate: 'weaviate',
} as const;

export type GraphHub_DeployedSchemaLabel_Enum =
  (typeof graphHubDeployedSchemaLabelEnum)[keyof typeof graphHubDeployedSchemaLabelEnum];
/** Boolean expression to compare columns of type "graphHub_deployedSchemaLabel_enum". All fields are combined with logical 'AND'. */
export type GraphHub_DeployedSchemaLabel_Enum_Comparison_Exp = {
  _eq?: InputMaybe<GraphHub_DeployedSchemaLabel_Enum>;
  _in?: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<GraphHub_DeployedSchemaLabel_Enum>;
  _nin?: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Enum>>;
};

/** input type for inserting data into table "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Insert_Input = {
  deployedSchemas?: InputMaybe<GraphHub_DeployedSchema_Arr_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type GraphHub_DeployedSchemaLabel_Max_Fields = {
  __typename?: 'graphHub_deployedSchemaLabel_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type GraphHub_DeployedSchemaLabel_Min_Fields = {
  __typename?: 'graphHub_deployedSchemaLabel_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Mutation_Response = {
  __typename?: 'graphHub_deployedSchemaLabel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DeployedSchemaLabel>;
};

/** input type for inserting object relation for remote table "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Obj_Rel_Insert_Input = {
  data: GraphHub_DeployedSchemaLabel_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DeployedSchemaLabel_On_Conflict>;
};

/** on_conflict condition type for table "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_On_Conflict = {
  constraint: GraphHub_DeployedSchemaLabel_Constraint;
  update_columns: Array<GraphHub_DeployedSchemaLabel_Update_Column>;
  where?: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.deployedSchemaLabel". */
export type GraphHub_DeployedSchemaLabel_Order_By = {
  deployedSchemas_aggregate?: InputMaybe<GraphHub_DeployedSchema_Aggregate_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.deployedSchemaLabel */
export type GraphHub_DeployedSchemaLabel_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "graphHub.deployedSchemaLabel" */
export const graphHubDeployedSchemaLabelSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type GraphHub_DeployedSchemaLabel_Select_Column =
  (typeof graphHubDeployedSchemaLabelSelectColumn)[keyof typeof graphHubDeployedSchemaLabelSelectColumn];
/** input type for updating data in table "graphHub.deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "graphHub_deployedSchemaLabel" */
export type GraphHub_DeployedSchemaLabel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DeployedSchemaLabel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DeployedSchemaLabel_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "graphHub.deployedSchemaLabel" */
export const graphHubDeployedSchemaLabelUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type GraphHub_DeployedSchemaLabel_Update_Column =
  (typeof graphHubDeployedSchemaLabelUpdateColumn)[keyof typeof graphHubDeployedSchemaLabelUpdateColumn];
export type GraphHub_DeployedSchemaLabel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DeployedSchemaLabel_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DeployedSchemaLabel_Bool_Exp;
};

/** aggregated selection of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Aggregate = {
  __typename?: 'graphHub_deployedSchema_aggregate';
  aggregate: Maybe<GraphHub_DeployedSchema_Aggregate_Fields>;
  nodes: Array<GraphHub_DeployedSchema>;
};

export type GraphHub_DeployedSchema_Aggregate_Bool_Exp = {
  count?: InputMaybe<GraphHub_DeployedSchema_Aggregate_Bool_Exp_Count>;
};

export type GraphHub_DeployedSchema_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Aggregate_Fields = {
  __typename?: 'graphHub_deployedSchema_aggregate_fields';
  avg: Maybe<GraphHub_DeployedSchema_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_DeployedSchema_Max_Fields>;
  min: Maybe<GraphHub_DeployedSchema_Min_Fields>;
  stddev: Maybe<GraphHub_DeployedSchema_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_DeployedSchema_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_DeployedSchema_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_DeployedSchema_Sum_Fields>;
  var_pop: Maybe<GraphHub_DeployedSchema_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_DeployedSchema_Var_Samp_Fields>;
  variance: Maybe<GraphHub_DeployedSchema_Variance_Fields>;
};

/** aggregate fields of "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Aggregate_Order_By = {
  avg?: InputMaybe<GraphHub_DeployedSchema_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<GraphHub_DeployedSchema_Max_Order_By>;
  min?: InputMaybe<GraphHub_DeployedSchema_Min_Order_By>;
  stddev?: InputMaybe<GraphHub_DeployedSchema_Stddev_Order_By>;
  stddev_pop?: InputMaybe<GraphHub_DeployedSchema_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<GraphHub_DeployedSchema_Stddev_Samp_Order_By>;
  sum?: InputMaybe<GraphHub_DeployedSchema_Sum_Order_By>;
  var_pop?: InputMaybe<GraphHub_DeployedSchema_Var_Pop_Order_By>;
  var_samp?: InputMaybe<GraphHub_DeployedSchema_Var_Samp_Order_By>;
  variance?: InputMaybe<GraphHub_DeployedSchema_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Arr_Rel_Insert_Input = {
  data: Array<GraphHub_DeployedSchema_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DeployedSchema_On_Conflict>;
};

/** aggregate avg on columns */
export type GraphHub_DeployedSchema_Avg_Fields = {
  __typename?: 'graphHub_deployedSchema_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "graphHub.deployedSchema". All fields are combined with a logical 'AND'. */
export type GraphHub_DeployedSchema_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DeployedSchema_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DeployedSchema_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  data?: InputMaybe<String_Comparison_Exp>;
  deployedInstances?: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
  deployedInstances_aggregate?: InputMaybe<GraphHub_DeployedInstance_Aggregate_Bool_Exp>;
  deployedSchemaChunks?: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
  deployedSchemaChunks_aggregate?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Bool_Exp>;
  deployedSchemaLabel?: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  label?: InputMaybe<GraphHub_DeployedSchemaLabel_Enum_Comparison_Exp>;
  schemaDefinition?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.deployedSchema" */
export const graphHubDeployedSchemaConstraint = {
  /** unique or primary key constraint on columns "id" */
  DeployedSchemaPkey: 'deployedSchema_pkey',
} as const;

export type GraphHub_DeployedSchema_Constraint =
  (typeof graphHubDeployedSchemaConstraint)[keyof typeof graphHubDeployedSchemaConstraint];
/** input type for incrementing numeric columns in table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['String']>;
  deployedInstances?: InputMaybe<GraphHub_DeployedInstance_Arr_Rel_Insert_Input>;
  deployedSchemaChunks?: InputMaybe<GraphHub_DeployedSchemaChunk_Arr_Rel_Insert_Input>;
  deployedSchemaLabel?: InputMaybe<GraphHub_DeployedSchemaLabel_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<GraphHub_DeployedSchemaLabel_Enum>;
  /** Prompt used to create series of chunks */
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GraphHub_DeployedSchema_Max_Fields = {
  __typename?: 'graphHub_deployedSchema_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  data: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  /** Prompt used to create series of chunks */
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  data?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  /** Prompt used to create series of chunks */
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type GraphHub_DeployedSchema_Min_Fields = {
  __typename?: 'graphHub_deployedSchema_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  data: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  /** Prompt used to create series of chunks */
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  data?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  /** Prompt used to create series of chunks */
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Mutation_Response = {
  __typename?: 'graphHub_deployedSchema_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DeployedSchema>;
};

/** input type for inserting object relation for remote table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Obj_Rel_Insert_Input = {
  data: GraphHub_DeployedSchema_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DeployedSchema_On_Conflict>;
};

/** on_conflict condition type for table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_On_Conflict = {
  constraint: GraphHub_DeployedSchema_Constraint;
  update_columns: Array<GraphHub_DeployedSchema_Update_Column>;
  where?: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.deployedSchema". */
export type GraphHub_DeployedSchema_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  data?: InputMaybe<Order_By>;
  deployedInstances_aggregate?: InputMaybe<GraphHub_DeployedInstance_Aggregate_Order_By>;
  deployedSchemaChunks_aggregate?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Order_By>;
  deployedSchemaLabel?: InputMaybe<GraphHub_DeployedSchemaLabel_Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.deployedSchema */
export type GraphHub_DeployedSchema_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.deployedSchema" */
export const graphHubDeployedSchemaSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Data: 'data',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type GraphHub_DeployedSchema_Select_Column =
  (typeof graphHubDeployedSchemaSelectColumn)[keyof typeof graphHubDeployedSchemaSelectColumn];
/** input type for updating data in table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<GraphHub_DeployedSchemaLabel_Enum>;
  /** Prompt used to create series of chunks */
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type GraphHub_DeployedSchema_Stddev_Fields = {
  __typename?: 'graphHub_deployedSchema_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_DeployedSchema_Stddev_Pop_Fields = {
  __typename?: 'graphHub_deployedSchema_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_DeployedSchema_Stddev_Samp_Fields = {
  __typename?: 'graphHub_deployedSchema_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "graphHub_deployedSchema" */
export type GraphHub_DeployedSchema_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DeployedSchema_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DeployedSchema_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<GraphHub_DeployedSchemaLabel_Enum>;
  /** Prompt used to create series of chunks */
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type GraphHub_DeployedSchema_Sum_Fields = {
  __typename?: 'graphHub_deployedSchema_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "graphHub.deployedSchema" */
export const graphHubDeployedSchemaUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Data: 'data',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type GraphHub_DeployedSchema_Update_Column =
  (typeof graphHubDeployedSchemaUpdateColumn)[keyof typeof graphHubDeployedSchemaUpdateColumn];
export type GraphHub_DeployedSchema_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_DeployedSchema_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DeployedSchema_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DeployedSchema_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_DeployedSchema_Var_Pop_Fields = {
  __typename?: 'graphHub_deployedSchema_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GraphHub_DeployedSchema_Var_Samp_Fields = {
  __typename?: 'graphHub_deployedSchema_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type GraphHub_DeployedSchema_Variance_Fields = {
  __typename?: 'graphHub_deployedSchema_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "graphHub.deployedSchema" */
export type GraphHub_DeployedSchema_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "graphHub.draftInstance" */
export type GraphHub_DraftInstance = {
  __typename?: 'graphHub_draftInstance';
  /** An object relationship */
  category: GraphHub_Category;
  categoryId: Scalars['bigint'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  draftSchema: GraphHub_DraftSchema;
  draftSchemaId: Scalars['bigint'];
  id: Scalars['bigint'];
  query: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
  variables: Scalars['json'];
};

/** columns and relationships of "graphHub.draftInstance" */
export type GraphHub_DraftInstanceVariablesArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Aggregate = {
  __typename?: 'graphHub_draftInstance_aggregate';
  aggregate: Maybe<GraphHub_DraftInstance_Aggregate_Fields>;
  nodes: Array<GraphHub_DraftInstance>;
};

export type GraphHub_DraftInstance_Aggregate_Bool_Exp = {
  count?: InputMaybe<GraphHub_DraftInstance_Aggregate_Bool_Exp_Count>;
};

export type GraphHub_DraftInstance_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Aggregate_Fields = {
  __typename?: 'graphHub_draftInstance_aggregate_fields';
  avg: Maybe<GraphHub_DraftInstance_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_DraftInstance_Max_Fields>;
  min: Maybe<GraphHub_DraftInstance_Min_Fields>;
  stddev: Maybe<GraphHub_DraftInstance_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_DraftInstance_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_DraftInstance_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_DraftInstance_Sum_Fields>;
  var_pop: Maybe<GraphHub_DraftInstance_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_DraftInstance_Var_Samp_Fields>;
  variance: Maybe<GraphHub_DraftInstance_Variance_Fields>;
};

/** aggregate fields of "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Aggregate_Order_By = {
  avg?: InputMaybe<GraphHub_DraftInstance_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<GraphHub_DraftInstance_Max_Order_By>;
  min?: InputMaybe<GraphHub_DraftInstance_Min_Order_By>;
  stddev?: InputMaybe<GraphHub_DraftInstance_Stddev_Order_By>;
  stddev_pop?: InputMaybe<GraphHub_DraftInstance_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<GraphHub_DraftInstance_Stddev_Samp_Order_By>;
  sum?: InputMaybe<GraphHub_DraftInstance_Sum_Order_By>;
  var_pop?: InputMaybe<GraphHub_DraftInstance_Var_Pop_Order_By>;
  var_samp?: InputMaybe<GraphHub_DraftInstance_Var_Samp_Order_By>;
  variance?: InputMaybe<GraphHub_DraftInstance_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Arr_Rel_Insert_Input = {
  data: Array<GraphHub_DraftInstance_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DraftInstance_On_Conflict>;
};

/** aggregate avg on columns */
export type GraphHub_DraftInstance_Avg_Fields = {
  __typename?: 'graphHub_draftInstance_avg_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Avg_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "graphHub.draftInstance". All fields are combined with a logical 'AND'. */
export type GraphHub_DraftInstance_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DraftInstance_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DraftInstance_Bool_Exp>>;
  category?: InputMaybe<GraphHub_Category_Bool_Exp>;
  categoryId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  draftSchema?: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
  draftSchemaId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  query?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
  variables?: InputMaybe<Json_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.draftInstance" */
export const graphHubDraftInstanceConstraint = {
  /** unique or primary key constraint on columns "id" */
  DraftInstancePkey: 'draftInstance_pkey',
} as const;

export type GraphHub_DraftInstance_Constraint =
  (typeof graphHubDraftInstanceConstraint)[keyof typeof graphHubDraftInstanceConstraint];
/** input type for incrementing numeric columns in table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Inc_Input = {
  categoryId?: InputMaybe<Scalars['bigint']>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Insert_Input = {
  category?: InputMaybe<GraphHub_Category_Obj_Rel_Insert_Input>;
  categoryId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  draftSchema?: InputMaybe<GraphHub_DraftSchema_Obj_Rel_Insert_Input>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  query?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  variables?: InputMaybe<Scalars['json']>;
};

/** aggregate max on columns */
export type GraphHub_DraftInstance_Max_Fields = {
  __typename?: 'graphHub_draftInstance_max_fields';
  categoryId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  draftSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  query: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Max_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  query?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type GraphHub_DraftInstance_Min_Fields = {
  __typename?: 'graphHub_draftInstance_min_fields';
  categoryId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  draftSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  query: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Min_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  query?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Mutation_Response = {
  __typename?: 'graphHub_draftInstance_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DraftInstance>;
};

/** on_conflict condition type for table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_On_Conflict = {
  constraint: GraphHub_DraftInstance_Constraint;
  update_columns: Array<GraphHub_DraftInstance_Update_Column>;
  where?: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.draftInstance". */
export type GraphHub_DraftInstance_Order_By = {
  category?: InputMaybe<GraphHub_Category_Order_By>;
  categoryId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  draftSchema?: InputMaybe<GraphHub_DraftSchema_Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  query?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
  variables?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.draftInstance */
export type GraphHub_DraftInstance_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.draftInstance" */
export const graphHubDraftInstanceSelectColumn = {
  /** column name */
  CategoryId: 'categoryId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DraftSchemaId: 'draftSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  Query: 'query',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
  /** column name */
  Variables: 'variables',
} as const;

export type GraphHub_DraftInstance_Select_Column =
  (typeof graphHubDraftInstanceSelectColumn)[keyof typeof graphHubDraftInstanceSelectColumn];
/** input type for updating data in table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Set_Input = {
  categoryId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  query?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  variables?: InputMaybe<Scalars['json']>;
};

/** aggregate stddev on columns */
export type GraphHub_DraftInstance_Stddev_Fields = {
  __typename?: 'graphHub_draftInstance_stddev_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Stddev_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_DraftInstance_Stddev_Pop_Fields = {
  __typename?: 'graphHub_draftInstance_stddev_pop_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Stddev_Pop_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_DraftInstance_Stddev_Samp_Fields = {
  __typename?: 'graphHub_draftInstance_stddev_samp_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Stddev_Samp_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "graphHub_draftInstance" */
export type GraphHub_DraftInstance_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DraftInstance_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DraftInstance_Stream_Cursor_Value_Input = {
  categoryId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  query?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  variables?: InputMaybe<Scalars['json']>;
};

/** aggregate sum on columns */
export type GraphHub_DraftInstance_Sum_Fields = {
  __typename?: 'graphHub_draftInstance_sum_fields';
  categoryId: Maybe<Scalars['bigint']>;
  draftSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Sum_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "graphHub.draftInstance" */
export const graphHubDraftInstanceUpdateColumn = {
  /** column name */
  CategoryId: 'categoryId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DraftSchemaId: 'draftSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  Query: 'query',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
  /** column name */
  Variables: 'variables',
} as const;

export type GraphHub_DraftInstance_Update_Column =
  (typeof graphHubDraftInstanceUpdateColumn)[keyof typeof graphHubDraftInstanceUpdateColumn];
export type GraphHub_DraftInstance_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_DraftInstance_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DraftInstance_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DraftInstance_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_DraftInstance_Var_Pop_Fields = {
  __typename?: 'graphHub_draftInstance_var_pop_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Var_Pop_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GraphHub_DraftInstance_Var_Samp_Fields = {
  __typename?: 'graphHub_draftInstance_var_samp_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Var_Samp_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type GraphHub_DraftInstance_Variance_Fields = {
  __typename?: 'graphHub_draftInstance_variance_fields';
  categoryId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "graphHub.draftInstance" */
export type GraphHub_DraftInstance_Variance_Order_By = {
  categoryId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "graphHub.draftSchema" */
export type GraphHub_DraftSchema = {
  __typename?: 'graphHub_draftSchema';
  createdAt: Scalars['timestamptz'];
  data: Maybe<Scalars['String']>;
  /** An array relationship */
  draftInstances: Array<GraphHub_DraftInstance>;
  /** An aggregate relationship */
  draftInstances_aggregate: GraphHub_DraftInstance_Aggregate;
  /** An array relationship */
  draftSchemaChunks: Array<GraphHub_DraftSchemaChunk>;
  /** An aggregate relationship */
  draftSchemaChunks_aggregate: GraphHub_DraftSchemaChunk_Aggregate;
  id: Scalars['bigint'];
  label: Scalars['String'];
  /** Full schema definition */
  schemaDefinition: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
};

/** columns and relationships of "graphHub.draftSchema" */
export type GraphHub_DraftSchemaDraftInstancesArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.draftSchema" */
export type GraphHub_DraftSchemaDraftInstances_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

/** columns and relationships of "graphHub.draftSchema" */
export type GraphHub_DraftSchemaDraftSchemaChunksArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "graphHub.draftSchema" */
export type GraphHub_DraftSchemaDraftSchemaChunks_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk = {
  __typename?: 'graphHub_draftSchemaChunk';
  /** Generated API reference from our schema definition */
  apiReferenceData: Scalars['String'];
  apiReferenceDataLabel: Maybe<Scalars['String']>;
  /** An object relationship */
  bulkJob: Maybe<Prompt_BulkJob>;
  bulkJobId: Maybe<Scalars['bigint']>;
  /** An object relationship */
  chatCompletionOption: Maybe<Prompt_ChatCompletionOption>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  draftSchema: GraphHub_DraftSchema;
  draftSchemaId: Scalars['bigint'];
  id: Scalars['bigint'];
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
};

/** aggregated selection of "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Aggregate = {
  __typename?: 'graphHub_draftSchemaChunk_aggregate';
  aggregate: Maybe<GraphHub_DraftSchemaChunk_Aggregate_Fields>;
  nodes: Array<GraphHub_DraftSchemaChunk>;
};

export type GraphHub_DraftSchemaChunk_Aggregate_Bool_Exp = {
  count?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Bool_Exp_Count>;
};

export type GraphHub_DraftSchemaChunk_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Aggregate_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_aggregate_fields';
  avg: Maybe<GraphHub_DraftSchemaChunk_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_DraftSchemaChunk_Max_Fields>;
  min: Maybe<GraphHub_DraftSchemaChunk_Min_Fields>;
  stddev: Maybe<GraphHub_DraftSchemaChunk_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_DraftSchemaChunk_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_DraftSchemaChunk_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_DraftSchemaChunk_Sum_Fields>;
  var_pop: Maybe<GraphHub_DraftSchemaChunk_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_DraftSchemaChunk_Var_Samp_Fields>;
  variance: Maybe<GraphHub_DraftSchemaChunk_Variance_Fields>;
};

/** aggregate fields of "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Aggregate_Order_By = {
  avg?: InputMaybe<GraphHub_DraftSchemaChunk_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<GraphHub_DraftSchemaChunk_Max_Order_By>;
  min?: InputMaybe<GraphHub_DraftSchemaChunk_Min_Order_By>;
  stddev?: InputMaybe<GraphHub_DraftSchemaChunk_Stddev_Order_By>;
  stddev_pop?: InputMaybe<GraphHub_DraftSchemaChunk_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<GraphHub_DraftSchemaChunk_Stddev_Samp_Order_By>;
  sum?: InputMaybe<GraphHub_DraftSchemaChunk_Sum_Order_By>;
  var_pop?: InputMaybe<GraphHub_DraftSchemaChunk_Var_Pop_Order_By>;
  var_samp?: InputMaybe<GraphHub_DraftSchemaChunk_Var_Samp_Order_By>;
  variance?: InputMaybe<GraphHub_DraftSchemaChunk_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Arr_Rel_Insert_Input = {
  data: Array<GraphHub_DraftSchemaChunk_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DraftSchemaChunk_On_Conflict>;
};

/** aggregate avg on columns */
export type GraphHub_DraftSchemaChunk_Avg_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_avg_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Avg_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "graphHub.draftSchemaChunk". All fields are combined with a logical 'AND'. */
export type GraphHub_DraftSchemaChunk_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DraftSchemaChunk_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DraftSchemaChunk_Bool_Exp>>;
  apiReferenceData?: InputMaybe<String_Comparison_Exp>;
  apiReferenceDataLabel?: InputMaybe<String_Comparison_Exp>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  bulkJobId?: InputMaybe<Bigint_Comparison_Exp>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  chatCompletionOptionId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  draftSchema?: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
  draftSchemaId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  schemaDefinition?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.draftSchemaChunk" */
export const graphHubDraftSchemaChunkConstraint = {
  /** unique or primary key constraint on columns "id" */
  DraftSchemaChunkPkey: 'draftSchemaChunk_pkey',
} as const;

export type GraphHub_DraftSchemaChunk_Constraint =
  (typeof graphHubDraftSchemaChunkConstraint)[keyof typeof graphHubDraftSchemaChunkConstraint];
/** input type for incrementing numeric columns in table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Inc_Input = {
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Insert_Input = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Scalars['String']>;
  apiReferenceDataLabel?: InputMaybe<Scalars['String']>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Obj_Rel_Insert_Input>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Obj_Rel_Insert_Input>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  draftSchema?: InputMaybe<GraphHub_DraftSchema_Obj_Rel_Insert_Input>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type GraphHub_DraftSchemaChunk_Max_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_max_fields';
  /** Generated API reference from our schema definition */
  apiReferenceData: Maybe<Scalars['String']>;
  apiReferenceDataLabel: Maybe<Scalars['String']>;
  bulkJobId: Maybe<Scalars['bigint']>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  draftSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Max_Order_By = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Order_By>;
  apiReferenceDataLabel?: InputMaybe<Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type GraphHub_DraftSchemaChunk_Min_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_min_fields';
  /** Generated API reference from our schema definition */
  apiReferenceData: Maybe<Scalars['String']>;
  apiReferenceDataLabel: Maybe<Scalars['String']>;
  bulkJobId: Maybe<Scalars['bigint']>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  draftSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Min_Order_By = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Order_By>;
  apiReferenceDataLabel?: InputMaybe<Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Mutation_Response = {
  __typename?: 'graphHub_draftSchemaChunk_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DraftSchemaChunk>;
};

/** on_conflict condition type for table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_On_Conflict = {
  constraint: GraphHub_DraftSchemaChunk_Constraint;
  update_columns: Array<GraphHub_DraftSchemaChunk_Update_Column>;
  where?: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.draftSchemaChunk". */
export type GraphHub_DraftSchemaChunk_Order_By = {
  apiReferenceData?: InputMaybe<Order_By>;
  apiReferenceDataLabel?: InputMaybe<Order_By>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  draftSchema?: InputMaybe<GraphHub_DraftSchema_Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.draftSchemaChunk */
export type GraphHub_DraftSchemaChunk_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.draftSchemaChunk" */
export const graphHubDraftSchemaChunkSelectColumn = {
  /** column name */
  ApiReferenceData: 'apiReferenceData',
  /** column name */
  ApiReferenceDataLabel: 'apiReferenceDataLabel',
  /** column name */
  BulkJobId: 'bulkJobId',
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DraftSchemaId: 'draftSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type GraphHub_DraftSchemaChunk_Select_Column =
  (typeof graphHubDraftSchemaChunkSelectColumn)[keyof typeof graphHubDraftSchemaChunkSelectColumn];
/** input type for updating data in table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Set_Input = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Scalars['String']>;
  apiReferenceDataLabel?: InputMaybe<Scalars['String']>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type GraphHub_DraftSchemaChunk_Stddev_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_stddev_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Stddev_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_DraftSchemaChunk_Stddev_Pop_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_stddev_pop_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Stddev_Pop_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_DraftSchemaChunk_Stddev_Samp_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_stddev_samp_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Stddev_Samp_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "graphHub_draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DraftSchemaChunk_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DraftSchemaChunk_Stream_Cursor_Value_Input = {
  /** Generated API reference from our schema definition */
  apiReferenceData?: InputMaybe<Scalars['String']>;
  apiReferenceDataLabel?: InputMaybe<Scalars['String']>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  draftSchemaId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type GraphHub_DraftSchemaChunk_Sum_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_sum_fields';
  bulkJobId: Maybe<Scalars['bigint']>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  draftSchemaId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Sum_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "graphHub.draftSchemaChunk" */
export const graphHubDraftSchemaChunkUpdateColumn = {
  /** column name */
  ApiReferenceData: 'apiReferenceData',
  /** column name */
  ApiReferenceDataLabel: 'apiReferenceDataLabel',
  /** column name */
  BulkJobId: 'bulkJobId',
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DraftSchemaId: 'draftSchemaId',
  /** column name */
  Id: 'id',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type GraphHub_DraftSchemaChunk_Update_Column =
  (typeof graphHubDraftSchemaChunkUpdateColumn)[keyof typeof graphHubDraftSchemaChunkUpdateColumn];
export type GraphHub_DraftSchemaChunk_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_DraftSchemaChunk_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DraftSchemaChunk_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DraftSchemaChunk_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_DraftSchemaChunk_Var_Pop_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_var_pop_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Var_Pop_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GraphHub_DraftSchemaChunk_Var_Samp_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_var_samp_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Var_Samp_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type GraphHub_DraftSchemaChunk_Variance_Fields = {
  __typename?: 'graphHub_draftSchemaChunk_variance_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  draftSchemaId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "graphHub.draftSchemaChunk" */
export type GraphHub_DraftSchemaChunk_Variance_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  draftSchemaId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregated selection of "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Aggregate = {
  __typename?: 'graphHub_draftSchema_aggregate';
  aggregate: Maybe<GraphHub_DraftSchema_Aggregate_Fields>;
  nodes: Array<GraphHub_DraftSchema>;
};

/** aggregate fields of "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Aggregate_Fields = {
  __typename?: 'graphHub_draftSchema_aggregate_fields';
  avg: Maybe<GraphHub_DraftSchema_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<GraphHub_DraftSchema_Max_Fields>;
  min: Maybe<GraphHub_DraftSchema_Min_Fields>;
  stddev: Maybe<GraphHub_DraftSchema_Stddev_Fields>;
  stddev_pop: Maybe<GraphHub_DraftSchema_Stddev_Pop_Fields>;
  stddev_samp: Maybe<GraphHub_DraftSchema_Stddev_Samp_Fields>;
  sum: Maybe<GraphHub_DraftSchema_Sum_Fields>;
  var_pop: Maybe<GraphHub_DraftSchema_Var_Pop_Fields>;
  var_samp: Maybe<GraphHub_DraftSchema_Var_Samp_Fields>;
  variance: Maybe<GraphHub_DraftSchema_Variance_Fields>;
};

/** aggregate fields of "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<GraphHub_DraftSchema_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type GraphHub_DraftSchema_Avg_Fields = {
  __typename?: 'graphHub_draftSchema_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "graphHub.draftSchema". All fields are combined with a logical 'AND'. */
export type GraphHub_DraftSchema_Bool_Exp = {
  _and?: InputMaybe<Array<GraphHub_DraftSchema_Bool_Exp>>;
  _not?: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
  _or?: InputMaybe<Array<GraphHub_DraftSchema_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  data?: InputMaybe<String_Comparison_Exp>;
  draftInstances?: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
  draftInstances_aggregate?: InputMaybe<GraphHub_DraftInstance_Aggregate_Bool_Exp>;
  draftSchemaChunks?: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
  draftSchemaChunks_aggregate?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  label?: InputMaybe<String_Comparison_Exp>;
  schemaDefinition?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "graphHub.draftSchema" */
export const graphHubDraftSchemaConstraint = {
  /** unique or primary key constraint on columns "id" */
  DraftSchemaPkey: 'draftSchema_pkey',
} as const;

export type GraphHub_DraftSchema_Constraint =
  (typeof graphHubDraftSchemaConstraint)[keyof typeof graphHubDraftSchemaConstraint];
/** input type for incrementing numeric columns in table "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['String']>;
  draftInstances?: InputMaybe<GraphHub_DraftInstance_Arr_Rel_Insert_Input>;
  draftSchemaChunks?: InputMaybe<GraphHub_DraftSchemaChunk_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<Scalars['String']>;
  /** Full schema definition */
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type GraphHub_DraftSchema_Max_Fields = {
  __typename?: 'graphHub_draftSchema_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  data: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  label: Maybe<Scalars['String']>;
  /** Full schema definition */
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type GraphHub_DraftSchema_Min_Fields = {
  __typename?: 'graphHub_draftSchema_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  data: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  label: Maybe<Scalars['String']>;
  /** Full schema definition */
  schemaDefinition: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Mutation_Response = {
  __typename?: 'graphHub_draftSchema_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GraphHub_DraftSchema>;
};

/** input type for inserting object relation for remote table "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Obj_Rel_Insert_Input = {
  data: GraphHub_DraftSchema_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<GraphHub_DraftSchema_On_Conflict>;
};

/** on_conflict condition type for table "graphHub.draftSchema" */
export type GraphHub_DraftSchema_On_Conflict = {
  constraint: GraphHub_DraftSchema_Constraint;
  update_columns: Array<GraphHub_DraftSchema_Update_Column>;
  where?: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
};

/** Ordering options when selecting data from "graphHub.draftSchema". */
export type GraphHub_DraftSchema_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  data?: InputMaybe<Order_By>;
  draftInstances_aggregate?: InputMaybe<GraphHub_DraftInstance_Aggregate_Order_By>;
  draftSchemaChunks_aggregate?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  label?: InputMaybe<Order_By>;
  schemaDefinition?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: graphHub.draftSchema */
export type GraphHub_DraftSchema_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "graphHub.draftSchema" */
export const graphHubDraftSchemaSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Data: 'data',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type GraphHub_DraftSchema_Select_Column =
  (typeof graphHubDraftSchemaSelectColumn)[keyof typeof graphHubDraftSchemaSelectColumn];
/** input type for updating data in table "graphHub.draftSchema" */
export type GraphHub_DraftSchema_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<Scalars['String']>;
  /** Full schema definition */
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type GraphHub_DraftSchema_Stddev_Fields = {
  __typename?: 'graphHub_draftSchema_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type GraphHub_DraftSchema_Stddev_Pop_Fields = {
  __typename?: 'graphHub_draftSchema_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type GraphHub_DraftSchema_Stddev_Samp_Fields = {
  __typename?: 'graphHub_draftSchema_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "graphHub_draftSchema" */
export type GraphHub_DraftSchema_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GraphHub_DraftSchema_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GraphHub_DraftSchema_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  label?: InputMaybe<Scalars['String']>;
  /** Full schema definition */
  schemaDefinition?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type GraphHub_DraftSchema_Sum_Fields = {
  __typename?: 'graphHub_draftSchema_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "graphHub.draftSchema" */
export const graphHubDraftSchemaUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Data: 'data',
  /** column name */
  Id: 'id',
  /** column name */
  Label: 'label',
  /** column name */
  SchemaDefinition: 'schemaDefinition',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type GraphHub_DraftSchema_Update_Column =
  (typeof graphHubDraftSchemaUpdateColumn)[keyof typeof graphHubDraftSchemaUpdateColumn];
export type GraphHub_DraftSchema_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GraphHub_DraftSchema_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GraphHub_DraftSchema_Set_Input>;
  /** filter the rows which have to be updated */
  where: GraphHub_DraftSchema_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GraphHub_DraftSchema_Var_Pop_Fields = {
  __typename?: 'graphHub_draftSchema_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type GraphHub_DraftSchema_Var_Samp_Fields = {
  __typename?: 'graphHub_draftSchema_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type GraphHub_DraftSchema_Variance_Fields = {
  __typename?: 'graphHub_draftSchema_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['json']>;
  _gt?: InputMaybe<Scalars['json']>;
  _gte?: InputMaybe<Scalars['json']>;
  _in?: InputMaybe<Array<Scalars['json']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['json']>;
  _lte?: InputMaybe<Scalars['json']>;
  _neq?: InputMaybe<Scalars['json']>;
  _nin?: InputMaybe<Array<Scalars['json']>>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']>;
  _eq?: InputMaybe<Scalars['jsonb']>;
  _gt?: InputMaybe<Scalars['jsonb']>;
  _gte?: InputMaybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['jsonb']>;
  _lte?: InputMaybe<Scalars['jsonb']>;
  _neq?: InputMaybe<Scalars['jsonb']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "locale.location" */
export type Locale_Location = {
  __typename?: 'locale_location';
  code: Locale_LocationCode_Enum;
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  locationCode: Locale_LocationCode;
  /** An array relationship */
  messages: Array<Locale_Message>;
  /** An array relationship */
  messagesByLocaleto: Array<Locale_Message>;
  /** An aggregate relationship */
  messagesByLocaleto_aggregate: Locale_Message_Aggregate;
  /** An aggregate relationship */
  messages_aggregate: Locale_Message_Aggregate;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "locale.location" */
export type Locale_LocationMessagesArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

/** columns and relationships of "locale.location" */
export type Locale_LocationMessagesByLocaletoArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

/** columns and relationships of "locale.location" */
export type Locale_LocationMessagesByLocaleto_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

/** columns and relationships of "locale.location" */
export type Locale_LocationMessages_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

/** columns and relationships of "locale.locationCode" */
export type Locale_LocationCode = {
  __typename?: 'locale_locationCode';
  /** An object relationship */
  location: Maybe<Locale_Location>;
  set: Scalars['String'];
};

/** aggregated selection of "locale.locationCode" */
export type Locale_LocationCode_Aggregate = {
  __typename?: 'locale_locationCode_aggregate';
  aggregate: Maybe<Locale_LocationCode_Aggregate_Fields>;
  nodes: Array<Locale_LocationCode>;
};

/** aggregate fields of "locale.locationCode" */
export type Locale_LocationCode_Aggregate_Fields = {
  __typename?: 'locale_locationCode_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Locale_LocationCode_Max_Fields>;
  min: Maybe<Locale_LocationCode_Min_Fields>;
};

/** aggregate fields of "locale.locationCode" */
export type Locale_LocationCode_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Locale_LocationCode_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "locale.locationCode". All fields are combined with a logical 'AND'. */
export type Locale_LocationCode_Bool_Exp = {
  _and?: InputMaybe<Array<Locale_LocationCode_Bool_Exp>>;
  _not?: InputMaybe<Locale_LocationCode_Bool_Exp>;
  _or?: InputMaybe<Array<Locale_LocationCode_Bool_Exp>>;
  location?: InputMaybe<Locale_Location_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "locale.locationCode" */
export const localeLocationCodeConstraint = {
  /** unique or primary key constraint on columns "set" */
  LocationCodePkey: 'locationCode_pkey',
} as const;

export type Locale_LocationCode_Constraint =
  (typeof localeLocationCodeConstraint)[keyof typeof localeLocationCodeConstraint];
export const localeLocationCodeEnum = {
  CyAzAz: 'Cy_az_AZ',
  CySrSp: 'Cy_sr_SP',
  CyUzUz: 'Cy_uz_UZ',
  LtAzAz: 'Lt_az_AZ',
  LtSrSp: 'Lt_sr_SP',
  LtUzUz: 'Lt_uz_UZ',
  Aa: 'aa',
  Ab: 'ab',
  Ae: 'ae',
  Af: 'af',
  AfZa: 'af_ZA',
  Ak: 'ak',
  Am: 'am',
  An: 'an',
  Ar: 'ar',
  ArAe: 'ar_AE',
  ArBh: 'ar_BH',
  ArDz: 'ar_DZ',
  ArEg: 'ar_EG',
  ArIq: 'ar_IQ',
  ArJo: 'ar_JO',
  ArKw: 'ar_KW',
  ArLb: 'ar_LB',
  ArLy: 'ar_LY',
  ArMa: 'ar_MA',
  ArOm: 'ar_OM',
  ArQa: 'ar_QA',
  ArSa: 'ar_SA',
  ArSy: 'ar_SY',
  ArTn: 'ar_TN',
  ArYe: 'ar_YE',
  As: 'as',
  Av: 'av',
  Ay: 'ay',
  Az: 'az',
  Ba: 'ba',
  Be: 'be',
  BeBy: 'be_BY',
  Bg: 'bg',
  BgBg: 'bg_BG',
  Bh: 'bh',
  Bi: 'bi',
  Bm: 'bm',
  Bn: 'bn',
  Bo: 'bo',
  Br: 'br',
  Bs: 'bs',
  Ca: 'ca',
  CaEs: 'ca_ES',
  Ce: 'ce',
  Ch: 'ch',
  Co: 'co',
  Cr: 'cr',
  Cs: 'cs',
  CsCz: 'cs_CZ',
  Cu: 'cu',
  Cv: 'cv',
  Cy: 'cy',
  Da: 'da',
  DaDk: 'da_DK',
  De: 'de',
  DeAt: 'de_AT',
  DeCh: 'de_CH',
  DeDe: 'de_DE',
  DeLi: 'de_LI',
  DeLu: 'de_LU',
  DivMv: 'div_MV',
  Dv: 'dv',
  Dz: 'dz',
  Ee: 'ee',
  El: 'el',
  ElGr: 'el_GR',
  En: 'en',
  EnAu: 'en_AU',
  EnBz: 'en_BZ',
  EnCa: 'en_CA',
  EnCb: 'en_CB',
  EnGb: 'en_GB',
  EnIe: 'en_IE',
  EnJm: 'en_JM',
  EnNz: 'en_NZ',
  EnPh: 'en_PH',
  EnTt: 'en_TT',
  EnUs: 'en_US',
  EnZa: 'en_ZA',
  EnZw: 'en_ZW',
  Eo: 'eo',
  Es: 'es',
  EsAr: 'es_AR',
  EsBo: 'es_BO',
  EsCl: 'es_CL',
  EsCo: 'es_CO',
  EsCr: 'es_CR',
  EsDo: 'es_DO',
  EsEc: 'es_EC',
  EsEs: 'es_ES',
  EsGt: 'es_GT',
  EsHn: 'es_HN',
  EsMx: 'es_MX',
  EsNi: 'es_NI',
  EsPa: 'es_PA',
  EsPe: 'es_PE',
  EsPr: 'es_PR',
  EsPy: 'es_PY',
  EsSv: 'es_SV',
  EsUy: 'es_UY',
  EsVe: 'es_VE',
  Et: 'et',
  EtEe: 'et_EE',
  Eu: 'eu',
  EuEs: 'eu_ES',
  Fa: 'fa',
  FaIr: 'fa_IR',
  Ff: 'ff',
  Fi: 'fi',
  FiFi: 'fi_FI',
  Fj: 'fj',
  Fo: 'fo',
  FoFo: 'fo_FO',
  Fr: 'fr',
  FrBe: 'fr_BE',
  FrCa: 'fr_CA',
  FrCh: 'fr_CH',
  FrFr: 'fr_FR',
  FrLu: 'fr_LU',
  FrMc: 'fr_MC',
  Fy: 'fy',
  Ga: 'ga',
  Gd: 'gd',
  Gl: 'gl',
  GlEs: 'gl_ES',
  Gn: 'gn',
  Gu: 'gu',
  GuIn: 'gu_IN',
  Gv: 'gv',
  Ha: 'ha',
  He: 'he',
  HeIl: 'he_IL',
  Hi: 'hi',
  HiIn: 'hi_IN',
  Ho: 'ho',
  Hr: 'hr',
  HrHr: 'hr_HR',
  Ht: 'ht',
  Hu: 'hu',
  HuHu: 'hu_HU',
  Hy: 'hy',
  HyAm: 'hy_AM',
  Hz: 'hz',
  Ia: 'ia',
  Ie: 'ie',
  Ig: 'ig',
  Ii: 'ii',
  Ik: 'ik',
  Io: 'io',
  Is: 'is',
  IsIs: 'is_IS',
  It: 'it',
  ItCh: 'it_CH',
  ItIt: 'it_IT',
  Iu: 'iu',
  Ja: 'ja',
  JaJp: 'ja_JP',
  Jv: 'jv',
  Ka: 'ka',
  KaGe: 'ka_GE',
  Kg: 'kg',
  Ki: 'ki',
  Kj: 'kj',
  Kk: 'kk',
  KkKz: 'kk_KZ',
  Kl: 'kl',
  Km: 'km',
  Kn: 'kn',
  KnIn: 'kn_IN',
  Ko: 'ko',
  KoKr: 'ko_KR',
  Kr: 'kr',
  Ks: 'ks',
  Ku: 'ku',
  Kv: 'kv',
  Kw: 'kw',
  Ky: 'ky',
  KyKz: 'ky_KZ',
  La: 'la',
  Lb: 'lb',
  Lg: 'lg',
  Li: 'li',
  Ln: 'ln',
  Lo: 'lo',
  Lt: 'lt',
  LtLt: 'lt_LT',
  Lu: 'lu',
  Lv: 'lv',
  LvLv: 'lv_LV',
  Mg: 'mg',
  Mh: 'mh',
  Mi: 'mi',
  Mk: 'mk',
  MkMk: 'mk_MK',
  Ml: 'ml',
  Mn: 'mn',
  MnMn: 'mn_MN',
  Mr: 'mr',
  MrIn: 'mr_IN',
  Ms: 'ms',
  MsBn: 'ms_BN',
  MsMy: 'ms_MY',
  Mt: 'mt',
  My: 'my',
  Na: 'na',
  Nb: 'nb',
  NbNo: 'nb_NO',
  Nd: 'nd',
  Ne: 'ne',
  Ng: 'ng',
  Nl: 'nl',
  NlBe: 'nl_BE',
  NlNl: 'nl_NL',
  Nn: 'nn',
  NnNo: 'nn_NO',
  No: 'no',
  Nr: 'nr',
  Nv: 'nv',
  Ny: 'ny',
  Oc: 'oc',
  Oj: 'oj',
  Om: 'om',
  Or: 'or',
  Os: 'os',
  Pa: 'pa',
  PaIn: 'pa_IN',
  Pi: 'pi',
  Pl: 'pl',
  PlPl: 'pl_PL',
  Ps: 'ps',
  Pt: 'pt',
  PtBr: 'pt_BR',
  PtPt: 'pt_PT',
  Qu: 'qu',
  Rm: 'rm',
  Rn: 'rn',
  Ro: 'ro',
  RoRo: 'ro_RO',
  Ru: 'ru',
  RuRu: 'ru_RU',
  Rw: 'rw',
  Sa: 'sa',
  SaIn: 'sa_IN',
  Sc: 'sc',
  Sd: 'sd',
  Se: 'se',
  Set: 'set',
  SetId: 'set_ID',
  Sg: 'sg',
  Si: 'si',
  Sk: 'sk',
  SkSk: 'sk_SK',
  Sl: 'sl',
  SlSi: 'sl_SI',
  Sm: 'sm',
  Sn: 'sn',
  So: 'so',
  Sq: 'sq',
  SqAl: 'sq_AL',
  Sr: 'sr',
  Ss: 'ss',
  St: 'st',
  Su: 'su',
  Sv: 'sv',
  SvFi: 'sv_FI',
  SvSe: 'sv_SE',
  Sw: 'sw',
  SwKe: 'sw_KE',
  Ta: 'ta',
  TaIn: 'ta_IN',
  Te: 'te',
  TeIn: 'te_IN',
  Tg: 'tg',
  Th: 'th',
  ThTh: 'th_TH',
  Ti: 'ti',
  Tk: 'tk',
  Tl: 'tl',
  Tn: 'tn',
  To: 'to',
  Tr: 'tr',
  TrTr: 'tr_TR',
  Ts: 'ts',
  Tt: 'tt',
  TtRu: 'tt_RU',
  Tw: 'tw',
  Ty: 'ty',
  Ug: 'ug',
  Uk: 'uk',
  UkUa: 'uk_UA',
  Ur: 'ur',
  UrPk: 'ur_PK',
  Uz: 'uz',
  Ve: 've',
  Vi: 'vi',
  ViVn: 'vi_VN',
  Vo: 'vo',
  Wa: 'wa',
  Wo: 'wo',
  Xh: 'xh',
  Yi: 'yi',
  Yo: 'yo',
  Za: 'za',
  Zh: 'zh',
  ZhChs: 'zh_CHS',
  ZhCht: 'zh_CHT',
  ZhCn: 'zh_CN',
  ZhHk: 'zh_HK',
  ZhMo: 'zh_MO',
  ZhSg: 'zh_SG',
  ZhTw: 'zh_TW',
  Zu: 'zu',
} as const;

export type Locale_LocationCode_Enum =
  (typeof localeLocationCodeEnum)[keyof typeof localeLocationCodeEnum];
/** Boolean expression to compare columns of type "locale_locationCode_enum". All fields are combined with logical 'AND'. */
export type Locale_LocationCode_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Locale_LocationCode_Enum>;
  _in?: InputMaybe<Array<Locale_LocationCode_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Locale_LocationCode_Enum>;
  _nin?: InputMaybe<Array<Locale_LocationCode_Enum>>;
};

/** input type for inserting data into table "locale.locationCode" */
export type Locale_LocationCode_Insert_Input = {
  location?: InputMaybe<Locale_Location_Obj_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Locale_LocationCode_Max_Fields = {
  __typename?: 'locale_locationCode_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Locale_LocationCode_Min_Fields = {
  __typename?: 'locale_locationCode_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "locale.locationCode" */
export type Locale_LocationCode_Mutation_Response = {
  __typename?: 'locale_locationCode_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Locale_LocationCode>;
};

/** input type for inserting object relation for remote table "locale.locationCode" */
export type Locale_LocationCode_Obj_Rel_Insert_Input = {
  data: Locale_LocationCode_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Locale_LocationCode_On_Conflict>;
};

/** on_conflict condition type for table "locale.locationCode" */
export type Locale_LocationCode_On_Conflict = {
  constraint: Locale_LocationCode_Constraint;
  update_columns: Array<Locale_LocationCode_Update_Column>;
  where?: InputMaybe<Locale_LocationCode_Bool_Exp>;
};

/** Ordering options when selecting data from "locale.locationCode". */
export type Locale_LocationCode_Order_By = {
  location?: InputMaybe<Locale_Location_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: locale.locationCode */
export type Locale_LocationCode_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "locale.locationCode" */
export const localeLocationCodeSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Locale_LocationCode_Select_Column =
  (typeof localeLocationCodeSelectColumn)[keyof typeof localeLocationCodeSelectColumn];
/** input type for updating data in table "locale.locationCode" */
export type Locale_LocationCode_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "locale_locationCode" */
export type Locale_LocationCode_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Locale_LocationCode_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Locale_LocationCode_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "locale.locationCode" */
export const localeLocationCodeUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Locale_LocationCode_Update_Column =
  (typeof localeLocationCodeUpdateColumn)[keyof typeof localeLocationCodeUpdateColumn];
export type Locale_LocationCode_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Locale_LocationCode_Set_Input>;
  /** filter the rows which have to be updated */
  where: Locale_LocationCode_Bool_Exp;
};

/** aggregated selection of "locale.location" */
export type Locale_Location_Aggregate = {
  __typename?: 'locale_location_aggregate';
  aggregate: Maybe<Locale_Location_Aggregate_Fields>;
  nodes: Array<Locale_Location>;
};

/** aggregate fields of "locale.location" */
export type Locale_Location_Aggregate_Fields = {
  __typename?: 'locale_location_aggregate_fields';
  avg: Maybe<Locale_Location_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Locale_Location_Max_Fields>;
  min: Maybe<Locale_Location_Min_Fields>;
  stddev: Maybe<Locale_Location_Stddev_Fields>;
  stddev_pop: Maybe<Locale_Location_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Locale_Location_Stddev_Samp_Fields>;
  sum: Maybe<Locale_Location_Sum_Fields>;
  var_pop: Maybe<Locale_Location_Var_Pop_Fields>;
  var_samp: Maybe<Locale_Location_Var_Samp_Fields>;
  variance: Maybe<Locale_Location_Variance_Fields>;
};

/** aggregate fields of "locale.location" */
export type Locale_Location_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Locale_Location_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Locale_Location_Avg_Fields = {
  __typename?: 'locale_location_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "locale.location". All fields are combined with a logical 'AND'. */
export type Locale_Location_Bool_Exp = {
  _and?: InputMaybe<Array<Locale_Location_Bool_Exp>>;
  _not?: InputMaybe<Locale_Location_Bool_Exp>;
  _or?: InputMaybe<Array<Locale_Location_Bool_Exp>>;
  code?: InputMaybe<Locale_LocationCode_Enum_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  locationCode?: InputMaybe<Locale_LocationCode_Bool_Exp>;
  messages?: InputMaybe<Locale_Message_Bool_Exp>;
  messagesByLocaleto?: InputMaybe<Locale_Message_Bool_Exp>;
  messagesByLocaleto_aggregate?: InputMaybe<Locale_Message_Aggregate_Bool_Exp>;
  messages_aggregate?: InputMaybe<Locale_Message_Aggregate_Bool_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "locale.location" */
export const localeLocationConstraint = {
  /** unique or primary key constraint on columns "code" */
  LocationCodeKey: 'location_code_key',
  /** unique or primary key constraint on columns "id" */
  LocationPkey: 'location_pkey',
} as const;

export type Locale_Location_Constraint =
  (typeof localeLocationConstraint)[keyof typeof localeLocationConstraint];
/** input type for incrementing numeric columns in table "locale.location" */
export type Locale_Location_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "locale.location" */
export type Locale_Location_Insert_Input = {
  code?: InputMaybe<Locale_LocationCode_Enum>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  locationCode?: InputMaybe<Locale_LocationCode_Obj_Rel_Insert_Input>;
  messages?: InputMaybe<Locale_Message_Arr_Rel_Insert_Input>;
  messagesByLocaleto?: InputMaybe<Locale_Message_Arr_Rel_Insert_Input>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Locale_Location_Max_Fields = {
  __typename?: 'locale_location_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Locale_Location_Min_Fields = {
  __typename?: 'locale_location_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "locale.location" */
export type Locale_Location_Mutation_Response = {
  __typename?: 'locale_location_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Locale_Location>;
};

/** input type for inserting object relation for remote table "locale.location" */
export type Locale_Location_Obj_Rel_Insert_Input = {
  data: Locale_Location_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Locale_Location_On_Conflict>;
};

/** on_conflict condition type for table "locale.location" */
export type Locale_Location_On_Conflict = {
  constraint: Locale_Location_Constraint;
  update_columns: Array<Locale_Location_Update_Column>;
  where?: InputMaybe<Locale_Location_Bool_Exp>;
};

/** Ordering options when selecting data from "locale.location". */
export type Locale_Location_Order_By = {
  code?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationCode?: InputMaybe<Locale_LocationCode_Order_By>;
  messagesByLocaleto_aggregate?: InputMaybe<Locale_Message_Aggregate_Order_By>;
  messages_aggregate?: InputMaybe<Locale_Message_Aggregate_Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: locale.location */
export type Locale_Location_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "locale.location" */
export const localeLocationSelectColumn = {
  /** column name */
  Code: 'code',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Locale_Location_Select_Column =
  (typeof localeLocationSelectColumn)[keyof typeof localeLocationSelectColumn];
/** input type for updating data in table "locale.location" */
export type Locale_Location_Set_Input = {
  code?: InputMaybe<Locale_LocationCode_Enum>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Locale_Location_Stddev_Fields = {
  __typename?: 'locale_location_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Locale_Location_Stddev_Pop_Fields = {
  __typename?: 'locale_location_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Locale_Location_Stddev_Samp_Fields = {
  __typename?: 'locale_location_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "locale_location" */
export type Locale_Location_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Locale_Location_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Locale_Location_Stream_Cursor_Value_Input = {
  code?: InputMaybe<Locale_LocationCode_Enum>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Locale_Location_Sum_Fields = {
  __typename?: 'locale_location_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "locale.location" */
export const localeLocationUpdateColumn = {
  /** column name */
  Code: 'code',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Locale_Location_Update_Column =
  (typeof localeLocationUpdateColumn)[keyof typeof localeLocationUpdateColumn];
export type Locale_Location_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Locale_Location_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Locale_Location_Set_Input>;
  /** filter the rows which have to be updated */
  where: Locale_Location_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Locale_Location_Var_Pop_Fields = {
  __typename?: 'locale_location_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Locale_Location_Var_Samp_Fields = {
  __typename?: 'locale_location_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Locale_Location_Variance_Fields = {
  __typename?: 'locale_location_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** columns and relationships of "locale.message" */
export type Locale_Message = {
  __typename?: 'locale_message';
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  localeFrom: Scalars['String'];
  localeTo: Scalars['String'];
  /** An object relationship */
  location: Locale_Location;
  /** An object relationship */
  locationByLocaleto: Locale_Location;
  meta: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  ratings: Array<Locale_Rating>;
  /** An aggregate relationship */
  ratings_aggregate: Locale_Rating_Aggregate;
  textFrom: Scalars['String'];
  textTo: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "locale.message" */
export type Locale_MessageMetaArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "locale.message" */
export type Locale_MessageRatingsArgs = {
  distinct_on: InputMaybe<Array<Locale_Rating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Rating_Order_By>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

/** columns and relationships of "locale.message" */
export type Locale_MessageRatings_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Rating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Rating_Order_By>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

/** aggregated selection of "locale.message" */
export type Locale_Message_Aggregate = {
  __typename?: 'locale_message_aggregate';
  aggregate: Maybe<Locale_Message_Aggregate_Fields>;
  nodes: Array<Locale_Message>;
};

export type Locale_Message_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locale_Message_Aggregate_Bool_Exp_Count>;
};

export type Locale_Message_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locale_Message_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Locale_Message_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "locale.message" */
export type Locale_Message_Aggregate_Fields = {
  __typename?: 'locale_message_aggregate_fields';
  avg: Maybe<Locale_Message_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Locale_Message_Max_Fields>;
  min: Maybe<Locale_Message_Min_Fields>;
  stddev: Maybe<Locale_Message_Stddev_Fields>;
  stddev_pop: Maybe<Locale_Message_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Locale_Message_Stddev_Samp_Fields>;
  sum: Maybe<Locale_Message_Sum_Fields>;
  var_pop: Maybe<Locale_Message_Var_Pop_Fields>;
  var_samp: Maybe<Locale_Message_Var_Samp_Fields>;
  variance: Maybe<Locale_Message_Variance_Fields>;
};

/** aggregate fields of "locale.message" */
export type Locale_Message_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Locale_Message_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "locale.message" */
export type Locale_Message_Aggregate_Order_By = {
  avg?: InputMaybe<Locale_Message_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locale_Message_Max_Order_By>;
  min?: InputMaybe<Locale_Message_Min_Order_By>;
  stddev?: InputMaybe<Locale_Message_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locale_Message_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locale_Message_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locale_Message_Sum_Order_By>;
  var_pop?: InputMaybe<Locale_Message_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locale_Message_Var_Samp_Order_By>;
  variance?: InputMaybe<Locale_Message_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Locale_Message_Append_Input = {
  meta?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "locale.message" */
export type Locale_Message_Arr_Rel_Insert_Input = {
  data: Array<Locale_Message_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Locale_Message_On_Conflict>;
};

/** aggregate avg on columns */
export type Locale_Message_Avg_Fields = {
  __typename?: 'locale_message_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "locale.message" */
export type Locale_Message_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "locale.message". All fields are combined with a logical 'AND'. */
export type Locale_Message_Bool_Exp = {
  _and?: InputMaybe<Array<Locale_Message_Bool_Exp>>;
  _not?: InputMaybe<Locale_Message_Bool_Exp>;
  _or?: InputMaybe<Array<Locale_Message_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  localeFrom?: InputMaybe<String_Comparison_Exp>;
  localeTo?: InputMaybe<String_Comparison_Exp>;
  location?: InputMaybe<Locale_Location_Bool_Exp>;
  locationByLocaleto?: InputMaybe<Locale_Location_Bool_Exp>;
  meta?: InputMaybe<Jsonb_Comparison_Exp>;
  ratings?: InputMaybe<Locale_Rating_Bool_Exp>;
  ratings_aggregate?: InputMaybe<Locale_Rating_Aggregate_Bool_Exp>;
  textFrom?: InputMaybe<String_Comparison_Exp>;
  textTo?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "locale.message" */
export const localeMessageConstraint = {
  /** unique or primary key constraint on columns "id" */
  MessagePkey: 'message_pkey',
} as const;

export type Locale_Message_Constraint =
  (typeof localeMessageConstraint)[keyof typeof localeMessageConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Locale_Message_Delete_At_Path_Input = {
  meta?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Locale_Message_Delete_Elem_Input = {
  meta?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Locale_Message_Delete_Key_Input = {
  meta?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "locale.message" */
export type Locale_Message_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "locale.message" */
export type Locale_Message_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  localeFrom?: InputMaybe<Scalars['String']>;
  localeTo?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<Locale_Location_Obj_Rel_Insert_Input>;
  locationByLocaleto?: InputMaybe<Locale_Location_Obj_Rel_Insert_Input>;
  meta?: InputMaybe<Scalars['jsonb']>;
  ratings?: InputMaybe<Locale_Rating_Arr_Rel_Insert_Input>;
  textFrom?: InputMaybe<Scalars['String']>;
  textTo?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Locale_Message_Max_Fields = {
  __typename?: 'locale_message_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  localeFrom: Maybe<Scalars['String']>;
  localeTo: Maybe<Scalars['String']>;
  textFrom: Maybe<Scalars['String']>;
  textTo: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "locale.message" */
export type Locale_Message_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  localeFrom?: InputMaybe<Order_By>;
  localeTo?: InputMaybe<Order_By>;
  textFrom?: InputMaybe<Order_By>;
  textTo?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locale_Message_Min_Fields = {
  __typename?: 'locale_message_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  localeFrom: Maybe<Scalars['String']>;
  localeTo: Maybe<Scalars['String']>;
  textFrom: Maybe<Scalars['String']>;
  textTo: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "locale.message" */
export type Locale_Message_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  localeFrom?: InputMaybe<Order_By>;
  localeTo?: InputMaybe<Order_By>;
  textFrom?: InputMaybe<Order_By>;
  textTo?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "locale.message" */
export type Locale_Message_Mutation_Response = {
  __typename?: 'locale_message_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Locale_Message>;
};

/** input type for inserting object relation for remote table "locale.message" */
export type Locale_Message_Obj_Rel_Insert_Input = {
  data: Locale_Message_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Locale_Message_On_Conflict>;
};

/** on_conflict condition type for table "locale.message" */
export type Locale_Message_On_Conflict = {
  constraint: Locale_Message_Constraint;
  update_columns: Array<Locale_Message_Update_Column>;
  where?: InputMaybe<Locale_Message_Bool_Exp>;
};

/** Ordering options when selecting data from "locale.message". */
export type Locale_Message_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  localeFrom?: InputMaybe<Order_By>;
  localeTo?: InputMaybe<Order_By>;
  location?: InputMaybe<Locale_Location_Order_By>;
  locationByLocaleto?: InputMaybe<Locale_Location_Order_By>;
  meta?: InputMaybe<Order_By>;
  ratings_aggregate?: InputMaybe<Locale_Rating_Aggregate_Order_By>;
  textFrom?: InputMaybe<Order_By>;
  textTo?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: locale.message */
export type Locale_Message_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Locale_Message_Prepend_Input = {
  meta?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "locale.message" */
export const localeMessageSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  LocaleFrom: 'localeFrom',
  /** column name */
  LocaleTo: 'localeTo',
  /** column name */
  Meta: 'meta',
  /** column name */
  TextFrom: 'textFrom',
  /** column name */
  TextTo: 'textTo',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Locale_Message_Select_Column =
  (typeof localeMessageSelectColumn)[keyof typeof localeMessageSelectColumn];
/** input type for updating data in table "locale.message" */
export type Locale_Message_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  localeFrom?: InputMaybe<Scalars['String']>;
  localeTo?: InputMaybe<Scalars['String']>;
  meta?: InputMaybe<Scalars['jsonb']>;
  textFrom?: InputMaybe<Scalars['String']>;
  textTo?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Locale_Message_Stddev_Fields = {
  __typename?: 'locale_message_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "locale.message" */
export type Locale_Message_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locale_Message_Stddev_Pop_Fields = {
  __typename?: 'locale_message_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "locale.message" */
export type Locale_Message_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locale_Message_Stddev_Samp_Fields = {
  __typename?: 'locale_message_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "locale.message" */
export type Locale_Message_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "locale_message" */
export type Locale_Message_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Locale_Message_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Locale_Message_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  localeFrom?: InputMaybe<Scalars['String']>;
  localeTo?: InputMaybe<Scalars['String']>;
  meta?: InputMaybe<Scalars['jsonb']>;
  textFrom?: InputMaybe<Scalars['String']>;
  textTo?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Locale_Message_Sum_Fields = {
  __typename?: 'locale_message_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "locale.message" */
export type Locale_Message_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "locale.message" */
export const localeMessageUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  LocaleFrom: 'localeFrom',
  /** column name */
  LocaleTo: 'localeTo',
  /** column name */
  Meta: 'meta',
  /** column name */
  TextFrom: 'textFrom',
  /** column name */
  TextTo: 'textTo',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Locale_Message_Update_Column =
  (typeof localeMessageUpdateColumn)[keyof typeof localeMessageUpdateColumn];
export type Locale_Message_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Locale_Message_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Locale_Message_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Locale_Message_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Locale_Message_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Locale_Message_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Locale_Message_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Locale_Message_Set_Input>;
  /** filter the rows which have to be updated */
  where: Locale_Message_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Locale_Message_Var_Pop_Fields = {
  __typename?: 'locale_message_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "locale.message" */
export type Locale_Message_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locale_Message_Var_Samp_Fields = {
  __typename?: 'locale_message_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "locale.message" */
export type Locale_Message_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locale_Message_Variance_Fields = {
  __typename?: 'locale_message_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "locale.message" */
export type Locale_Message_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "locale.rating" */
export type Locale_Rating = {
  __typename?: 'locale_rating';
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  message: Locale_Message;
  messageId: Scalars['bigint'];
  quality: Scalars['Int'];
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
};

/** aggregated selection of "locale.rating" */
export type Locale_Rating_Aggregate = {
  __typename?: 'locale_rating_aggregate';
  aggregate: Maybe<Locale_Rating_Aggregate_Fields>;
  nodes: Array<Locale_Rating>;
};

export type Locale_Rating_Aggregate_Bool_Exp = {
  count?: InputMaybe<Locale_Rating_Aggregate_Bool_Exp_Count>;
};

export type Locale_Rating_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locale_Rating_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Locale_Rating_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "locale.rating" */
export type Locale_Rating_Aggregate_Fields = {
  __typename?: 'locale_rating_aggregate_fields';
  avg: Maybe<Locale_Rating_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Locale_Rating_Max_Fields>;
  min: Maybe<Locale_Rating_Min_Fields>;
  stddev: Maybe<Locale_Rating_Stddev_Fields>;
  stddev_pop: Maybe<Locale_Rating_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Locale_Rating_Stddev_Samp_Fields>;
  sum: Maybe<Locale_Rating_Sum_Fields>;
  var_pop: Maybe<Locale_Rating_Var_Pop_Fields>;
  var_samp: Maybe<Locale_Rating_Var_Samp_Fields>;
  variance: Maybe<Locale_Rating_Variance_Fields>;
};

/** aggregate fields of "locale.rating" */
export type Locale_Rating_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Locale_Rating_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "locale.rating" */
export type Locale_Rating_Aggregate_Order_By = {
  avg?: InputMaybe<Locale_Rating_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locale_Rating_Max_Order_By>;
  min?: InputMaybe<Locale_Rating_Min_Order_By>;
  stddev?: InputMaybe<Locale_Rating_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locale_Rating_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locale_Rating_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locale_Rating_Sum_Order_By>;
  var_pop?: InputMaybe<Locale_Rating_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locale_Rating_Var_Samp_Order_By>;
  variance?: InputMaybe<Locale_Rating_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "locale.rating" */
export type Locale_Rating_Arr_Rel_Insert_Input = {
  data: Array<Locale_Rating_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Locale_Rating_On_Conflict>;
};

/** aggregate avg on columns */
export type Locale_Rating_Avg_Fields = {
  __typename?: 'locale_rating_avg_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "locale.rating" */
export type Locale_Rating_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "locale.rating". All fields are combined with a logical 'AND'. */
export type Locale_Rating_Bool_Exp = {
  _and?: InputMaybe<Array<Locale_Rating_Bool_Exp>>;
  _not?: InputMaybe<Locale_Rating_Bool_Exp>;
  _or?: InputMaybe<Array<Locale_Rating_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  message?: InputMaybe<Locale_Message_Bool_Exp>;
  messageId?: InputMaybe<Bigint_Comparison_Exp>;
  quality?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "locale.rating" */
export const localeRatingConstraint = {
  /** unique or primary key constraint on columns "id" */
  RatingPkey: 'rating_pkey',
} as const;

export type Locale_Rating_Constraint =
  (typeof localeRatingConstraint)[keyof typeof localeRatingConstraint];
/** input type for incrementing numeric columns in table "locale.rating" */
export type Locale_Rating_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  messageId?: InputMaybe<Scalars['bigint']>;
  quality?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "locale.rating" */
export type Locale_Rating_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message?: InputMaybe<Locale_Message_Obj_Rel_Insert_Input>;
  messageId?: InputMaybe<Scalars['bigint']>;
  quality?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Locale_Rating_Max_Fields = {
  __typename?: 'locale_rating_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  messageId: Maybe<Scalars['bigint']>;
  quality: Maybe<Scalars['Int']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "locale.rating" */
export type Locale_Rating_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locale_Rating_Min_Fields = {
  __typename?: 'locale_rating_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  messageId: Maybe<Scalars['bigint']>;
  quality: Maybe<Scalars['Int']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "locale.rating" */
export type Locale_Rating_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "locale.rating" */
export type Locale_Rating_Mutation_Response = {
  __typename?: 'locale_rating_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Locale_Rating>;
};

/** on_conflict condition type for table "locale.rating" */
export type Locale_Rating_On_Conflict = {
  constraint: Locale_Rating_Constraint;
  update_columns: Array<Locale_Rating_Update_Column>;
  where?: InputMaybe<Locale_Rating_Bool_Exp>;
};

/** Ordering options when selecting data from "locale.rating". */
export type Locale_Rating_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  message?: InputMaybe<Locale_Message_Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: locale.rating */
export type Locale_Rating_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "locale.rating" */
export const localeRatingSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  MessageId: 'messageId',
  /** column name */
  Quality: 'quality',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type Locale_Rating_Select_Column =
  (typeof localeRatingSelectColumn)[keyof typeof localeRatingSelectColumn];
/** input type for updating data in table "locale.rating" */
export type Locale_Rating_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  messageId?: InputMaybe<Scalars['bigint']>;
  quality?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Locale_Rating_Stddev_Fields = {
  __typename?: 'locale_rating_stddev_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "locale.rating" */
export type Locale_Rating_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locale_Rating_Stddev_Pop_Fields = {
  __typename?: 'locale_rating_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "locale.rating" */
export type Locale_Rating_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locale_Rating_Stddev_Samp_Fields = {
  __typename?: 'locale_rating_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "locale.rating" */
export type Locale_Rating_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "locale_rating" */
export type Locale_Rating_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Locale_Rating_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Locale_Rating_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  messageId?: InputMaybe<Scalars['bigint']>;
  quality?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Locale_Rating_Sum_Fields = {
  __typename?: 'locale_rating_sum_fields';
  id: Maybe<Scalars['bigint']>;
  messageId: Maybe<Scalars['bigint']>;
  quality: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "locale.rating" */
export type Locale_Rating_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** update columns of table "locale.rating" */
export const localeRatingUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  MessageId: 'messageId',
  /** column name */
  Quality: 'quality',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type Locale_Rating_Update_Column =
  (typeof localeRatingUpdateColumn)[keyof typeof localeRatingUpdateColumn];
export type Locale_Rating_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Locale_Rating_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Locale_Rating_Set_Input>;
  /** filter the rows which have to be updated */
  where: Locale_Rating_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Locale_Rating_Var_Pop_Fields = {
  __typename?: 'locale_rating_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "locale.rating" */
export type Locale_Rating_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locale_Rating_Var_Samp_Fields = {
  __typename?: 'locale_rating_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "locale.rating" */
export type Locale_Rating_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locale_Rating_Variance_Fields = {
  __typename?: 'locale_rating_variance_fields';
  id: Maybe<Scalars['Float']>;
  messageId: Maybe<Scalars['Float']>;
  quality: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "locale.rating" */
export type Locale_Rating_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  messageId?: InputMaybe<Order_By>;
  quality?: InputMaybe<Order_By>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** delete data from the table: "customMessage.content" */
  delete_customMessage_content: Maybe<CustomMessage_Content_Mutation_Response>;
  /** delete single row from the table: "customMessage.content" */
  delete_customMessage_content_by_pk: Maybe<CustomMessage_Content>;
  /** delete data from the table: "customMessage.pageName" */
  delete_customMessage_pageName: Maybe<CustomMessage_PageName_Mutation_Response>;
  /** delete single row from the table: "customMessage.pageName" */
  delete_customMessage_pageName_by_pk: Maybe<CustomMessage_PageName>;
  /** delete data from the table: "embedding.zonos_com_dev_digest_private" */
  delete_embedding_zonos_com_dev_digest_private: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_digest_private" */
  delete_embedding_zonos_com_dev_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** delete data from the table: "embedding.zonos_com_dev_digest_public" */
  delete_embedding_zonos_com_dev_digest_public: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_digest_public" */
  delete_embedding_zonos_com_dev_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** delete data from the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  delete_embedding_zonos_com_dev_digest_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  delete_embedding_zonos_com_dev_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** delete data from the table: "embedding.zonos_com_dev_private" */
  delete_embedding_zonos_com_dev_private: Maybe<Embedding_Zonos_Com_Dev_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_private" */
  delete_embedding_zonos_com_dev_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Private>;
  /** delete data from the table: "embedding.zonos_com_dev_public" */
  delete_embedding_zonos_com_dev_public: Maybe<Embedding_Zonos_Com_Dev_Public_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_public" */
  delete_embedding_zonos_com_dev_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Public>;
  /** delete data from the table: "embedding.zonos_com_dev_split_front_private" */
  delete_embedding_zonos_com_dev_split_front_private: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_split_front_private" */
  delete_embedding_zonos_com_dev_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** delete data from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  delete_embedding_zonos_com_dev_split_front_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  delete_embedding_zonos_com_dev_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** delete data from the table: "embedding.zonos_com_dev_zonos_email_only" */
  delete_embedding_zonos_com_dev_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_dev_zonos_email_only" */
  delete_embedding_zonos_com_dev_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** delete data from the table: "embedding.zonos_com_digest_private" */
  delete_embedding_zonos_com_digest_private: Maybe<Embedding_Zonos_Com_Digest_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_digest_private" */
  delete_embedding_zonos_com_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Digest_Private>;
  /** delete data from the table: "embedding.zonos_com_digest_public" */
  delete_embedding_zonos_com_digest_public: Maybe<Embedding_Zonos_Com_Digest_Public_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_digest_public" */
  delete_embedding_zonos_com_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Digest_Public>;
  /** delete data from the table: "embedding.zonos_com_digest_zonos_email_only" */
  delete_embedding_zonos_com_digest_zonos_email_only: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_digest_zonos_email_only" */
  delete_embedding_zonos_com_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** delete data from the table: "embedding.zonos_com_private" */
  delete_embedding_zonos_com_private: Maybe<Embedding_Zonos_Com_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_private" */
  delete_embedding_zonos_com_private_by_pk: Maybe<Embedding_Zonos_Com_Private>;
  /** delete data from the table: "embedding.zonos_com_public" */
  delete_embedding_zonos_com_public: Maybe<Embedding_Zonos_Com_Public_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_public" */
  delete_embedding_zonos_com_public_by_pk: Maybe<Embedding_Zonos_Com_Public>;
  /** delete data from the table: "embedding.zonos_com_split_front_private" */
  delete_embedding_zonos_com_split_front_private: Maybe<Embedding_Zonos_Com_Split_Front_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_split_front_private" */
  delete_embedding_zonos_com_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Private>;
  /** delete data from the table: "embedding.zonos_com_split_front_public" */
  delete_embedding_zonos_com_split_front_public: Maybe<Embedding_Zonos_Com_Split_Front_Public_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_split_front_public" */
  delete_embedding_zonos_com_split_front_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Public>;
  /** delete data from the table: "embedding.zonos_com_split_front_zonos_email_only" */
  delete_embedding_zonos_com_split_front_zonos_email_only: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_split_front_zonos_email_only" */
  delete_embedding_zonos_com_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** delete data from the table: "embedding.zonos_com_split_private" */
  delete_embedding_zonos_com_split_private: Maybe<Embedding_Zonos_Com_Split_Private_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_split_private" */
  delete_embedding_zonos_com_split_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Private>;
  /** delete data from the table: "embedding.zonos_com_split_public" */
  delete_embedding_zonos_com_split_public: Maybe<Embedding_Zonos_Com_Split_Public_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_split_public" */
  delete_embedding_zonos_com_split_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Public>;
  /** delete data from the table: "embedding.zonos_com_split_zonos_email_only" */
  delete_embedding_zonos_com_split_zonos_email_only: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_split_zonos_email_only" */
  delete_embedding_zonos_com_split_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** delete data from the table: "embedding.zonos_com_zonos_email_only" */
  delete_embedding_zonos_com_zonos_email_only: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Mutation_Response>;
  /** delete single row from the table: "embedding.zonos_com_zonos_email_only" */
  delete_embedding_zonos_com_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** delete data from the table: "error.event" */
  delete_error_event: Maybe<Error_Event_Mutation_Response>;
  /** delete single row from the table: "error.event" */
  delete_error_event_by_pk: Maybe<Error_Event>;
  /** delete data from the table: "error.project" */
  delete_error_project: Maybe<Error_Project_Mutation_Response>;
  /** delete data from the table: "error.projectName" */
  delete_error_projectName: Maybe<Error_ProjectName_Mutation_Response>;
  /** delete single row from the table: "error.projectName" */
  delete_error_projectName_by_pk: Maybe<Error_ProjectName>;
  /** delete single row from the table: "error.project" */
  delete_error_project_by_pk: Maybe<Error_Project>;
  /** delete data from the table: "feature.aspect" */
  delete_feature_aspect: Maybe<Feature_Aspect_Mutation_Response>;
  /** delete data from the table: "feature.aspectKey" */
  delete_feature_aspectKey: Maybe<Feature_AspectKey_Mutation_Response>;
  /** delete single row from the table: "feature.aspectKey" */
  delete_feature_aspectKey_by_pk: Maybe<Feature_AspectKey>;
  /** delete single row from the table: "feature.aspect" */
  delete_feature_aspect_by_pk: Maybe<Feature_Aspect>;
  /** delete data from the table: "feature.audience" */
  delete_feature_audience: Maybe<Feature_Audience_Mutation_Response>;
  /** delete data from the table: "feature.audienceAspectLink" */
  delete_feature_audienceAspectLink: Maybe<Feature_AudienceAspectLink_Mutation_Response>;
  /** delete single row from the table: "feature.audienceAspectLink" */
  delete_feature_audienceAspectLink_by_pk: Maybe<Feature_AudienceAspectLink>;
  /** delete data from the table: "feature.audienceEntityLink" */
  delete_feature_audienceEntityLink: Maybe<Feature_AudienceEntityLink_Mutation_Response>;
  /** delete single row from the table: "feature.audienceEntityLink" */
  delete_feature_audienceEntityLink_by_pk: Maybe<Feature_AudienceEntityLink>;
  /** delete data from the table: "feature.audienceName" */
  delete_feature_audienceName: Maybe<Feature_AudienceName_Mutation_Response>;
  /** delete single row from the table: "feature.audienceName" */
  delete_feature_audienceName_by_pk: Maybe<Feature_AudienceName>;
  /** delete single row from the table: "feature.audience" */
  delete_feature_audience_by_pk: Maybe<Feature_Audience>;
  /** delete data from the table: "feature.entity" */
  delete_feature_entity: Maybe<Feature_Entity_Mutation_Response>;
  /** delete single row from the table: "feature.entity" */
  delete_feature_entity_by_pk: Maybe<Feature_Entity>;
  /** delete data from the table: "graphHub.category" */
  delete_graphHub_category: Maybe<GraphHub_Category_Mutation_Response>;
  /** delete data from the table: "graphHub.categoryLabel" */
  delete_graphHub_categoryLabel: Maybe<GraphHub_CategoryLabel_Mutation_Response>;
  /** delete single row from the table: "graphHub.categoryLabel" */
  delete_graphHub_categoryLabel_by_pk: Maybe<GraphHub_CategoryLabel>;
  /** delete single row from the table: "graphHub.category" */
  delete_graphHub_category_by_pk: Maybe<GraphHub_Category>;
  /** delete data from the table: "graphHub.deployedInstance" */
  delete_graphHub_deployedInstance: Maybe<GraphHub_DeployedInstance_Mutation_Response>;
  /** delete single row from the table: "graphHub.deployedInstance" */
  delete_graphHub_deployedInstance_by_pk: Maybe<GraphHub_DeployedInstance>;
  /** delete data from the table: "graphHub.deployedSchema" */
  delete_graphHub_deployedSchema: Maybe<GraphHub_DeployedSchema_Mutation_Response>;
  /** delete data from the table: "graphHub.deployedSchemaChunk" */
  delete_graphHub_deployedSchemaChunk: Maybe<GraphHub_DeployedSchemaChunk_Mutation_Response>;
  /** delete single row from the table: "graphHub.deployedSchemaChunk" */
  delete_graphHub_deployedSchemaChunk_by_pk: Maybe<GraphHub_DeployedSchemaChunk>;
  /** delete data from the table: "graphHub.deployedSchemaLabel" */
  delete_graphHub_deployedSchemaLabel: Maybe<GraphHub_DeployedSchemaLabel_Mutation_Response>;
  /** delete single row from the table: "graphHub.deployedSchemaLabel" */
  delete_graphHub_deployedSchemaLabel_by_pk: Maybe<GraphHub_DeployedSchemaLabel>;
  /** delete single row from the table: "graphHub.deployedSchema" */
  delete_graphHub_deployedSchema_by_pk: Maybe<GraphHub_DeployedSchema>;
  /** delete data from the table: "graphHub.draftInstance" */
  delete_graphHub_draftInstance: Maybe<GraphHub_DraftInstance_Mutation_Response>;
  /** delete single row from the table: "graphHub.draftInstance" */
  delete_graphHub_draftInstance_by_pk: Maybe<GraphHub_DraftInstance>;
  /** delete data from the table: "graphHub.draftSchema" */
  delete_graphHub_draftSchema: Maybe<GraphHub_DraftSchema_Mutation_Response>;
  /** delete data from the table: "graphHub.draftSchemaChunk" */
  delete_graphHub_draftSchemaChunk: Maybe<GraphHub_DraftSchemaChunk_Mutation_Response>;
  /** delete single row from the table: "graphHub.draftSchemaChunk" */
  delete_graphHub_draftSchemaChunk_by_pk: Maybe<GraphHub_DraftSchemaChunk>;
  /** delete single row from the table: "graphHub.draftSchema" */
  delete_graphHub_draftSchema_by_pk: Maybe<GraphHub_DraftSchema>;
  /** delete data from the table: "locale.location" */
  delete_locale_location: Maybe<Locale_Location_Mutation_Response>;
  /** delete data from the table: "locale.locationCode" */
  delete_locale_locationCode: Maybe<Locale_LocationCode_Mutation_Response>;
  /** delete single row from the table: "locale.locationCode" */
  delete_locale_locationCode_by_pk: Maybe<Locale_LocationCode>;
  /** delete single row from the table: "locale.location" */
  delete_locale_location_by_pk: Maybe<Locale_Location>;
  /** delete data from the table: "locale.message" */
  delete_locale_message: Maybe<Locale_Message_Mutation_Response>;
  /** delete single row from the table: "locale.message" */
  delete_locale_message_by_pk: Maybe<Locale_Message>;
  /** delete data from the table: "locale.rating" */
  delete_locale_rating: Maybe<Locale_Rating_Mutation_Response>;
  /** delete single row from the table: "locale.rating" */
  delete_locale_rating_by_pk: Maybe<Locale_Rating>;
  /** delete data from the table: "prompt.bulkJob" */
  delete_prompt_bulkJob: Maybe<Prompt_BulkJob_Mutation_Response>;
  /** delete data from the table: "prompt.bulkJobProjectLabel" */
  delete_prompt_bulkJobProjectLabel: Maybe<Prompt_BulkJobProjectLabel_Mutation_Response>;
  /** delete single row from the table: "prompt.bulkJobProjectLabel" */
  delete_prompt_bulkJobProjectLabel_by_pk: Maybe<Prompt_BulkJobProjectLabel>;
  /** delete data from the table: "prompt.bulkJobStatus" */
  delete_prompt_bulkJobStatus: Maybe<Prompt_BulkJobStatus_Mutation_Response>;
  /** delete single row from the table: "prompt.bulkJobStatus" */
  delete_prompt_bulkJobStatus_by_pk: Maybe<Prompt_BulkJobStatus>;
  /** delete single row from the table: "prompt.bulkJob" */
  delete_prompt_bulkJob_by_pk: Maybe<Prompt_BulkJob>;
  /** delete data from the table: "prompt.categoryCode" */
  delete_prompt_categoryCode: Maybe<Prompt_CategoryCode_Mutation_Response>;
  /** delete single row from the table: "prompt.categoryCode" */
  delete_prompt_categoryCode_by_pk: Maybe<Prompt_CategoryCode>;
  /** delete data from the table: "prompt.chatCompletionOption" */
  delete_prompt_chatCompletionOption: Maybe<Prompt_ChatCompletionOption_Mutation_Response>;
  /** delete data from the table: "prompt.chatCompletionOptionError" */
  delete_prompt_chatCompletionOptionError: Maybe<Prompt_ChatCompletionOptionError_Mutation_Response>;
  /** delete single row from the table: "prompt.chatCompletionOptionError" */
  delete_prompt_chatCompletionOptionError_by_pk: Maybe<Prompt_ChatCompletionOptionError>;
  /** delete single row from the table: "prompt.chatCompletionOption" */
  delete_prompt_chatCompletionOption_by_pk: Maybe<Prompt_ChatCompletionOption>;
  /** delete data from the table: "prompt.chatDocument" */
  delete_prompt_chatDocument: Maybe<Prompt_ChatDocument_Mutation_Response>;
  /** delete data from the table: "prompt.chatDocumentGroup" */
  delete_prompt_chatDocumentGroup: Maybe<Prompt_ChatDocumentGroup_Mutation_Response>;
  /** delete single row from the table: "prompt.chatDocumentGroup" */
  delete_prompt_chatDocumentGroup_by_pk: Maybe<Prompt_ChatDocumentGroup>;
  /** delete single row from the table: "prompt.chatDocument" */
  delete_prompt_chatDocument_by_pk: Maybe<Prompt_ChatDocument>;
  /** delete data from the table: "prompt.docsPageRating" */
  delete_prompt_docsPageRating: Maybe<Prompt_DocsPageRating_Mutation_Response>;
  /** delete single row from the table: "prompt.docsPageRating" */
  delete_prompt_docsPageRating_by_pk: Maybe<Prompt_DocsPageRating>;
  /** delete data from the table: "usage.event" */
  delete_usage_event: Maybe<Usage_Event_Mutation_Response>;
  /** delete single row from the table: "usage.event" */
  delete_usage_event_by_pk: Maybe<Usage_Event>;
  /** delete data from the table: "ux.dashboardPreferences" */
  delete_ux_dashboardPreferences: Maybe<Ux_DashboardPreferences_Mutation_Response>;
  /** delete single row from the table: "ux.dashboardPreferences" */
  delete_ux_dashboardPreferences_by_pk: Maybe<Ux_DashboardPreferences>;
  /** insert data into the table: "customMessage.content" */
  insert_customMessage_content: Maybe<CustomMessage_Content_Mutation_Response>;
  /** insert a single row into the table: "customMessage.content" */
  insert_customMessage_content_one: Maybe<CustomMessage_Content>;
  /** insert data into the table: "customMessage.pageName" */
  insert_customMessage_pageName: Maybe<CustomMessage_PageName_Mutation_Response>;
  /** insert a single row into the table: "customMessage.pageName" */
  insert_customMessage_pageName_one: Maybe<CustomMessage_PageName>;
  /** insert data into the table: "embedding.zonos_com_dev_digest_private" */
  insert_embedding_zonos_com_dev_digest_private: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_digest_private" */
  insert_embedding_zonos_com_dev_digest_private_one: Maybe<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** insert data into the table: "embedding.zonos_com_dev_digest_public" */
  insert_embedding_zonos_com_dev_digest_public: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_digest_public" */
  insert_embedding_zonos_com_dev_digest_public_one: Maybe<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** insert data into the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  insert_embedding_zonos_com_dev_digest_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  insert_embedding_zonos_com_dev_digest_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** insert data into the table: "embedding.zonos_com_dev_private" */
  insert_embedding_zonos_com_dev_private: Maybe<Embedding_Zonos_Com_Dev_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_private" */
  insert_embedding_zonos_com_dev_private_one: Maybe<Embedding_Zonos_Com_Dev_Private>;
  /** insert data into the table: "embedding.zonos_com_dev_public" */
  insert_embedding_zonos_com_dev_public: Maybe<Embedding_Zonos_Com_Dev_Public_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_public" */
  insert_embedding_zonos_com_dev_public_one: Maybe<Embedding_Zonos_Com_Dev_Public>;
  /** insert data into the table: "embedding.zonos_com_dev_split_front_private" */
  insert_embedding_zonos_com_dev_split_front_private: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_split_front_private" */
  insert_embedding_zonos_com_dev_split_front_private_one: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** insert data into the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  insert_embedding_zonos_com_dev_split_front_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  insert_embedding_zonos_com_dev_split_front_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** insert data into the table: "embedding.zonos_com_dev_zonos_email_only" */
  insert_embedding_zonos_com_dev_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_dev_zonos_email_only" */
  insert_embedding_zonos_com_dev_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** insert data into the table: "embedding.zonos_com_digest_private" */
  insert_embedding_zonos_com_digest_private: Maybe<Embedding_Zonos_Com_Digest_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_digest_private" */
  insert_embedding_zonos_com_digest_private_one: Maybe<Embedding_Zonos_Com_Digest_Private>;
  /** insert data into the table: "embedding.zonos_com_digest_public" */
  insert_embedding_zonos_com_digest_public: Maybe<Embedding_Zonos_Com_Digest_Public_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_digest_public" */
  insert_embedding_zonos_com_digest_public_one: Maybe<Embedding_Zonos_Com_Digest_Public>;
  /** insert data into the table: "embedding.zonos_com_digest_zonos_email_only" */
  insert_embedding_zonos_com_digest_zonos_email_only: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_digest_zonos_email_only" */
  insert_embedding_zonos_com_digest_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** insert data into the table: "embedding.zonos_com_private" */
  insert_embedding_zonos_com_private: Maybe<Embedding_Zonos_Com_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_private" */
  insert_embedding_zonos_com_private_one: Maybe<Embedding_Zonos_Com_Private>;
  /** insert data into the table: "embedding.zonos_com_public" */
  insert_embedding_zonos_com_public: Maybe<Embedding_Zonos_Com_Public_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_public" */
  insert_embedding_zonos_com_public_one: Maybe<Embedding_Zonos_Com_Public>;
  /** insert data into the table: "embedding.zonos_com_split_front_private" */
  insert_embedding_zonos_com_split_front_private: Maybe<Embedding_Zonos_Com_Split_Front_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_split_front_private" */
  insert_embedding_zonos_com_split_front_private_one: Maybe<Embedding_Zonos_Com_Split_Front_Private>;
  /** insert data into the table: "embedding.zonos_com_split_front_public" */
  insert_embedding_zonos_com_split_front_public: Maybe<Embedding_Zonos_Com_Split_Front_Public_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_split_front_public" */
  insert_embedding_zonos_com_split_front_public_one: Maybe<Embedding_Zonos_Com_Split_Front_Public>;
  /** insert data into the table: "embedding.zonos_com_split_front_zonos_email_only" */
  insert_embedding_zonos_com_split_front_zonos_email_only: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_split_front_zonos_email_only" */
  insert_embedding_zonos_com_split_front_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** insert data into the table: "embedding.zonos_com_split_private" */
  insert_embedding_zonos_com_split_private: Maybe<Embedding_Zonos_Com_Split_Private_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_split_private" */
  insert_embedding_zonos_com_split_private_one: Maybe<Embedding_Zonos_Com_Split_Private>;
  /** insert data into the table: "embedding.zonos_com_split_public" */
  insert_embedding_zonos_com_split_public: Maybe<Embedding_Zonos_Com_Split_Public_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_split_public" */
  insert_embedding_zonos_com_split_public_one: Maybe<Embedding_Zonos_Com_Split_Public>;
  /** insert data into the table: "embedding.zonos_com_split_zonos_email_only" */
  insert_embedding_zonos_com_split_zonos_email_only: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_split_zonos_email_only" */
  insert_embedding_zonos_com_split_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** insert data into the table: "embedding.zonos_com_zonos_email_only" */
  insert_embedding_zonos_com_zonos_email_only: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Mutation_Response>;
  /** insert a single row into the table: "embedding.zonos_com_zonos_email_only" */
  insert_embedding_zonos_com_zonos_email_only_one: Maybe<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** insert data into the table: "error.event" */
  insert_error_event: Maybe<Error_Event_Mutation_Response>;
  /** insert a single row into the table: "error.event" */
  insert_error_event_one: Maybe<Error_Event>;
  /** insert data into the table: "error.project" */
  insert_error_project: Maybe<Error_Project_Mutation_Response>;
  /** insert data into the table: "error.projectName" */
  insert_error_projectName: Maybe<Error_ProjectName_Mutation_Response>;
  /** insert a single row into the table: "error.projectName" */
  insert_error_projectName_one: Maybe<Error_ProjectName>;
  /** insert a single row into the table: "error.project" */
  insert_error_project_one: Maybe<Error_Project>;
  /** insert data into the table: "feature.aspect" */
  insert_feature_aspect: Maybe<Feature_Aspect_Mutation_Response>;
  /** insert data into the table: "feature.aspectKey" */
  insert_feature_aspectKey: Maybe<Feature_AspectKey_Mutation_Response>;
  /** insert a single row into the table: "feature.aspectKey" */
  insert_feature_aspectKey_one: Maybe<Feature_AspectKey>;
  /** insert a single row into the table: "feature.aspect" */
  insert_feature_aspect_one: Maybe<Feature_Aspect>;
  /** insert data into the table: "feature.audience" */
  insert_feature_audience: Maybe<Feature_Audience_Mutation_Response>;
  /** insert data into the table: "feature.audienceAspectLink" */
  insert_feature_audienceAspectLink: Maybe<Feature_AudienceAspectLink_Mutation_Response>;
  /** insert a single row into the table: "feature.audienceAspectLink" */
  insert_feature_audienceAspectLink_one: Maybe<Feature_AudienceAspectLink>;
  /** insert data into the table: "feature.audienceEntityLink" */
  insert_feature_audienceEntityLink: Maybe<Feature_AudienceEntityLink_Mutation_Response>;
  /** insert a single row into the table: "feature.audienceEntityLink" */
  insert_feature_audienceEntityLink_one: Maybe<Feature_AudienceEntityLink>;
  /** insert data into the table: "feature.audienceName" */
  insert_feature_audienceName: Maybe<Feature_AudienceName_Mutation_Response>;
  /** insert a single row into the table: "feature.audienceName" */
  insert_feature_audienceName_one: Maybe<Feature_AudienceName>;
  /** insert a single row into the table: "feature.audience" */
  insert_feature_audience_one: Maybe<Feature_Audience>;
  /** insert data into the table: "feature.entity" */
  insert_feature_entity: Maybe<Feature_Entity_Mutation_Response>;
  /** insert a single row into the table: "feature.entity" */
  insert_feature_entity_one: Maybe<Feature_Entity>;
  /** insert data into the table: "graphHub.category" */
  insert_graphHub_category: Maybe<GraphHub_Category_Mutation_Response>;
  /** insert data into the table: "graphHub.categoryLabel" */
  insert_graphHub_categoryLabel: Maybe<GraphHub_CategoryLabel_Mutation_Response>;
  /** insert a single row into the table: "graphHub.categoryLabel" */
  insert_graphHub_categoryLabel_one: Maybe<GraphHub_CategoryLabel>;
  /** insert a single row into the table: "graphHub.category" */
  insert_graphHub_category_one: Maybe<GraphHub_Category>;
  /** insert data into the table: "graphHub.deployedInstance" */
  insert_graphHub_deployedInstance: Maybe<GraphHub_DeployedInstance_Mutation_Response>;
  /** insert a single row into the table: "graphHub.deployedInstance" */
  insert_graphHub_deployedInstance_one: Maybe<GraphHub_DeployedInstance>;
  /** insert data into the table: "graphHub.deployedSchema" */
  insert_graphHub_deployedSchema: Maybe<GraphHub_DeployedSchema_Mutation_Response>;
  /** insert data into the table: "graphHub.deployedSchemaChunk" */
  insert_graphHub_deployedSchemaChunk: Maybe<GraphHub_DeployedSchemaChunk_Mutation_Response>;
  /** insert a single row into the table: "graphHub.deployedSchemaChunk" */
  insert_graphHub_deployedSchemaChunk_one: Maybe<GraphHub_DeployedSchemaChunk>;
  /** insert data into the table: "graphHub.deployedSchemaLabel" */
  insert_graphHub_deployedSchemaLabel: Maybe<GraphHub_DeployedSchemaLabel_Mutation_Response>;
  /** insert a single row into the table: "graphHub.deployedSchemaLabel" */
  insert_graphHub_deployedSchemaLabel_one: Maybe<GraphHub_DeployedSchemaLabel>;
  /** insert a single row into the table: "graphHub.deployedSchema" */
  insert_graphHub_deployedSchema_one: Maybe<GraphHub_DeployedSchema>;
  /** insert data into the table: "graphHub.draftInstance" */
  insert_graphHub_draftInstance: Maybe<GraphHub_DraftInstance_Mutation_Response>;
  /** insert a single row into the table: "graphHub.draftInstance" */
  insert_graphHub_draftInstance_one: Maybe<GraphHub_DraftInstance>;
  /** insert data into the table: "graphHub.draftSchema" */
  insert_graphHub_draftSchema: Maybe<GraphHub_DraftSchema_Mutation_Response>;
  /** insert data into the table: "graphHub.draftSchemaChunk" */
  insert_graphHub_draftSchemaChunk: Maybe<GraphHub_DraftSchemaChunk_Mutation_Response>;
  /** insert a single row into the table: "graphHub.draftSchemaChunk" */
  insert_graphHub_draftSchemaChunk_one: Maybe<GraphHub_DraftSchemaChunk>;
  /** insert a single row into the table: "graphHub.draftSchema" */
  insert_graphHub_draftSchema_one: Maybe<GraphHub_DraftSchema>;
  /** insert data into the table: "locale.location" */
  insert_locale_location: Maybe<Locale_Location_Mutation_Response>;
  /** insert data into the table: "locale.locationCode" */
  insert_locale_locationCode: Maybe<Locale_LocationCode_Mutation_Response>;
  /** insert a single row into the table: "locale.locationCode" */
  insert_locale_locationCode_one: Maybe<Locale_LocationCode>;
  /** insert a single row into the table: "locale.location" */
  insert_locale_location_one: Maybe<Locale_Location>;
  /** insert data into the table: "locale.message" */
  insert_locale_message: Maybe<Locale_Message_Mutation_Response>;
  /** insert a single row into the table: "locale.message" */
  insert_locale_message_one: Maybe<Locale_Message>;
  /** insert data into the table: "locale.rating" */
  insert_locale_rating: Maybe<Locale_Rating_Mutation_Response>;
  /** insert a single row into the table: "locale.rating" */
  insert_locale_rating_one: Maybe<Locale_Rating>;
  /** insert data into the table: "prompt.bulkJob" */
  insert_prompt_bulkJob: Maybe<Prompt_BulkJob_Mutation_Response>;
  /** insert data into the table: "prompt.bulkJobProjectLabel" */
  insert_prompt_bulkJobProjectLabel: Maybe<Prompt_BulkJobProjectLabel_Mutation_Response>;
  /** insert a single row into the table: "prompt.bulkJobProjectLabel" */
  insert_prompt_bulkJobProjectLabel_one: Maybe<Prompt_BulkJobProjectLabel>;
  /** insert data into the table: "prompt.bulkJobStatus" */
  insert_prompt_bulkJobStatus: Maybe<Prompt_BulkJobStatus_Mutation_Response>;
  /** insert a single row into the table: "prompt.bulkJobStatus" */
  insert_prompt_bulkJobStatus_one: Maybe<Prompt_BulkJobStatus>;
  /** insert a single row into the table: "prompt.bulkJob" */
  insert_prompt_bulkJob_one: Maybe<Prompt_BulkJob>;
  /** insert data into the table: "prompt.categoryCode" */
  insert_prompt_categoryCode: Maybe<Prompt_CategoryCode_Mutation_Response>;
  /** insert a single row into the table: "prompt.categoryCode" */
  insert_prompt_categoryCode_one: Maybe<Prompt_CategoryCode>;
  /** insert data into the table: "prompt.chatCompletionOption" */
  insert_prompt_chatCompletionOption: Maybe<Prompt_ChatCompletionOption_Mutation_Response>;
  /** insert data into the table: "prompt.chatCompletionOptionError" */
  insert_prompt_chatCompletionOptionError: Maybe<Prompt_ChatCompletionOptionError_Mutation_Response>;
  /** insert a single row into the table: "prompt.chatCompletionOptionError" */
  insert_prompt_chatCompletionOptionError_one: Maybe<Prompt_ChatCompletionOptionError>;
  /** insert a single row into the table: "prompt.chatCompletionOption" */
  insert_prompt_chatCompletionOption_one: Maybe<Prompt_ChatCompletionOption>;
  /** insert data into the table: "prompt.chatDocument" */
  insert_prompt_chatDocument: Maybe<Prompt_ChatDocument_Mutation_Response>;
  /** insert data into the table: "prompt.chatDocumentGroup" */
  insert_prompt_chatDocumentGroup: Maybe<Prompt_ChatDocumentGroup_Mutation_Response>;
  /** insert a single row into the table: "prompt.chatDocumentGroup" */
  insert_prompt_chatDocumentGroup_one: Maybe<Prompt_ChatDocumentGroup>;
  /** insert a single row into the table: "prompt.chatDocument" */
  insert_prompt_chatDocument_one: Maybe<Prompt_ChatDocument>;
  /** insert data into the table: "prompt.docsPageRating" */
  insert_prompt_docsPageRating: Maybe<Prompt_DocsPageRating_Mutation_Response>;
  /** insert a single row into the table: "prompt.docsPageRating" */
  insert_prompt_docsPageRating_one: Maybe<Prompt_DocsPageRating>;
  /** insert data into the table: "usage.event" */
  insert_usage_event: Maybe<Usage_Event_Mutation_Response>;
  /** insert a single row into the table: "usage.event" */
  insert_usage_event_one: Maybe<Usage_Event>;
  /** insert data into the table: "ux.dashboardPreferences" */
  insert_ux_dashboardPreferences: Maybe<Ux_DashboardPreferences_Mutation_Response>;
  /** insert a single row into the table: "ux.dashboardPreferences" */
  insert_ux_dashboardPreferences_one: Maybe<Ux_DashboardPreferences>;
  /** update data of the table: "customMessage.content" */
  update_customMessage_content: Maybe<CustomMessage_Content_Mutation_Response>;
  /** update single row of the table: "customMessage.content" */
  update_customMessage_content_by_pk: Maybe<CustomMessage_Content>;
  /** update multiples rows of table: "customMessage.content" */
  update_customMessage_content_many: Maybe<
    Array<Maybe<CustomMessage_Content_Mutation_Response>>
  >;
  /** update data of the table: "customMessage.pageName" */
  update_customMessage_pageName: Maybe<CustomMessage_PageName_Mutation_Response>;
  /** update single row of the table: "customMessage.pageName" */
  update_customMessage_pageName_by_pk: Maybe<CustomMessage_PageName>;
  /** update multiples rows of table: "customMessage.pageName" */
  update_customMessage_pageName_many: Maybe<
    Array<Maybe<CustomMessage_PageName_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_dev_digest_private" */
  update_embedding_zonos_com_dev_digest_private: Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_digest_private" */
  update_embedding_zonos_com_dev_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** update multiples rows of table: "embedding.zonos_com_dev_digest_private" */
  update_embedding_zonos_com_dev_digest_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Dev_Digest_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_dev_digest_public" */
  update_embedding_zonos_com_dev_digest_public: Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_digest_public" */
  update_embedding_zonos_com_dev_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** update multiples rows of table: "embedding.zonos_com_dev_digest_public" */
  update_embedding_zonos_com_dev_digest_public_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Dev_Digest_Public_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  update_embedding_zonos_com_dev_digest_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  update_embedding_zonos_com_dev_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  update_embedding_zonos_com_dev_digest_zonos_email_only_many: Maybe<
    Array<
      Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Mutation_Response>
    >
  >;
  /** update data of the table: "embedding.zonos_com_dev_private" */
  update_embedding_zonos_com_dev_private: Maybe<Embedding_Zonos_Com_Dev_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_private" */
  update_embedding_zonos_com_dev_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Private>;
  /** update multiples rows of table: "embedding.zonos_com_dev_private" */
  update_embedding_zonos_com_dev_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Dev_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_dev_public" */
  update_embedding_zonos_com_dev_public: Maybe<Embedding_Zonos_Com_Dev_Public_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_public" */
  update_embedding_zonos_com_dev_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Public>;
  /** update multiples rows of table: "embedding.zonos_com_dev_public" */
  update_embedding_zonos_com_dev_public_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Dev_Public_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_dev_split_front_private" */
  update_embedding_zonos_com_dev_split_front_private: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_split_front_private" */
  update_embedding_zonos_com_dev_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** update multiples rows of table: "embedding.zonos_com_dev_split_front_private" */
  update_embedding_zonos_com_dev_split_front_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  update_embedding_zonos_com_dev_split_front_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  update_embedding_zonos_com_dev_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  update_embedding_zonos_com_dev_split_front_zonos_email_only_many: Maybe<
    Array<
      Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Mutation_Response>
    >
  >;
  /** update data of the table: "embedding.zonos_com_dev_zonos_email_only" */
  update_embedding_zonos_com_dev_zonos_email_only: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_dev_zonos_email_only" */
  update_embedding_zonos_com_dev_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_dev_zonos_email_only" */
  update_embedding_zonos_com_dev_zonos_email_only_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_digest_private" */
  update_embedding_zonos_com_digest_private: Maybe<Embedding_Zonos_Com_Digest_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_digest_private" */
  update_embedding_zonos_com_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Digest_Private>;
  /** update multiples rows of table: "embedding.zonos_com_digest_private" */
  update_embedding_zonos_com_digest_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Digest_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_digest_public" */
  update_embedding_zonos_com_digest_public: Maybe<Embedding_Zonos_Com_Digest_Public_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_digest_public" */
  update_embedding_zonos_com_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Digest_Public>;
  /** update multiples rows of table: "embedding.zonos_com_digest_public" */
  update_embedding_zonos_com_digest_public_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Digest_Public_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_digest_zonos_email_only" */
  update_embedding_zonos_com_digest_zonos_email_only: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_digest_zonos_email_only" */
  update_embedding_zonos_com_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_digest_zonos_email_only" */
  update_embedding_zonos_com_digest_zonos_email_only_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_private" */
  update_embedding_zonos_com_private: Maybe<Embedding_Zonos_Com_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_private" */
  update_embedding_zonos_com_private_by_pk: Maybe<Embedding_Zonos_Com_Private>;
  /** update multiples rows of table: "embedding.zonos_com_private" */
  update_embedding_zonos_com_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_public" */
  update_embedding_zonos_com_public: Maybe<Embedding_Zonos_Com_Public_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_public" */
  update_embedding_zonos_com_public_by_pk: Maybe<Embedding_Zonos_Com_Public>;
  /** update multiples rows of table: "embedding.zonos_com_public" */
  update_embedding_zonos_com_public_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Public_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_split_front_private" */
  update_embedding_zonos_com_split_front_private: Maybe<Embedding_Zonos_Com_Split_Front_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_split_front_private" */
  update_embedding_zonos_com_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Private>;
  /** update multiples rows of table: "embedding.zonos_com_split_front_private" */
  update_embedding_zonos_com_split_front_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Split_Front_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_split_front_public" */
  update_embedding_zonos_com_split_front_public: Maybe<Embedding_Zonos_Com_Split_Front_Public_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_split_front_public" */
  update_embedding_zonos_com_split_front_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Public>;
  /** update multiples rows of table: "embedding.zonos_com_split_front_public" */
  update_embedding_zonos_com_split_front_public_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Split_Front_Public_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_split_front_zonos_email_only" */
  update_embedding_zonos_com_split_front_zonos_email_only: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_split_front_zonos_email_only" */
  update_embedding_zonos_com_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_split_front_zonos_email_only" */
  update_embedding_zonos_com_split_front_zonos_email_only_many: Maybe<
    Array<
      Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Mutation_Response>
    >
  >;
  /** update data of the table: "embedding.zonos_com_split_private" */
  update_embedding_zonos_com_split_private: Maybe<Embedding_Zonos_Com_Split_Private_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_split_private" */
  update_embedding_zonos_com_split_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Private>;
  /** update multiples rows of table: "embedding.zonos_com_split_private" */
  update_embedding_zonos_com_split_private_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Split_Private_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_split_public" */
  update_embedding_zonos_com_split_public: Maybe<Embedding_Zonos_Com_Split_Public_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_split_public" */
  update_embedding_zonos_com_split_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Public>;
  /** update multiples rows of table: "embedding.zonos_com_split_public" */
  update_embedding_zonos_com_split_public_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Split_Public_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_split_zonos_email_only" */
  update_embedding_zonos_com_split_zonos_email_only: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_split_zonos_email_only" */
  update_embedding_zonos_com_split_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_split_zonos_email_only" */
  update_embedding_zonos_com_split_zonos_email_only_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Mutation_Response>>
  >;
  /** update data of the table: "embedding.zonos_com_zonos_email_only" */
  update_embedding_zonos_com_zonos_email_only: Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Mutation_Response>;
  /** update single row of the table: "embedding.zonos_com_zonos_email_only" */
  update_embedding_zonos_com_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** update multiples rows of table: "embedding.zonos_com_zonos_email_only" */
  update_embedding_zonos_com_zonos_email_only_many: Maybe<
    Array<Maybe<Embedding_Zonos_Com_Zonos_Email_Only_Mutation_Response>>
  >;
  /** update data of the table: "error.event" */
  update_error_event: Maybe<Error_Event_Mutation_Response>;
  /** update single row of the table: "error.event" */
  update_error_event_by_pk: Maybe<Error_Event>;
  /** update multiples rows of table: "error.event" */
  update_error_event_many: Maybe<Array<Maybe<Error_Event_Mutation_Response>>>;
  /** update data of the table: "error.project" */
  update_error_project: Maybe<Error_Project_Mutation_Response>;
  /** update data of the table: "error.projectName" */
  update_error_projectName: Maybe<Error_ProjectName_Mutation_Response>;
  /** update single row of the table: "error.projectName" */
  update_error_projectName_by_pk: Maybe<Error_ProjectName>;
  /** update multiples rows of table: "error.projectName" */
  update_error_projectName_many: Maybe<
    Array<Maybe<Error_ProjectName_Mutation_Response>>
  >;
  /** update single row of the table: "error.project" */
  update_error_project_by_pk: Maybe<Error_Project>;
  /** update multiples rows of table: "error.project" */
  update_error_project_many: Maybe<
    Array<Maybe<Error_Project_Mutation_Response>>
  >;
  /** update data of the table: "feature.aspect" */
  update_feature_aspect: Maybe<Feature_Aspect_Mutation_Response>;
  /** update data of the table: "feature.aspectKey" */
  update_feature_aspectKey: Maybe<Feature_AspectKey_Mutation_Response>;
  /** update single row of the table: "feature.aspectKey" */
  update_feature_aspectKey_by_pk: Maybe<Feature_AspectKey>;
  /** update multiples rows of table: "feature.aspectKey" */
  update_feature_aspectKey_many: Maybe<
    Array<Maybe<Feature_AspectKey_Mutation_Response>>
  >;
  /** update single row of the table: "feature.aspect" */
  update_feature_aspect_by_pk: Maybe<Feature_Aspect>;
  /** update multiples rows of table: "feature.aspect" */
  update_feature_aspect_many: Maybe<
    Array<Maybe<Feature_Aspect_Mutation_Response>>
  >;
  /** update data of the table: "feature.audience" */
  update_feature_audience: Maybe<Feature_Audience_Mutation_Response>;
  /** update data of the table: "feature.audienceAspectLink" */
  update_feature_audienceAspectLink: Maybe<Feature_AudienceAspectLink_Mutation_Response>;
  /** update single row of the table: "feature.audienceAspectLink" */
  update_feature_audienceAspectLink_by_pk: Maybe<Feature_AudienceAspectLink>;
  /** update multiples rows of table: "feature.audienceAspectLink" */
  update_feature_audienceAspectLink_many: Maybe<
    Array<Maybe<Feature_AudienceAspectLink_Mutation_Response>>
  >;
  /** update data of the table: "feature.audienceEntityLink" */
  update_feature_audienceEntityLink: Maybe<Feature_AudienceEntityLink_Mutation_Response>;
  /** update single row of the table: "feature.audienceEntityLink" */
  update_feature_audienceEntityLink_by_pk: Maybe<Feature_AudienceEntityLink>;
  /** update multiples rows of table: "feature.audienceEntityLink" */
  update_feature_audienceEntityLink_many: Maybe<
    Array<Maybe<Feature_AudienceEntityLink_Mutation_Response>>
  >;
  /** update data of the table: "feature.audienceName" */
  update_feature_audienceName: Maybe<Feature_AudienceName_Mutation_Response>;
  /** update single row of the table: "feature.audienceName" */
  update_feature_audienceName_by_pk: Maybe<Feature_AudienceName>;
  /** update multiples rows of table: "feature.audienceName" */
  update_feature_audienceName_many: Maybe<
    Array<Maybe<Feature_AudienceName_Mutation_Response>>
  >;
  /** update single row of the table: "feature.audience" */
  update_feature_audience_by_pk: Maybe<Feature_Audience>;
  /** update multiples rows of table: "feature.audience" */
  update_feature_audience_many: Maybe<
    Array<Maybe<Feature_Audience_Mutation_Response>>
  >;
  /** update data of the table: "feature.entity" */
  update_feature_entity: Maybe<Feature_Entity_Mutation_Response>;
  /** update single row of the table: "feature.entity" */
  update_feature_entity_by_pk: Maybe<Feature_Entity>;
  /** update multiples rows of table: "feature.entity" */
  update_feature_entity_many: Maybe<
    Array<Maybe<Feature_Entity_Mutation_Response>>
  >;
  /** update data of the table: "graphHub.category" */
  update_graphHub_category: Maybe<GraphHub_Category_Mutation_Response>;
  /** update data of the table: "graphHub.categoryLabel" */
  update_graphHub_categoryLabel: Maybe<GraphHub_CategoryLabel_Mutation_Response>;
  /** update single row of the table: "graphHub.categoryLabel" */
  update_graphHub_categoryLabel_by_pk: Maybe<GraphHub_CategoryLabel>;
  /** update multiples rows of table: "graphHub.categoryLabel" */
  update_graphHub_categoryLabel_many: Maybe<
    Array<Maybe<GraphHub_CategoryLabel_Mutation_Response>>
  >;
  /** update single row of the table: "graphHub.category" */
  update_graphHub_category_by_pk: Maybe<GraphHub_Category>;
  /** update multiples rows of table: "graphHub.category" */
  update_graphHub_category_many: Maybe<
    Array<Maybe<GraphHub_Category_Mutation_Response>>
  >;
  /** update data of the table: "graphHub.deployedInstance" */
  update_graphHub_deployedInstance: Maybe<GraphHub_DeployedInstance_Mutation_Response>;
  /** update single row of the table: "graphHub.deployedInstance" */
  update_graphHub_deployedInstance_by_pk: Maybe<GraphHub_DeployedInstance>;
  /** update multiples rows of table: "graphHub.deployedInstance" */
  update_graphHub_deployedInstance_many: Maybe<
    Array<Maybe<GraphHub_DeployedInstance_Mutation_Response>>
  >;
  /** update data of the table: "graphHub.deployedSchema" */
  update_graphHub_deployedSchema: Maybe<GraphHub_DeployedSchema_Mutation_Response>;
  /** update data of the table: "graphHub.deployedSchemaChunk" */
  update_graphHub_deployedSchemaChunk: Maybe<GraphHub_DeployedSchemaChunk_Mutation_Response>;
  /** update single row of the table: "graphHub.deployedSchemaChunk" */
  update_graphHub_deployedSchemaChunk_by_pk: Maybe<GraphHub_DeployedSchemaChunk>;
  /** update multiples rows of table: "graphHub.deployedSchemaChunk" */
  update_graphHub_deployedSchemaChunk_many: Maybe<
    Array<Maybe<GraphHub_DeployedSchemaChunk_Mutation_Response>>
  >;
  /** update data of the table: "graphHub.deployedSchemaLabel" */
  update_graphHub_deployedSchemaLabel: Maybe<GraphHub_DeployedSchemaLabel_Mutation_Response>;
  /** update single row of the table: "graphHub.deployedSchemaLabel" */
  update_graphHub_deployedSchemaLabel_by_pk: Maybe<GraphHub_DeployedSchemaLabel>;
  /** update multiples rows of table: "graphHub.deployedSchemaLabel" */
  update_graphHub_deployedSchemaLabel_many: Maybe<
    Array<Maybe<GraphHub_DeployedSchemaLabel_Mutation_Response>>
  >;
  /** update single row of the table: "graphHub.deployedSchema" */
  update_graphHub_deployedSchema_by_pk: Maybe<GraphHub_DeployedSchema>;
  /** update multiples rows of table: "graphHub.deployedSchema" */
  update_graphHub_deployedSchema_many: Maybe<
    Array<Maybe<GraphHub_DeployedSchema_Mutation_Response>>
  >;
  /** update data of the table: "graphHub.draftInstance" */
  update_graphHub_draftInstance: Maybe<GraphHub_DraftInstance_Mutation_Response>;
  /** update single row of the table: "graphHub.draftInstance" */
  update_graphHub_draftInstance_by_pk: Maybe<GraphHub_DraftInstance>;
  /** update multiples rows of table: "graphHub.draftInstance" */
  update_graphHub_draftInstance_many: Maybe<
    Array<Maybe<GraphHub_DraftInstance_Mutation_Response>>
  >;
  /** update data of the table: "graphHub.draftSchema" */
  update_graphHub_draftSchema: Maybe<GraphHub_DraftSchema_Mutation_Response>;
  /** update data of the table: "graphHub.draftSchemaChunk" */
  update_graphHub_draftSchemaChunk: Maybe<GraphHub_DraftSchemaChunk_Mutation_Response>;
  /** update single row of the table: "graphHub.draftSchemaChunk" */
  update_graphHub_draftSchemaChunk_by_pk: Maybe<GraphHub_DraftSchemaChunk>;
  /** update multiples rows of table: "graphHub.draftSchemaChunk" */
  update_graphHub_draftSchemaChunk_many: Maybe<
    Array<Maybe<GraphHub_DraftSchemaChunk_Mutation_Response>>
  >;
  /** update single row of the table: "graphHub.draftSchema" */
  update_graphHub_draftSchema_by_pk: Maybe<GraphHub_DraftSchema>;
  /** update multiples rows of table: "graphHub.draftSchema" */
  update_graphHub_draftSchema_many: Maybe<
    Array<Maybe<GraphHub_DraftSchema_Mutation_Response>>
  >;
  /** update data of the table: "locale.location" */
  update_locale_location: Maybe<Locale_Location_Mutation_Response>;
  /** update data of the table: "locale.locationCode" */
  update_locale_locationCode: Maybe<Locale_LocationCode_Mutation_Response>;
  /** update single row of the table: "locale.locationCode" */
  update_locale_locationCode_by_pk: Maybe<Locale_LocationCode>;
  /** update multiples rows of table: "locale.locationCode" */
  update_locale_locationCode_many: Maybe<
    Array<Maybe<Locale_LocationCode_Mutation_Response>>
  >;
  /** update single row of the table: "locale.location" */
  update_locale_location_by_pk: Maybe<Locale_Location>;
  /** update multiples rows of table: "locale.location" */
  update_locale_location_many: Maybe<
    Array<Maybe<Locale_Location_Mutation_Response>>
  >;
  /** update data of the table: "locale.message" */
  update_locale_message: Maybe<Locale_Message_Mutation_Response>;
  /** update single row of the table: "locale.message" */
  update_locale_message_by_pk: Maybe<Locale_Message>;
  /** update multiples rows of table: "locale.message" */
  update_locale_message_many: Maybe<
    Array<Maybe<Locale_Message_Mutation_Response>>
  >;
  /** update data of the table: "locale.rating" */
  update_locale_rating: Maybe<Locale_Rating_Mutation_Response>;
  /** update single row of the table: "locale.rating" */
  update_locale_rating_by_pk: Maybe<Locale_Rating>;
  /** update multiples rows of table: "locale.rating" */
  update_locale_rating_many: Maybe<
    Array<Maybe<Locale_Rating_Mutation_Response>>
  >;
  /** update data of the table: "prompt.bulkJob" */
  update_prompt_bulkJob: Maybe<Prompt_BulkJob_Mutation_Response>;
  /** update data of the table: "prompt.bulkJobProjectLabel" */
  update_prompt_bulkJobProjectLabel: Maybe<Prompt_BulkJobProjectLabel_Mutation_Response>;
  /** update single row of the table: "prompt.bulkJobProjectLabel" */
  update_prompt_bulkJobProjectLabel_by_pk: Maybe<Prompt_BulkJobProjectLabel>;
  /** update multiples rows of table: "prompt.bulkJobProjectLabel" */
  update_prompt_bulkJobProjectLabel_many: Maybe<
    Array<Maybe<Prompt_BulkJobProjectLabel_Mutation_Response>>
  >;
  /** update data of the table: "prompt.bulkJobStatus" */
  update_prompt_bulkJobStatus: Maybe<Prompt_BulkJobStatus_Mutation_Response>;
  /** update single row of the table: "prompt.bulkJobStatus" */
  update_prompt_bulkJobStatus_by_pk: Maybe<Prompt_BulkJobStatus>;
  /** update multiples rows of table: "prompt.bulkJobStatus" */
  update_prompt_bulkJobStatus_many: Maybe<
    Array<Maybe<Prompt_BulkJobStatus_Mutation_Response>>
  >;
  /** update single row of the table: "prompt.bulkJob" */
  update_prompt_bulkJob_by_pk: Maybe<Prompt_BulkJob>;
  /** update multiples rows of table: "prompt.bulkJob" */
  update_prompt_bulkJob_many: Maybe<
    Array<Maybe<Prompt_BulkJob_Mutation_Response>>
  >;
  /** update data of the table: "prompt.categoryCode" */
  update_prompt_categoryCode: Maybe<Prompt_CategoryCode_Mutation_Response>;
  /** update single row of the table: "prompt.categoryCode" */
  update_prompt_categoryCode_by_pk: Maybe<Prompt_CategoryCode>;
  /** update multiples rows of table: "prompt.categoryCode" */
  update_prompt_categoryCode_many: Maybe<
    Array<Maybe<Prompt_CategoryCode_Mutation_Response>>
  >;
  /** update data of the table: "prompt.chatCompletionOption" */
  update_prompt_chatCompletionOption: Maybe<Prompt_ChatCompletionOption_Mutation_Response>;
  /** update data of the table: "prompt.chatCompletionOptionError" */
  update_prompt_chatCompletionOptionError: Maybe<Prompt_ChatCompletionOptionError_Mutation_Response>;
  /** update single row of the table: "prompt.chatCompletionOptionError" */
  update_prompt_chatCompletionOptionError_by_pk: Maybe<Prompt_ChatCompletionOptionError>;
  /** update multiples rows of table: "prompt.chatCompletionOptionError" */
  update_prompt_chatCompletionOptionError_many: Maybe<
    Array<Maybe<Prompt_ChatCompletionOptionError_Mutation_Response>>
  >;
  /** update single row of the table: "prompt.chatCompletionOption" */
  update_prompt_chatCompletionOption_by_pk: Maybe<Prompt_ChatCompletionOption>;
  /** update multiples rows of table: "prompt.chatCompletionOption" */
  update_prompt_chatCompletionOption_many: Maybe<
    Array<Maybe<Prompt_ChatCompletionOption_Mutation_Response>>
  >;
  /** update data of the table: "prompt.chatDocument" */
  update_prompt_chatDocument: Maybe<Prompt_ChatDocument_Mutation_Response>;
  /** update data of the table: "prompt.chatDocumentGroup" */
  update_prompt_chatDocumentGroup: Maybe<Prompt_ChatDocumentGroup_Mutation_Response>;
  /** update single row of the table: "prompt.chatDocumentGroup" */
  update_prompt_chatDocumentGroup_by_pk: Maybe<Prompt_ChatDocumentGroup>;
  /** update multiples rows of table: "prompt.chatDocumentGroup" */
  update_prompt_chatDocumentGroup_many: Maybe<
    Array<Maybe<Prompt_ChatDocumentGroup_Mutation_Response>>
  >;
  /** update single row of the table: "prompt.chatDocument" */
  update_prompt_chatDocument_by_pk: Maybe<Prompt_ChatDocument>;
  /** update multiples rows of table: "prompt.chatDocument" */
  update_prompt_chatDocument_many: Maybe<
    Array<Maybe<Prompt_ChatDocument_Mutation_Response>>
  >;
  /** update data of the table: "prompt.docsPageRating" */
  update_prompt_docsPageRating: Maybe<Prompt_DocsPageRating_Mutation_Response>;
  /** update single row of the table: "prompt.docsPageRating" */
  update_prompt_docsPageRating_by_pk: Maybe<Prompt_DocsPageRating>;
  /** update multiples rows of table: "prompt.docsPageRating" */
  update_prompt_docsPageRating_many: Maybe<
    Array<Maybe<Prompt_DocsPageRating_Mutation_Response>>
  >;
  /** update data of the table: "usage.event" */
  update_usage_event: Maybe<Usage_Event_Mutation_Response>;
  /** update single row of the table: "usage.event" */
  update_usage_event_by_pk: Maybe<Usage_Event>;
  /** update multiples rows of table: "usage.event" */
  update_usage_event_many: Maybe<Array<Maybe<Usage_Event_Mutation_Response>>>;
  /** update data of the table: "ux.dashboardPreferences" */
  update_ux_dashboardPreferences: Maybe<Ux_DashboardPreferences_Mutation_Response>;
  /** update single row of the table: "ux.dashboardPreferences" */
  update_ux_dashboardPreferences_by_pk: Maybe<Ux_DashboardPreferences>;
  /** update multiples rows of table: "ux.dashboardPreferences" */
  update_ux_dashboardPreferences_many: Maybe<
    Array<Maybe<Ux_DashboardPreferences_Mutation_Response>>
  >;
};

/** mutation root */
export type Mutation_RootDelete_CustomMessage_ContentArgs = {
  where: CustomMessage_Content_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_CustomMessage_Content_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_CustomMessage_PageNameArgs = {
  where: CustomMessage_PageName_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_CustomMessage_PageName_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Digest_PrivateArgs = {
  where: Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Digest_Private_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Digest_PublicArgs = {
  where: Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Digest_Public_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_OnlyArgs =
  {
    where: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_PrivateArgs = {
  where: Embedding_Zonos_Com_Dev_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_PublicArgs = {
  where: Embedding_Zonos_Com_Dev_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Split_Front_PrivateArgs =
  {
    where: Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Split_Front_Private_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_OnlyArgs =
  {
    where: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Zonos_Email_OnlyArgs = {
  where: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Dev_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Digest_PrivateArgs = {
  where: Embedding_Zonos_Com_Digest_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Digest_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Digest_PublicArgs = {
  where: Embedding_Zonos_Com_Digest_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Digest_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Digest_Zonos_Email_OnlyArgs =
  {
    where: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Digest_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_PrivateArgs = {
  where: Embedding_Zonos_Com_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_PublicArgs = {
  where: Embedding_Zonos_Com_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Front_PrivateArgs = {
  where: Embedding_Zonos_Com_Split_Front_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Front_Private_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Front_PublicArgs = {
  where: Embedding_Zonos_Com_Split_Front_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Front_Public_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Front_Zonos_Email_OnlyArgs =
  {
    where: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_PrivateArgs = {
  where: Embedding_Zonos_Com_Split_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_PublicArgs = {
  where: Embedding_Zonos_Com_Split_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Zonos_Email_OnlyArgs =
  {
    where: Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Split_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Zonos_Email_OnlyArgs = {
  where: Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Embedding_Zonos_Com_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

/** mutation root */
export type Mutation_RootDelete_Error_EventArgs = {
  where: Error_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Error_Event_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Error_ProjectArgs = {
  where: Error_Project_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Error_ProjectNameArgs = {
  where: Error_ProjectName_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Error_ProjectName_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Error_Project_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_AspectArgs = {
  where: Feature_Aspect_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_AspectKeyArgs = {
  where: Feature_AspectKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_AspectKey_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_Aspect_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceArgs = {
  where: Feature_Audience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceAspectLinkArgs = {
  where: Feature_AudienceAspectLink_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceAspectLink_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceEntityLinkArgs = {
  where: Feature_AudienceEntityLink_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceEntityLink_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceNameArgs = {
  where: Feature_AudienceName_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_AudienceName_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_Audience_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Feature_EntityArgs = {
  where: Feature_Entity_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Feature_Entity_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_CategoryArgs = {
  where: GraphHub_Category_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_CategoryLabelArgs = {
  where: GraphHub_CategoryLabel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_CategoryLabel_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_Category_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedInstanceArgs = {
  where: GraphHub_DeployedInstance_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedInstance_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedSchemaArgs = {
  where: GraphHub_DeployedSchema_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedSchemaChunkArgs = {
  where: GraphHub_DeployedSchemaChunk_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedSchemaChunk_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedSchemaLabelArgs = {
  where: GraphHub_DeployedSchemaLabel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedSchemaLabel_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DeployedSchema_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DraftInstanceArgs = {
  where: GraphHub_DraftInstance_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DraftInstance_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DraftSchemaArgs = {
  where: GraphHub_DraftSchema_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DraftSchemaChunkArgs = {
  where: GraphHub_DraftSchemaChunk_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DraftSchemaChunk_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_GraphHub_DraftSchema_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Locale_LocationArgs = {
  where: Locale_Location_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Locale_LocationCodeArgs = {
  where: Locale_LocationCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Locale_LocationCode_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Locale_Location_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Locale_MessageArgs = {
  where: Locale_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Locale_Message_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Locale_RatingArgs = {
  where: Locale_Rating_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Locale_Rating_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_BulkJobArgs = {
  where: Prompt_BulkJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_BulkJobProjectLabelArgs = {
  where: Prompt_BulkJobProjectLabel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_BulkJobProjectLabel_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_BulkJobStatusArgs = {
  where: Prompt_BulkJobStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_BulkJobStatus_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_BulkJob_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_CategoryCodeArgs = {
  where: Prompt_CategoryCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_CategoryCode_By_PkArgs = {
  set: Scalars['String'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatCompletionOptionArgs = {
  where: Prompt_ChatCompletionOption_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatCompletionOptionErrorArgs = {
  where: Prompt_ChatCompletionOptionError_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatCompletionOptionError_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatCompletionOption_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatDocumentArgs = {
  where: Prompt_ChatDocument_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatDocumentGroupArgs = {
  where: Prompt_ChatDocumentGroup_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatDocumentGroup_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_ChatDocument_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Prompt_DocsPageRatingArgs = {
  where: Prompt_DocsPageRating_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Prompt_DocsPageRating_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Usage_EventArgs = {
  where: Usage_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Usage_Event_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootDelete_Ux_DashboardPreferencesArgs = {
  where: Ux_DashboardPreferences_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Ux_DashboardPreferences_By_PkArgs = {
  id: Scalars['bigint'];
};

/** mutation root */
export type Mutation_RootInsert_CustomMessage_ContentArgs = {
  objects: Array<CustomMessage_Content_Insert_Input>;
  on_conflict: InputMaybe<CustomMessage_Content_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CustomMessage_Content_OneArgs = {
  object: CustomMessage_Content_Insert_Input;
  on_conflict: InputMaybe<CustomMessage_Content_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CustomMessage_PageNameArgs = {
  objects: Array<CustomMessage_PageName_Insert_Input>;
  on_conflict: InputMaybe<CustomMessage_PageName_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CustomMessage_PageName_OneArgs = {
  object: CustomMessage_PageName_Insert_Input;
  on_conflict: InputMaybe<CustomMessage_PageName_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Digest_PrivateArgs = {
  objects: Array<Embedding_Zonos_Com_Dev_Digest_Private_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Digest_Private_OneArgs =
  {
    object: Embedding_Zonos_Com_Dev_Digest_Private_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Digest_PublicArgs = {
  objects: Array<Embedding_Zonos_Com_Dev_Digest_Public_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Digest_Public_OneArgs =
  {
    object: Embedding_Zonos_Com_Dev_Digest_Public_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_OnlyArgs =
  {
    objects: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Insert_Input>;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_OneArgs =
  {
    object: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_PrivateArgs = {
  objects: Array<Embedding_Zonos_Com_Dev_Private_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Private_OneArgs = {
  object: Embedding_Zonos_Com_Dev_Private_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_PublicArgs = {
  objects: Array<Embedding_Zonos_Com_Dev_Public_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Public_OneArgs = {
  object: Embedding_Zonos_Com_Dev_Public_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Split_Front_PrivateArgs =
  {
    objects: Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Insert_Input>;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Split_Front_Private_OneArgs =
  {
    object: Embedding_Zonos_Com_Dev_Split_Front_Private_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_OnlyArgs =
  {
    objects: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Insert_Input>;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_OneArgs =
  {
    object: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Zonos_Email_OnlyArgs = {
  objects: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Dev_Zonos_Email_Only_OneArgs =
  {
    object: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Digest_PrivateArgs = {
  objects: Array<Embedding_Zonos_Com_Digest_Private_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Digest_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Digest_Private_OneArgs = {
  object: Embedding_Zonos_Com_Digest_Private_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Digest_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Digest_PublicArgs = {
  objects: Array<Embedding_Zonos_Com_Digest_Public_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Digest_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Digest_Public_OneArgs = {
  object: Embedding_Zonos_Com_Digest_Public_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Digest_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Digest_Zonos_Email_OnlyArgs =
  {
    objects: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Insert_Input>;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Digest_Zonos_Email_Only_OneArgs =
  {
    object: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_PrivateArgs = {
  objects: Array<Embedding_Zonos_Com_Private_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Private_OneArgs = {
  object: Embedding_Zonos_Com_Private_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_PublicArgs = {
  objects: Array<Embedding_Zonos_Com_Public_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Public_OneArgs = {
  object: Embedding_Zonos_Com_Public_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Front_PrivateArgs = {
  objects: Array<Embedding_Zonos_Com_Split_Front_Private_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Front_Private_OneArgs =
  {
    object: Embedding_Zonos_Com_Split_Front_Private_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Front_PublicArgs = {
  objects: Array<Embedding_Zonos_Com_Split_Front_Public_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Front_Public_OneArgs =
  {
    object: Embedding_Zonos_Com_Split_Front_Public_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Front_Zonos_Email_OnlyArgs =
  {
    objects: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Insert_Input>;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_OneArgs =
  {
    object: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_PrivateArgs = {
  objects: Array<Embedding_Zonos_Com_Split_Private_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Private_OneArgs = {
  object: Embedding_Zonos_Com_Split_Private_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Private_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_PublicArgs = {
  objects: Array<Embedding_Zonos_Com_Split_Public_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Public_OneArgs = {
  object: Embedding_Zonos_Com_Split_Public_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Public_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Zonos_Email_OnlyArgs =
  {
    objects: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Insert_Input>;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Split_Zonos_Email_Only_OneArgs =
  {
    object: Embedding_Zonos_Com_Split_Zonos_Email_Only_Insert_Input;
    on_conflict: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_On_Conflict>;
  };

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Zonos_Email_OnlyArgs = {
  objects: Array<Embedding_Zonos_Com_Zonos_Email_Only_Insert_Input>;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Embedding_Zonos_Com_Zonos_Email_Only_OneArgs = {
  object: Embedding_Zonos_Com_Zonos_Email_Only_Insert_Input;
  on_conflict: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Error_EventArgs = {
  objects: Array<Error_Event_Insert_Input>;
  on_conflict: InputMaybe<Error_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Error_Event_OneArgs = {
  object: Error_Event_Insert_Input;
  on_conflict: InputMaybe<Error_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Error_ProjectArgs = {
  objects: Array<Error_Project_Insert_Input>;
  on_conflict: InputMaybe<Error_Project_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Error_ProjectNameArgs = {
  objects: Array<Error_ProjectName_Insert_Input>;
  on_conflict: InputMaybe<Error_ProjectName_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Error_ProjectName_OneArgs = {
  object: Error_ProjectName_Insert_Input;
  on_conflict: InputMaybe<Error_ProjectName_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Error_Project_OneArgs = {
  object: Error_Project_Insert_Input;
  on_conflict: InputMaybe<Error_Project_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AspectArgs = {
  objects: Array<Feature_Aspect_Insert_Input>;
  on_conflict: InputMaybe<Feature_Aspect_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AspectKeyArgs = {
  objects: Array<Feature_AspectKey_Insert_Input>;
  on_conflict: InputMaybe<Feature_AspectKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AspectKey_OneArgs = {
  object: Feature_AspectKey_Insert_Input;
  on_conflict: InputMaybe<Feature_AspectKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_Aspect_OneArgs = {
  object: Feature_Aspect_Insert_Input;
  on_conflict: InputMaybe<Feature_Aspect_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceArgs = {
  objects: Array<Feature_Audience_Insert_Input>;
  on_conflict: InputMaybe<Feature_Audience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceAspectLinkArgs = {
  objects: Array<Feature_AudienceAspectLink_Insert_Input>;
  on_conflict: InputMaybe<Feature_AudienceAspectLink_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceAspectLink_OneArgs = {
  object: Feature_AudienceAspectLink_Insert_Input;
  on_conflict: InputMaybe<Feature_AudienceAspectLink_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceEntityLinkArgs = {
  objects: Array<Feature_AudienceEntityLink_Insert_Input>;
  on_conflict: InputMaybe<Feature_AudienceEntityLink_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceEntityLink_OneArgs = {
  object: Feature_AudienceEntityLink_Insert_Input;
  on_conflict: InputMaybe<Feature_AudienceEntityLink_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceNameArgs = {
  objects: Array<Feature_AudienceName_Insert_Input>;
  on_conflict: InputMaybe<Feature_AudienceName_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_AudienceName_OneArgs = {
  object: Feature_AudienceName_Insert_Input;
  on_conflict: InputMaybe<Feature_AudienceName_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_Audience_OneArgs = {
  object: Feature_Audience_Insert_Input;
  on_conflict: InputMaybe<Feature_Audience_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_EntityArgs = {
  objects: Array<Feature_Entity_Insert_Input>;
  on_conflict: InputMaybe<Feature_Entity_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Feature_Entity_OneArgs = {
  object: Feature_Entity_Insert_Input;
  on_conflict: InputMaybe<Feature_Entity_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_CategoryArgs = {
  objects: Array<GraphHub_Category_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_Category_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_CategoryLabelArgs = {
  objects: Array<GraphHub_CategoryLabel_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_CategoryLabel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_CategoryLabel_OneArgs = {
  object: GraphHub_CategoryLabel_Insert_Input;
  on_conflict: InputMaybe<GraphHub_CategoryLabel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_Category_OneArgs = {
  object: GraphHub_Category_Insert_Input;
  on_conflict: InputMaybe<GraphHub_Category_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedInstanceArgs = {
  objects: Array<GraphHub_DeployedInstance_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DeployedInstance_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedInstance_OneArgs = {
  object: GraphHub_DeployedInstance_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DeployedInstance_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedSchemaArgs = {
  objects: Array<GraphHub_DeployedSchema_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DeployedSchema_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedSchemaChunkArgs = {
  objects: Array<GraphHub_DeployedSchemaChunk_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DeployedSchemaChunk_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedSchemaChunk_OneArgs = {
  object: GraphHub_DeployedSchemaChunk_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DeployedSchemaChunk_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedSchemaLabelArgs = {
  objects: Array<GraphHub_DeployedSchemaLabel_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DeployedSchemaLabel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedSchemaLabel_OneArgs = {
  object: GraphHub_DeployedSchemaLabel_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DeployedSchemaLabel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DeployedSchema_OneArgs = {
  object: GraphHub_DeployedSchema_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DeployedSchema_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DraftInstanceArgs = {
  objects: Array<GraphHub_DraftInstance_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DraftInstance_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DraftInstance_OneArgs = {
  object: GraphHub_DraftInstance_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DraftInstance_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DraftSchemaArgs = {
  objects: Array<GraphHub_DraftSchema_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DraftSchema_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DraftSchemaChunkArgs = {
  objects: Array<GraphHub_DraftSchemaChunk_Insert_Input>;
  on_conflict: InputMaybe<GraphHub_DraftSchemaChunk_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DraftSchemaChunk_OneArgs = {
  object: GraphHub_DraftSchemaChunk_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DraftSchemaChunk_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_GraphHub_DraftSchema_OneArgs = {
  object: GraphHub_DraftSchema_Insert_Input;
  on_conflict: InputMaybe<GraphHub_DraftSchema_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_LocationArgs = {
  objects: Array<Locale_Location_Insert_Input>;
  on_conflict: InputMaybe<Locale_Location_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_LocationCodeArgs = {
  objects: Array<Locale_LocationCode_Insert_Input>;
  on_conflict: InputMaybe<Locale_LocationCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_LocationCode_OneArgs = {
  object: Locale_LocationCode_Insert_Input;
  on_conflict: InputMaybe<Locale_LocationCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_Location_OneArgs = {
  object: Locale_Location_Insert_Input;
  on_conflict: InputMaybe<Locale_Location_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_MessageArgs = {
  objects: Array<Locale_Message_Insert_Input>;
  on_conflict: InputMaybe<Locale_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_Message_OneArgs = {
  object: Locale_Message_Insert_Input;
  on_conflict: InputMaybe<Locale_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_RatingArgs = {
  objects: Array<Locale_Rating_Insert_Input>;
  on_conflict: InputMaybe<Locale_Rating_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locale_Rating_OneArgs = {
  object: Locale_Rating_Insert_Input;
  on_conflict: InputMaybe<Locale_Rating_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_BulkJobArgs = {
  objects: Array<Prompt_BulkJob_Insert_Input>;
  on_conflict: InputMaybe<Prompt_BulkJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_BulkJobProjectLabelArgs = {
  objects: Array<Prompt_BulkJobProjectLabel_Insert_Input>;
  on_conflict: InputMaybe<Prompt_BulkJobProjectLabel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_BulkJobProjectLabel_OneArgs = {
  object: Prompt_BulkJobProjectLabel_Insert_Input;
  on_conflict: InputMaybe<Prompt_BulkJobProjectLabel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_BulkJobStatusArgs = {
  objects: Array<Prompt_BulkJobStatus_Insert_Input>;
  on_conflict: InputMaybe<Prompt_BulkJobStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_BulkJobStatus_OneArgs = {
  object: Prompt_BulkJobStatus_Insert_Input;
  on_conflict: InputMaybe<Prompt_BulkJobStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_BulkJob_OneArgs = {
  object: Prompt_BulkJob_Insert_Input;
  on_conflict: InputMaybe<Prompt_BulkJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_CategoryCodeArgs = {
  objects: Array<Prompt_CategoryCode_Insert_Input>;
  on_conflict: InputMaybe<Prompt_CategoryCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_CategoryCode_OneArgs = {
  object: Prompt_CategoryCode_Insert_Input;
  on_conflict: InputMaybe<Prompt_CategoryCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatCompletionOptionArgs = {
  objects: Array<Prompt_ChatCompletionOption_Insert_Input>;
  on_conflict: InputMaybe<Prompt_ChatCompletionOption_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatCompletionOptionErrorArgs = {
  objects: Array<Prompt_ChatCompletionOptionError_Insert_Input>;
  on_conflict: InputMaybe<Prompt_ChatCompletionOptionError_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatCompletionOptionError_OneArgs = {
  object: Prompt_ChatCompletionOptionError_Insert_Input;
  on_conflict: InputMaybe<Prompt_ChatCompletionOptionError_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatCompletionOption_OneArgs = {
  object: Prompt_ChatCompletionOption_Insert_Input;
  on_conflict: InputMaybe<Prompt_ChatCompletionOption_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatDocumentArgs = {
  objects: Array<Prompt_ChatDocument_Insert_Input>;
  on_conflict: InputMaybe<Prompt_ChatDocument_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatDocumentGroupArgs = {
  objects: Array<Prompt_ChatDocumentGroup_Insert_Input>;
  on_conflict: InputMaybe<Prompt_ChatDocumentGroup_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatDocumentGroup_OneArgs = {
  object: Prompt_ChatDocumentGroup_Insert_Input;
  on_conflict: InputMaybe<Prompt_ChatDocumentGroup_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_ChatDocument_OneArgs = {
  object: Prompt_ChatDocument_Insert_Input;
  on_conflict: InputMaybe<Prompt_ChatDocument_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_DocsPageRatingArgs = {
  objects: Array<Prompt_DocsPageRating_Insert_Input>;
  on_conflict: InputMaybe<Prompt_DocsPageRating_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Prompt_DocsPageRating_OneArgs = {
  object: Prompt_DocsPageRating_Insert_Input;
  on_conflict: InputMaybe<Prompt_DocsPageRating_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Usage_EventArgs = {
  objects: Array<Usage_Event_Insert_Input>;
  on_conflict: InputMaybe<Usage_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Usage_Event_OneArgs = {
  object: Usage_Event_Insert_Input;
  on_conflict: InputMaybe<Usage_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Ux_DashboardPreferencesArgs = {
  objects: Array<Ux_DashboardPreferences_Insert_Input>;
  on_conflict: InputMaybe<Ux_DashboardPreferences_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Ux_DashboardPreferences_OneArgs = {
  object: Ux_DashboardPreferences_Insert_Input;
  on_conflict: InputMaybe<Ux_DashboardPreferences_On_Conflict>;
};

/** mutation root */
export type Mutation_RootUpdate_CustomMessage_ContentArgs = {
  _inc: InputMaybe<CustomMessage_Content_Inc_Input>;
  _set: InputMaybe<CustomMessage_Content_Set_Input>;
  where: CustomMessage_Content_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_CustomMessage_Content_By_PkArgs = {
  _inc: InputMaybe<CustomMessage_Content_Inc_Input>;
  _set: InputMaybe<CustomMessage_Content_Set_Input>;
  pk_columns: CustomMessage_Content_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_CustomMessage_Content_ManyArgs = {
  updates: Array<CustomMessage_Content_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CustomMessage_PageNameArgs = {
  _set: InputMaybe<CustomMessage_PageName_Set_Input>;
  where: CustomMessage_PageName_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_CustomMessage_PageName_By_PkArgs = {
  _set: InputMaybe<CustomMessage_PageName_Set_Input>;
  pk_columns: CustomMessage_PageName_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_CustomMessage_PageName_ManyArgs = {
  updates: Array<CustomMessage_PageName_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_PrivateArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Set_Input>;
  where: Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Private_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Dev_Digest_Private_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Private_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Dev_Digest_Private_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_PublicArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Set_Input>;
  where: Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Public_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Dev_Digest_Public_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Public_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Dev_Digest_Public_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_OnlyArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Set_Input>;
    where: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_PrivateArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Private_Set_Input>;
  where: Embedding_Zonos_Com_Dev_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Private_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Private_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Dev_Private_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Private_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Dev_Private_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_PublicArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Public_Set_Input>;
  where: Embedding_Zonos_Com_Dev_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Public_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Public_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Dev_Public_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Public_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Dev_Public_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Split_Front_PrivateArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Set_Input>;
    where: Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Split_Front_Private_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Dev_Split_Front_Private_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Split_Front_Private_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_OnlyArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Set_Input>;
    where: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Zonos_Email_OnlyArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Set_Input>;
  where: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Dev_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_PrivateArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Digest_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Digest_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Digest_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Digest_Private_Set_Input>;
  where: Embedding_Zonos_Com_Digest_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Private_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Digest_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Digest_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Digest_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Digest_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Digest_Private_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Digest_Private_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Private_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Digest_Private_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_PublicArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Digest_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Digest_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Digest_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Digest_Public_Set_Input>;
  where: Embedding_Zonos_Com_Digest_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Public_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Digest_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Digest_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Digest_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Digest_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Digest_Public_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Digest_Public_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Public_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Digest_Public_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Zonos_Email_OnlyArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Set_Input>;
    where: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Digest_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_PrivateArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Private_Set_Input>;
  where: Embedding_Zonos_Com_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Private_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Private_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Private_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Private_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Private_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_PublicArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Public_Set_Input>;
  where: Embedding_Zonos_Com_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Public_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Public_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Public_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Public_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Public_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_PrivateArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Set_Input>;
  where: Embedding_Zonos_Com_Split_Front_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Private_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Split_Front_Private_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Private_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Split_Front_Private_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_PublicArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Set_Input>;
  where: Embedding_Zonos_Com_Split_Front_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Public_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Split_Front_Public_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Public_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Split_Front_Public_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Zonos_Email_OnlyArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Set_Input>;
    where: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_PrivateArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Split_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Split_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Split_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Split_Private_Set_Input>;
  where: Embedding_Zonos_Com_Split_Private_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Private_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Split_Private_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Private_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Split_Private_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Split_Private_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Split_Private_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Split_Private_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Private_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Split_Private_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_PublicArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Split_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Split_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Split_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Split_Public_Set_Input>;
  where: Embedding_Zonos_Com_Split_Public_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Public_By_PkArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Split_Public_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Public_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Split_Public_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Split_Public_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Split_Public_Set_Input>;
  pk_columns: Embedding_Zonos_Com_Split_Public_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Public_ManyArgs = {
  updates: Array<Embedding_Zonos_Com_Split_Public_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Zonos_Email_OnlyArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Set_Input>;
    where: Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Split_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Split_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Zonos_Email_OnlyArgs = {
  _append: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Append_Input>;
  _delete_at_path: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_Elem_Input>;
  _delete_key: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_Key_Input>;
  _inc: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Inc_Input>;
  _prepend: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Prepend_Input>;
  _set: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Set_Input>;
  where: Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Zonos_Email_Only_By_PkArgs =
  {
    _append: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Append_Input>;
    _delete_at_path: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_At_Path_Input>;
    _delete_elem: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_Elem_Input>;
    _delete_key: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Delete_Key_Input>;
    _inc: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Inc_Input>;
    _prepend: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Prepend_Input>;
    _set: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Set_Input>;
    pk_columns: Embedding_Zonos_Com_Zonos_Email_Only_Pk_Columns_Input;
  };

/** mutation root */
export type Mutation_RootUpdate_Embedding_Zonos_Com_Zonos_Email_Only_ManyArgs =
  {
    updates: Array<Embedding_Zonos_Com_Zonos_Email_Only_Updates>;
  };

/** mutation root */
export type Mutation_RootUpdate_Error_EventArgs = {
  _append: InputMaybe<Error_Event_Append_Input>;
  _delete_at_path: InputMaybe<Error_Event_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Error_Event_Delete_Elem_Input>;
  _delete_key: InputMaybe<Error_Event_Delete_Key_Input>;
  _inc: InputMaybe<Error_Event_Inc_Input>;
  _prepend: InputMaybe<Error_Event_Prepend_Input>;
  _set: InputMaybe<Error_Event_Set_Input>;
  where: Error_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Error_Event_By_PkArgs = {
  _append: InputMaybe<Error_Event_Append_Input>;
  _delete_at_path: InputMaybe<Error_Event_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Error_Event_Delete_Elem_Input>;
  _delete_key: InputMaybe<Error_Event_Delete_Key_Input>;
  _inc: InputMaybe<Error_Event_Inc_Input>;
  _prepend: InputMaybe<Error_Event_Prepend_Input>;
  _set: InputMaybe<Error_Event_Set_Input>;
  pk_columns: Error_Event_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Error_Event_ManyArgs = {
  updates: Array<Error_Event_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Error_ProjectArgs = {
  _inc: InputMaybe<Error_Project_Inc_Input>;
  _set: InputMaybe<Error_Project_Set_Input>;
  where: Error_Project_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Error_ProjectNameArgs = {
  _set: InputMaybe<Error_ProjectName_Set_Input>;
  where: Error_ProjectName_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Error_ProjectName_By_PkArgs = {
  _set: InputMaybe<Error_ProjectName_Set_Input>;
  pk_columns: Error_ProjectName_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Error_ProjectName_ManyArgs = {
  updates: Array<Error_ProjectName_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Error_Project_By_PkArgs = {
  _inc: InputMaybe<Error_Project_Inc_Input>;
  _set: InputMaybe<Error_Project_Set_Input>;
  pk_columns: Error_Project_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Error_Project_ManyArgs = {
  updates: Array<Error_Project_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AspectArgs = {
  _inc: InputMaybe<Feature_Aspect_Inc_Input>;
  _set: InputMaybe<Feature_Aspect_Set_Input>;
  where: Feature_Aspect_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AspectKeyArgs = {
  _set: InputMaybe<Feature_AspectKey_Set_Input>;
  where: Feature_AspectKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AspectKey_By_PkArgs = {
  _set: InputMaybe<Feature_AspectKey_Set_Input>;
  pk_columns: Feature_AspectKey_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AspectKey_ManyArgs = {
  updates: Array<Feature_AspectKey_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_Aspect_By_PkArgs = {
  _inc: InputMaybe<Feature_Aspect_Inc_Input>;
  _set: InputMaybe<Feature_Aspect_Set_Input>;
  pk_columns: Feature_Aspect_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_Aspect_ManyArgs = {
  updates: Array<Feature_Aspect_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceArgs = {
  _inc: InputMaybe<Feature_Audience_Inc_Input>;
  _set: InputMaybe<Feature_Audience_Set_Input>;
  where: Feature_Audience_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceAspectLinkArgs = {
  _inc: InputMaybe<Feature_AudienceAspectLink_Inc_Input>;
  _set: InputMaybe<Feature_AudienceAspectLink_Set_Input>;
  where: Feature_AudienceAspectLink_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceAspectLink_By_PkArgs = {
  _inc: InputMaybe<Feature_AudienceAspectLink_Inc_Input>;
  _set: InputMaybe<Feature_AudienceAspectLink_Set_Input>;
  pk_columns: Feature_AudienceAspectLink_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceAspectLink_ManyArgs = {
  updates: Array<Feature_AudienceAspectLink_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceEntityLinkArgs = {
  _inc: InputMaybe<Feature_AudienceEntityLink_Inc_Input>;
  _set: InputMaybe<Feature_AudienceEntityLink_Set_Input>;
  where: Feature_AudienceEntityLink_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceEntityLink_By_PkArgs = {
  _inc: InputMaybe<Feature_AudienceEntityLink_Inc_Input>;
  _set: InputMaybe<Feature_AudienceEntityLink_Set_Input>;
  pk_columns: Feature_AudienceEntityLink_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceEntityLink_ManyArgs = {
  updates: Array<Feature_AudienceEntityLink_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceNameArgs = {
  _set: InputMaybe<Feature_AudienceName_Set_Input>;
  where: Feature_AudienceName_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceName_By_PkArgs = {
  _set: InputMaybe<Feature_AudienceName_Set_Input>;
  pk_columns: Feature_AudienceName_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_AudienceName_ManyArgs = {
  updates: Array<Feature_AudienceName_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_Audience_By_PkArgs = {
  _inc: InputMaybe<Feature_Audience_Inc_Input>;
  _set: InputMaybe<Feature_Audience_Set_Input>;
  pk_columns: Feature_Audience_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_Audience_ManyArgs = {
  updates: Array<Feature_Audience_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_EntityArgs = {
  _inc: InputMaybe<Feature_Entity_Inc_Input>;
  _set: InputMaybe<Feature_Entity_Set_Input>;
  where: Feature_Entity_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_Entity_By_PkArgs = {
  _inc: InputMaybe<Feature_Entity_Inc_Input>;
  _set: InputMaybe<Feature_Entity_Set_Input>;
  pk_columns: Feature_Entity_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Feature_Entity_ManyArgs = {
  updates: Array<Feature_Entity_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_CategoryArgs = {
  _inc: InputMaybe<GraphHub_Category_Inc_Input>;
  _set: InputMaybe<GraphHub_Category_Set_Input>;
  where: GraphHub_Category_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_CategoryLabelArgs = {
  _set: InputMaybe<GraphHub_CategoryLabel_Set_Input>;
  where: GraphHub_CategoryLabel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_CategoryLabel_By_PkArgs = {
  _set: InputMaybe<GraphHub_CategoryLabel_Set_Input>;
  pk_columns: GraphHub_CategoryLabel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_CategoryLabel_ManyArgs = {
  updates: Array<GraphHub_CategoryLabel_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_Category_By_PkArgs = {
  _inc: InputMaybe<GraphHub_Category_Inc_Input>;
  _set: InputMaybe<GraphHub_Category_Set_Input>;
  pk_columns: GraphHub_Category_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_Category_ManyArgs = {
  updates: Array<GraphHub_Category_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedInstanceArgs = {
  _inc: InputMaybe<GraphHub_DeployedInstance_Inc_Input>;
  _set: InputMaybe<GraphHub_DeployedInstance_Set_Input>;
  where: GraphHub_DeployedInstance_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedInstance_By_PkArgs = {
  _inc: InputMaybe<GraphHub_DeployedInstance_Inc_Input>;
  _set: InputMaybe<GraphHub_DeployedInstance_Set_Input>;
  pk_columns: GraphHub_DeployedInstance_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedInstance_ManyArgs = {
  updates: Array<GraphHub_DeployedInstance_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaArgs = {
  _inc: InputMaybe<GraphHub_DeployedSchema_Inc_Input>;
  _set: InputMaybe<GraphHub_DeployedSchema_Set_Input>;
  where: GraphHub_DeployedSchema_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaChunkArgs = {
  _inc: InputMaybe<GraphHub_DeployedSchemaChunk_Inc_Input>;
  _set: InputMaybe<GraphHub_DeployedSchemaChunk_Set_Input>;
  where: GraphHub_DeployedSchemaChunk_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaChunk_By_PkArgs = {
  _inc: InputMaybe<GraphHub_DeployedSchemaChunk_Inc_Input>;
  _set: InputMaybe<GraphHub_DeployedSchemaChunk_Set_Input>;
  pk_columns: GraphHub_DeployedSchemaChunk_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaChunk_ManyArgs = {
  updates: Array<GraphHub_DeployedSchemaChunk_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaLabelArgs = {
  _set: InputMaybe<GraphHub_DeployedSchemaLabel_Set_Input>;
  where: GraphHub_DeployedSchemaLabel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaLabel_By_PkArgs = {
  _set: InputMaybe<GraphHub_DeployedSchemaLabel_Set_Input>;
  pk_columns: GraphHub_DeployedSchemaLabel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchemaLabel_ManyArgs = {
  updates: Array<GraphHub_DeployedSchemaLabel_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchema_By_PkArgs = {
  _inc: InputMaybe<GraphHub_DeployedSchema_Inc_Input>;
  _set: InputMaybe<GraphHub_DeployedSchema_Set_Input>;
  pk_columns: GraphHub_DeployedSchema_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DeployedSchema_ManyArgs = {
  updates: Array<GraphHub_DeployedSchema_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftInstanceArgs = {
  _inc: InputMaybe<GraphHub_DraftInstance_Inc_Input>;
  _set: InputMaybe<GraphHub_DraftInstance_Set_Input>;
  where: GraphHub_DraftInstance_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftInstance_By_PkArgs = {
  _inc: InputMaybe<GraphHub_DraftInstance_Inc_Input>;
  _set: InputMaybe<GraphHub_DraftInstance_Set_Input>;
  pk_columns: GraphHub_DraftInstance_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftInstance_ManyArgs = {
  updates: Array<GraphHub_DraftInstance_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftSchemaArgs = {
  _inc: InputMaybe<GraphHub_DraftSchema_Inc_Input>;
  _set: InputMaybe<GraphHub_DraftSchema_Set_Input>;
  where: GraphHub_DraftSchema_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftSchemaChunkArgs = {
  _inc: InputMaybe<GraphHub_DraftSchemaChunk_Inc_Input>;
  _set: InputMaybe<GraphHub_DraftSchemaChunk_Set_Input>;
  where: GraphHub_DraftSchemaChunk_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftSchemaChunk_By_PkArgs = {
  _inc: InputMaybe<GraphHub_DraftSchemaChunk_Inc_Input>;
  _set: InputMaybe<GraphHub_DraftSchemaChunk_Set_Input>;
  pk_columns: GraphHub_DraftSchemaChunk_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftSchemaChunk_ManyArgs = {
  updates: Array<GraphHub_DraftSchemaChunk_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftSchema_By_PkArgs = {
  _inc: InputMaybe<GraphHub_DraftSchema_Inc_Input>;
  _set: InputMaybe<GraphHub_DraftSchema_Set_Input>;
  pk_columns: GraphHub_DraftSchema_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_GraphHub_DraftSchema_ManyArgs = {
  updates: Array<GraphHub_DraftSchema_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_LocationArgs = {
  _inc: InputMaybe<Locale_Location_Inc_Input>;
  _set: InputMaybe<Locale_Location_Set_Input>;
  where: Locale_Location_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_LocationCodeArgs = {
  _set: InputMaybe<Locale_LocationCode_Set_Input>;
  where: Locale_LocationCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_LocationCode_By_PkArgs = {
  _set: InputMaybe<Locale_LocationCode_Set_Input>;
  pk_columns: Locale_LocationCode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_LocationCode_ManyArgs = {
  updates: Array<Locale_LocationCode_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_Location_By_PkArgs = {
  _inc: InputMaybe<Locale_Location_Inc_Input>;
  _set: InputMaybe<Locale_Location_Set_Input>;
  pk_columns: Locale_Location_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_Location_ManyArgs = {
  updates: Array<Locale_Location_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_MessageArgs = {
  _append: InputMaybe<Locale_Message_Append_Input>;
  _delete_at_path: InputMaybe<Locale_Message_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Locale_Message_Delete_Elem_Input>;
  _delete_key: InputMaybe<Locale_Message_Delete_Key_Input>;
  _inc: InputMaybe<Locale_Message_Inc_Input>;
  _prepend: InputMaybe<Locale_Message_Prepend_Input>;
  _set: InputMaybe<Locale_Message_Set_Input>;
  where: Locale_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_Message_By_PkArgs = {
  _append: InputMaybe<Locale_Message_Append_Input>;
  _delete_at_path: InputMaybe<Locale_Message_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Locale_Message_Delete_Elem_Input>;
  _delete_key: InputMaybe<Locale_Message_Delete_Key_Input>;
  _inc: InputMaybe<Locale_Message_Inc_Input>;
  _prepend: InputMaybe<Locale_Message_Prepend_Input>;
  _set: InputMaybe<Locale_Message_Set_Input>;
  pk_columns: Locale_Message_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_Message_ManyArgs = {
  updates: Array<Locale_Message_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_RatingArgs = {
  _inc: InputMaybe<Locale_Rating_Inc_Input>;
  _set: InputMaybe<Locale_Rating_Set_Input>;
  where: Locale_Rating_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_Rating_By_PkArgs = {
  _inc: InputMaybe<Locale_Rating_Inc_Input>;
  _set: InputMaybe<Locale_Rating_Set_Input>;
  pk_columns: Locale_Rating_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Locale_Rating_ManyArgs = {
  updates: Array<Locale_Rating_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobArgs = {
  _append: InputMaybe<Prompt_BulkJob_Append_Input>;
  _delete_at_path: InputMaybe<Prompt_BulkJob_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Prompt_BulkJob_Delete_Elem_Input>;
  _delete_key: InputMaybe<Prompt_BulkJob_Delete_Key_Input>;
  _inc: InputMaybe<Prompt_BulkJob_Inc_Input>;
  _prepend: InputMaybe<Prompt_BulkJob_Prepend_Input>;
  _set: InputMaybe<Prompt_BulkJob_Set_Input>;
  where: Prompt_BulkJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobProjectLabelArgs = {
  _set: InputMaybe<Prompt_BulkJobProjectLabel_Set_Input>;
  where: Prompt_BulkJobProjectLabel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobProjectLabel_By_PkArgs = {
  _set: InputMaybe<Prompt_BulkJobProjectLabel_Set_Input>;
  pk_columns: Prompt_BulkJobProjectLabel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobProjectLabel_ManyArgs = {
  updates: Array<Prompt_BulkJobProjectLabel_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobStatusArgs = {
  _set: InputMaybe<Prompt_BulkJobStatus_Set_Input>;
  where: Prompt_BulkJobStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobStatus_By_PkArgs = {
  _set: InputMaybe<Prompt_BulkJobStatus_Set_Input>;
  pk_columns: Prompt_BulkJobStatus_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJobStatus_ManyArgs = {
  updates: Array<Prompt_BulkJobStatus_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJob_By_PkArgs = {
  _append: InputMaybe<Prompt_BulkJob_Append_Input>;
  _delete_at_path: InputMaybe<Prompt_BulkJob_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Prompt_BulkJob_Delete_Elem_Input>;
  _delete_key: InputMaybe<Prompt_BulkJob_Delete_Key_Input>;
  _inc: InputMaybe<Prompt_BulkJob_Inc_Input>;
  _prepend: InputMaybe<Prompt_BulkJob_Prepend_Input>;
  _set: InputMaybe<Prompt_BulkJob_Set_Input>;
  pk_columns: Prompt_BulkJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_BulkJob_ManyArgs = {
  updates: Array<Prompt_BulkJob_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_CategoryCodeArgs = {
  _set: InputMaybe<Prompt_CategoryCode_Set_Input>;
  where: Prompt_CategoryCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_CategoryCode_By_PkArgs = {
  _set: InputMaybe<Prompt_CategoryCode_Set_Input>;
  pk_columns: Prompt_CategoryCode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_CategoryCode_ManyArgs = {
  updates: Array<Prompt_CategoryCode_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatCompletionOptionArgs = {
  _append: InputMaybe<Prompt_ChatCompletionOption_Append_Input>;
  _delete_at_path: InputMaybe<Prompt_ChatCompletionOption_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Prompt_ChatCompletionOption_Delete_Elem_Input>;
  _delete_key: InputMaybe<Prompt_ChatCompletionOption_Delete_Key_Input>;
  _inc: InputMaybe<Prompt_ChatCompletionOption_Inc_Input>;
  _prepend: InputMaybe<Prompt_ChatCompletionOption_Prepend_Input>;
  _set: InputMaybe<Prompt_ChatCompletionOption_Set_Input>;
  where: Prompt_ChatCompletionOption_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatCompletionOptionErrorArgs = {
  _inc: InputMaybe<Prompt_ChatCompletionOptionError_Inc_Input>;
  _set: InputMaybe<Prompt_ChatCompletionOptionError_Set_Input>;
  where: Prompt_ChatCompletionOptionError_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatCompletionOptionError_By_PkArgs = {
  _inc: InputMaybe<Prompt_ChatCompletionOptionError_Inc_Input>;
  _set: InputMaybe<Prompt_ChatCompletionOptionError_Set_Input>;
  pk_columns: Prompt_ChatCompletionOptionError_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatCompletionOptionError_ManyArgs = {
  updates: Array<Prompt_ChatCompletionOptionError_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatCompletionOption_By_PkArgs = {
  _append: InputMaybe<Prompt_ChatCompletionOption_Append_Input>;
  _delete_at_path: InputMaybe<Prompt_ChatCompletionOption_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Prompt_ChatCompletionOption_Delete_Elem_Input>;
  _delete_key: InputMaybe<Prompt_ChatCompletionOption_Delete_Key_Input>;
  _inc: InputMaybe<Prompt_ChatCompletionOption_Inc_Input>;
  _prepend: InputMaybe<Prompt_ChatCompletionOption_Prepend_Input>;
  _set: InputMaybe<Prompt_ChatCompletionOption_Set_Input>;
  pk_columns: Prompt_ChatCompletionOption_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatCompletionOption_ManyArgs = {
  updates: Array<Prompt_ChatCompletionOption_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatDocumentArgs = {
  _append: InputMaybe<Prompt_ChatDocument_Append_Input>;
  _delete_at_path: InputMaybe<Prompt_ChatDocument_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Prompt_ChatDocument_Delete_Elem_Input>;
  _delete_key: InputMaybe<Prompt_ChatDocument_Delete_Key_Input>;
  _inc: InputMaybe<Prompt_ChatDocument_Inc_Input>;
  _prepend: InputMaybe<Prompt_ChatDocument_Prepend_Input>;
  _set: InputMaybe<Prompt_ChatDocument_Set_Input>;
  where: Prompt_ChatDocument_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatDocumentGroupArgs = {
  _inc: InputMaybe<Prompt_ChatDocumentGroup_Inc_Input>;
  _set: InputMaybe<Prompt_ChatDocumentGroup_Set_Input>;
  where: Prompt_ChatDocumentGroup_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatDocumentGroup_By_PkArgs = {
  _inc: InputMaybe<Prompt_ChatDocumentGroup_Inc_Input>;
  _set: InputMaybe<Prompt_ChatDocumentGroup_Set_Input>;
  pk_columns: Prompt_ChatDocumentGroup_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatDocumentGroup_ManyArgs = {
  updates: Array<Prompt_ChatDocumentGroup_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatDocument_By_PkArgs = {
  _append: InputMaybe<Prompt_ChatDocument_Append_Input>;
  _delete_at_path: InputMaybe<Prompt_ChatDocument_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Prompt_ChatDocument_Delete_Elem_Input>;
  _delete_key: InputMaybe<Prompt_ChatDocument_Delete_Key_Input>;
  _inc: InputMaybe<Prompt_ChatDocument_Inc_Input>;
  _prepend: InputMaybe<Prompt_ChatDocument_Prepend_Input>;
  _set: InputMaybe<Prompt_ChatDocument_Set_Input>;
  pk_columns: Prompt_ChatDocument_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_ChatDocument_ManyArgs = {
  updates: Array<Prompt_ChatDocument_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_DocsPageRatingArgs = {
  _inc: InputMaybe<Prompt_DocsPageRating_Inc_Input>;
  _set: InputMaybe<Prompt_DocsPageRating_Set_Input>;
  where: Prompt_DocsPageRating_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_DocsPageRating_By_PkArgs = {
  _inc: InputMaybe<Prompt_DocsPageRating_Inc_Input>;
  _set: InputMaybe<Prompt_DocsPageRating_Set_Input>;
  pk_columns: Prompt_DocsPageRating_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Prompt_DocsPageRating_ManyArgs = {
  updates: Array<Prompt_DocsPageRating_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Usage_EventArgs = {
  _append: InputMaybe<Usage_Event_Append_Input>;
  _delete_at_path: InputMaybe<Usage_Event_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Usage_Event_Delete_Elem_Input>;
  _delete_key: InputMaybe<Usage_Event_Delete_Key_Input>;
  _inc: InputMaybe<Usage_Event_Inc_Input>;
  _prepend: InputMaybe<Usage_Event_Prepend_Input>;
  _set: InputMaybe<Usage_Event_Set_Input>;
  where: Usage_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Usage_Event_By_PkArgs = {
  _append: InputMaybe<Usage_Event_Append_Input>;
  _delete_at_path: InputMaybe<Usage_Event_Delete_At_Path_Input>;
  _delete_elem: InputMaybe<Usage_Event_Delete_Elem_Input>;
  _delete_key: InputMaybe<Usage_Event_Delete_Key_Input>;
  _inc: InputMaybe<Usage_Event_Inc_Input>;
  _prepend: InputMaybe<Usage_Event_Prepend_Input>;
  _set: InputMaybe<Usage_Event_Set_Input>;
  pk_columns: Usage_Event_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Usage_Event_ManyArgs = {
  updates: Array<Usage_Event_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Ux_DashboardPreferencesArgs = {
  _inc: InputMaybe<Ux_DashboardPreferences_Inc_Input>;
  _set: InputMaybe<Ux_DashboardPreferences_Set_Input>;
  where: Ux_DashboardPreferences_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Ux_DashboardPreferences_By_PkArgs = {
  _inc: InputMaybe<Ux_DashboardPreferences_Inc_Input>;
  _set: InputMaybe<Ux_DashboardPreferences_Set_Input>;
  pk_columns: Ux_DashboardPreferences_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Ux_DashboardPreferences_ManyArgs = {
  updates: Array<Ux_DashboardPreferences_Updates>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export const orderBy = {
  /** in ascending order, nulls last */
  Asc: 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst: 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast: 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc: 'desc',
  /** in descending order, nulls first */
  DescNullsFirst: 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast: 'desc_nulls_last',
} as const;

export type Order_By = (typeof orderBy)[keyof typeof orderBy];
/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJob = {
  __typename?: 'prompt_bulkJob';
  /** An object relationship */
  bulkJobProjectLabel: Maybe<Prompt_BulkJobProjectLabel>;
  /** An object relationship */
  bulkJobStatus: Maybe<Prompt_BulkJobStatus>;
  /** An array relationship */
  chatCompletionOptions: Array<Prompt_ChatCompletionOption>;
  /** An aggregate relationship */
  chatCompletionOptions_aggregate: Prompt_ChatCompletionOption_Aggregate;
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  deployedSchemaChunks: Array<GraphHub_DeployedSchemaChunk>;
  /** An aggregate relationship */
  deployedSchemaChunks_aggregate: GraphHub_DeployedSchemaChunk_Aggregate;
  /** An array relationship */
  draftSchemaChunks: Array<GraphHub_DraftSchemaChunk>;
  /** An aggregate relationship */
  draftSchemaChunks_aggregate: GraphHub_DraftSchemaChunk_Aggregate;
  id: Scalars['bigint'];
  /** deprecated - use metadata */
  meta: Maybe<Scalars['jsonb']>;
  metadata: Maybe<Scalars['jsonb']>;
  projectLabel: Maybe<Prompt_BulkJobProjectLabel_Enum>;
  status: Maybe<Prompt_BulkJobStatus_Enum>;
  totalCount: Scalars['Int'];
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobChatCompletionOptionsArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobChatCompletionOptions_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobDeployedSchemaChunksArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobDeployedSchemaChunks_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobDraftSchemaChunksArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobDraftSchemaChunks_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobMetaArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.bulkJob" */
export type Prompt_BulkJobMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel = {
  __typename?: 'prompt_bulkJobProjectLabel';
  /** An array relationship */
  bulkJobs: Array<Prompt_BulkJob>;
  /** An aggregate relationship */
  bulkJobs_aggregate: Prompt_BulkJob_Aggregate;
  set: Scalars['String'];
};

/** columns and relationships of "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabelBulkJobsArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabelBulkJobs_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

/** aggregated selection of "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Aggregate = {
  __typename?: 'prompt_bulkJobProjectLabel_aggregate';
  aggregate: Maybe<Prompt_BulkJobProjectLabel_Aggregate_Fields>;
  nodes: Array<Prompt_BulkJobProjectLabel>;
};

/** aggregate fields of "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Aggregate_Fields = {
  __typename?: 'prompt_bulkJobProjectLabel_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Prompt_BulkJobProjectLabel_Max_Fields>;
  min: Maybe<Prompt_BulkJobProjectLabel_Min_Fields>;
};

/** aggregate fields of "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_BulkJobProjectLabel_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "prompt.bulkJobProjectLabel". All fields are combined with a logical 'AND'. */
export type Prompt_BulkJobProjectLabel_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_BulkJobProjectLabel_Bool_Exp>>;
  _not?: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_BulkJobProjectLabel_Bool_Exp>>;
  bulkJobs?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  bulkJobs_aggregate?: InputMaybe<Prompt_BulkJob_Aggregate_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.bulkJobProjectLabel" */
export const promptBulkJobProjectLabelConstraint = {
  /** unique or primary key constraint on columns "set" */
  BulkJobProjectLabelPkey: 'bulkJobProjectLabel_pkey',
} as const;

export type Prompt_BulkJobProjectLabel_Constraint =
  (typeof promptBulkJobProjectLabelConstraint)[keyof typeof promptBulkJobProjectLabelConstraint];
export const promptBulkJobProjectLabelEnum = {
  DocsSeo: 'docs_seo',
  DocsTranslation: 'docs_translation',
  ExploreSchemaValidation: 'explore_schema_validation',
} as const;

export type Prompt_BulkJobProjectLabel_Enum =
  (typeof promptBulkJobProjectLabelEnum)[keyof typeof promptBulkJobProjectLabelEnum];
/** Boolean expression to compare columns of type "prompt_bulkJobProjectLabel_enum". All fields are combined with logical 'AND'. */
export type Prompt_BulkJobProjectLabel_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Prompt_BulkJobProjectLabel_Enum>;
  _in?: InputMaybe<Array<Prompt_BulkJobProjectLabel_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Prompt_BulkJobProjectLabel_Enum>;
  _nin?: InputMaybe<Array<Prompt_BulkJobProjectLabel_Enum>>;
};

/** input type for inserting data into table "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Insert_Input = {
  bulkJobs?: InputMaybe<Prompt_BulkJob_Arr_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Prompt_BulkJobProjectLabel_Max_Fields = {
  __typename?: 'prompt_bulkJobProjectLabel_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Prompt_BulkJobProjectLabel_Min_Fields = {
  __typename?: 'prompt_bulkJobProjectLabel_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Mutation_Response = {
  __typename?: 'prompt_bulkJobProjectLabel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_BulkJobProjectLabel>;
};

/** input type for inserting object relation for remote table "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Obj_Rel_Insert_Input = {
  data: Prompt_BulkJobProjectLabel_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_BulkJobProjectLabel_On_Conflict>;
};

/** on_conflict condition type for table "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_On_Conflict = {
  constraint: Prompt_BulkJobProjectLabel_Constraint;
  update_columns: Array<Prompt_BulkJobProjectLabel_Update_Column>;
  where?: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.bulkJobProjectLabel". */
export type Prompt_BulkJobProjectLabel_Order_By = {
  bulkJobs_aggregate?: InputMaybe<Prompt_BulkJob_Aggregate_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.bulkJobProjectLabel */
export type Prompt_BulkJobProjectLabel_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "prompt.bulkJobProjectLabel" */
export const promptBulkJobProjectLabelSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Prompt_BulkJobProjectLabel_Select_Column =
  (typeof promptBulkJobProjectLabelSelectColumn)[keyof typeof promptBulkJobProjectLabelSelectColumn];
/** input type for updating data in table "prompt.bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "prompt_bulkJobProjectLabel" */
export type Prompt_BulkJobProjectLabel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_BulkJobProjectLabel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_BulkJobProjectLabel_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "prompt.bulkJobProjectLabel" */
export const promptBulkJobProjectLabelUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Prompt_BulkJobProjectLabel_Update_Column =
  (typeof promptBulkJobProjectLabelUpdateColumn)[keyof typeof promptBulkJobProjectLabelUpdateColumn];
export type Prompt_BulkJobProjectLabel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_BulkJobProjectLabel_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_BulkJobProjectLabel_Bool_Exp;
};

/** columns and relationships of "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus = {
  __typename?: 'prompt_bulkJobStatus';
  /** An array relationship */
  bulkJobs: Array<Prompt_BulkJob>;
  /** An aggregate relationship */
  bulkJobs_aggregate: Prompt_BulkJob_Aggregate;
  set: Scalars['String'];
};

/** columns and relationships of "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatusBulkJobsArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

/** columns and relationships of "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatusBulkJobs_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

/** aggregated selection of "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Aggregate = {
  __typename?: 'prompt_bulkJobStatus_aggregate';
  aggregate: Maybe<Prompt_BulkJobStatus_Aggregate_Fields>;
  nodes: Array<Prompt_BulkJobStatus>;
};

/** aggregate fields of "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Aggregate_Fields = {
  __typename?: 'prompt_bulkJobStatus_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Prompt_BulkJobStatus_Max_Fields>;
  min: Maybe<Prompt_BulkJobStatus_Min_Fields>;
};

/** aggregate fields of "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_BulkJobStatus_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "prompt.bulkJobStatus". All fields are combined with a logical 'AND'. */
export type Prompt_BulkJobStatus_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_BulkJobStatus_Bool_Exp>>;
  _not?: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_BulkJobStatus_Bool_Exp>>;
  bulkJobs?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  bulkJobs_aggregate?: InputMaybe<Prompt_BulkJob_Aggregate_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.bulkJobStatus" */
export const promptBulkJobStatusConstraint = {
  /** unique or primary key constraint on columns "set" */
  BulkJobStatusPkey: 'bulkJobStatus_pkey',
} as const;

export type Prompt_BulkJobStatus_Constraint =
  (typeof promptBulkJobStatusConstraint)[keyof typeof promptBulkJobStatusConstraint];
export const promptBulkJobStatusEnum = {
  Completed: 'completed',
  InProgress: 'in_progress',
  Queued: 'queued',
} as const;

export type Prompt_BulkJobStatus_Enum =
  (typeof promptBulkJobStatusEnum)[keyof typeof promptBulkJobStatusEnum];
/** Boolean expression to compare columns of type "prompt_bulkJobStatus_enum". All fields are combined with logical 'AND'. */
export type Prompt_BulkJobStatus_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Prompt_BulkJobStatus_Enum>;
  _in?: InputMaybe<Array<Prompt_BulkJobStatus_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Prompt_BulkJobStatus_Enum>;
  _nin?: InputMaybe<Array<Prompt_BulkJobStatus_Enum>>;
};

/** input type for inserting data into table "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Insert_Input = {
  bulkJobs?: InputMaybe<Prompt_BulkJob_Arr_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Prompt_BulkJobStatus_Max_Fields = {
  __typename?: 'prompt_bulkJobStatus_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Prompt_BulkJobStatus_Min_Fields = {
  __typename?: 'prompt_bulkJobStatus_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Mutation_Response = {
  __typename?: 'prompt_bulkJobStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_BulkJobStatus>;
};

/** input type for inserting object relation for remote table "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Obj_Rel_Insert_Input = {
  data: Prompt_BulkJobStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_BulkJobStatus_On_Conflict>;
};

/** on_conflict condition type for table "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_On_Conflict = {
  constraint: Prompt_BulkJobStatus_Constraint;
  update_columns: Array<Prompt_BulkJobStatus_Update_Column>;
  where?: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.bulkJobStatus". */
export type Prompt_BulkJobStatus_Order_By = {
  bulkJobs_aggregate?: InputMaybe<Prompt_BulkJob_Aggregate_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.bulkJobStatus */
export type Prompt_BulkJobStatus_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "prompt.bulkJobStatus" */
export const promptBulkJobStatusSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Prompt_BulkJobStatus_Select_Column =
  (typeof promptBulkJobStatusSelectColumn)[keyof typeof promptBulkJobStatusSelectColumn];
/** input type for updating data in table "prompt.bulkJobStatus" */
export type Prompt_BulkJobStatus_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "prompt_bulkJobStatus" */
export type Prompt_BulkJobStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_BulkJobStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_BulkJobStatus_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "prompt.bulkJobStatus" */
export const promptBulkJobStatusUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Prompt_BulkJobStatus_Update_Column =
  (typeof promptBulkJobStatusUpdateColumn)[keyof typeof promptBulkJobStatusUpdateColumn];
export type Prompt_BulkJobStatus_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_BulkJobStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_BulkJobStatus_Bool_Exp;
};

/** aggregated selection of "prompt.bulkJob" */
export type Prompt_BulkJob_Aggregate = {
  __typename?: 'prompt_bulkJob_aggregate';
  aggregate: Maybe<Prompt_BulkJob_Aggregate_Fields>;
  nodes: Array<Prompt_BulkJob>;
};

export type Prompt_BulkJob_Aggregate_Bool_Exp = {
  count?: InputMaybe<Prompt_BulkJob_Aggregate_Bool_Exp_Count>;
};

export type Prompt_BulkJob_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "prompt.bulkJob" */
export type Prompt_BulkJob_Aggregate_Fields = {
  __typename?: 'prompt_bulkJob_aggregate_fields';
  avg: Maybe<Prompt_BulkJob_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Prompt_BulkJob_Max_Fields>;
  min: Maybe<Prompt_BulkJob_Min_Fields>;
  stddev: Maybe<Prompt_BulkJob_Stddev_Fields>;
  stddev_pop: Maybe<Prompt_BulkJob_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Prompt_BulkJob_Stddev_Samp_Fields>;
  sum: Maybe<Prompt_BulkJob_Sum_Fields>;
  var_pop: Maybe<Prompt_BulkJob_Var_Pop_Fields>;
  var_samp: Maybe<Prompt_BulkJob_Var_Samp_Fields>;
  variance: Maybe<Prompt_BulkJob_Variance_Fields>;
};

/** aggregate fields of "prompt.bulkJob" */
export type Prompt_BulkJob_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "prompt.bulkJob" */
export type Prompt_BulkJob_Aggregate_Order_By = {
  avg?: InputMaybe<Prompt_BulkJob_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompt_BulkJob_Max_Order_By>;
  min?: InputMaybe<Prompt_BulkJob_Min_Order_By>;
  stddev?: InputMaybe<Prompt_BulkJob_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompt_BulkJob_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompt_BulkJob_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompt_BulkJob_Sum_Order_By>;
  var_pop?: InputMaybe<Prompt_BulkJob_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompt_BulkJob_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompt_BulkJob_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Prompt_BulkJob_Append_Input = {
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "prompt.bulkJob" */
export type Prompt_BulkJob_Arr_Rel_Insert_Input = {
  data: Array<Prompt_BulkJob_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_BulkJob_On_Conflict>;
};

/** aggregate avg on columns */
export type Prompt_BulkJob_Avg_Fields = {
  __typename?: 'prompt_bulkJob_avg_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompt.bulkJob". All fields are combined with a logical 'AND'. */
export type Prompt_BulkJob_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_BulkJob_Bool_Exp>>;
  _not?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_BulkJob_Bool_Exp>>;
  bulkJobProjectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
  bulkJobStatus?: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
  chatCompletionOptions?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  chatCompletionOptions_aggregate?: InputMaybe<Prompt_ChatCompletionOption_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deployedSchemaChunks?: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
  deployedSchemaChunks_aggregate?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Bool_Exp>;
  draftSchemaChunks?: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
  draftSchemaChunks_aggregate?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  meta?: InputMaybe<Jsonb_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  projectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Enum_Comparison_Exp>;
  status?: InputMaybe<Prompt_BulkJobStatus_Enum_Comparison_Exp>;
  totalCount?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.bulkJob" */
export const promptBulkJobConstraint = {
  /** unique or primary key constraint on columns "id" */
  BulkJobPkey: 'bulkJob_pkey',
} as const;

export type Prompt_BulkJob_Constraint =
  (typeof promptBulkJobConstraint)[keyof typeof promptBulkJobConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Prompt_BulkJob_Delete_At_Path_Input = {
  /** deprecated - use metadata */
  meta?: InputMaybe<Array<Scalars['String']>>;
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Prompt_BulkJob_Delete_Elem_Input = {
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['Int']>;
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Prompt_BulkJob_Delete_Key_Input = {
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['String']>;
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "prompt.bulkJob" */
export type Prompt_BulkJob_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  totalCount?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "prompt.bulkJob" */
export type Prompt_BulkJob_Insert_Input = {
  bulkJobProjectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Obj_Rel_Insert_Input>;
  bulkJobStatus?: InputMaybe<Prompt_BulkJobStatus_Obj_Rel_Insert_Input>;
  chatCompletionOptions?: InputMaybe<Prompt_ChatCompletionOption_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchemaChunks?: InputMaybe<GraphHub_DeployedSchemaChunk_Arr_Rel_Insert_Input>;
  draftSchemaChunks?: InputMaybe<GraphHub_DraftSchemaChunk_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  projectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Enum>;
  status?: InputMaybe<Prompt_BulkJobStatus_Enum>;
  totalCount?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Prompt_BulkJob_Max_Fields = {
  __typename?: 'prompt_bulkJob_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  totalCount: Maybe<Scalars['Int']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Prompt_BulkJob_Min_Fields = {
  __typename?: 'prompt_bulkJob_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  totalCount: Maybe<Scalars['Int']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prompt.bulkJob" */
export type Prompt_BulkJob_Mutation_Response = {
  __typename?: 'prompt_bulkJob_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_BulkJob>;
};

/** input type for inserting object relation for remote table "prompt.bulkJob" */
export type Prompt_BulkJob_Obj_Rel_Insert_Input = {
  data: Prompt_BulkJob_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_BulkJob_On_Conflict>;
};

/** on_conflict condition type for table "prompt.bulkJob" */
export type Prompt_BulkJob_On_Conflict = {
  constraint: Prompt_BulkJob_Constraint;
  update_columns: Array<Prompt_BulkJob_Update_Column>;
  where?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.bulkJob". */
export type Prompt_BulkJob_Order_By = {
  bulkJobProjectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Order_By>;
  bulkJobStatus?: InputMaybe<Prompt_BulkJobStatus_Order_By>;
  chatCompletionOptions_aggregate?: InputMaybe<Prompt_ChatCompletionOption_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchemaChunks_aggregate?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Order_By>;
  draftSchemaChunks_aggregate?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  meta?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  projectLabel?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.bulkJob */
export type Prompt_BulkJob_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Prompt_BulkJob_Prepend_Input = {
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "prompt.bulkJob" */
export const promptBulkJobSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Meta: 'meta',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  ProjectLabel: 'projectLabel',
  /** column name */
  Status: 'status',
  /** column name */
  TotalCount: 'totalCount',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_BulkJob_Select_Column =
  (typeof promptBulkJobSelectColumn)[keyof typeof promptBulkJobSelectColumn];
/** input type for updating data in table "prompt.bulkJob" */
export type Prompt_BulkJob_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  projectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Enum>;
  status?: InputMaybe<Prompt_BulkJobStatus_Enum>;
  totalCount?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Prompt_BulkJob_Stddev_Fields = {
  __typename?: 'prompt_bulkJob_stddev_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Prompt_BulkJob_Stddev_Pop_Fields = {
  __typename?: 'prompt_bulkJob_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Prompt_BulkJob_Stddev_Samp_Fields = {
  __typename?: 'prompt_bulkJob_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompt_bulkJob" */
export type Prompt_BulkJob_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_BulkJob_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_BulkJob_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  projectLabel?: InputMaybe<Prompt_BulkJobProjectLabel_Enum>;
  status?: InputMaybe<Prompt_BulkJobStatus_Enum>;
  totalCount?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Prompt_BulkJob_Sum_Fields = {
  __typename?: 'prompt_bulkJob_sum_fields';
  id: Maybe<Scalars['bigint']>;
  totalCount: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** update columns of table "prompt.bulkJob" */
export const promptBulkJobUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Meta: 'meta',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  ProjectLabel: 'projectLabel',
  /** column name */
  Status: 'status',
  /** column name */
  TotalCount: 'totalCount',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_BulkJob_Update_Column =
  (typeof promptBulkJobUpdateColumn)[keyof typeof promptBulkJobUpdateColumn];
export type Prompt_BulkJob_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Prompt_BulkJob_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Prompt_BulkJob_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Prompt_BulkJob_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Prompt_BulkJob_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Prompt_BulkJob_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Prompt_BulkJob_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_BulkJob_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_BulkJob_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_BulkJob_Var_Pop_Fields = {
  __typename?: 'prompt_bulkJob_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Prompt_BulkJob_Var_Samp_Fields = {
  __typename?: 'prompt_bulkJob_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Prompt_BulkJob_Variance_Fields = {
  __typename?: 'prompt_bulkJob_variance_fields';
  id: Maybe<Scalars['Float']>;
  totalCount: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "prompt.bulkJob" */
export type Prompt_BulkJob_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  totalCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "prompt.categoryCode" */
export type Prompt_CategoryCode = {
  __typename?: 'prompt_categoryCode';
  /** An array relationship */
  docsPageRatings: Array<Prompt_DocsPageRating>;
  /** An aggregate relationship */
  docsPageRatings_aggregate: Prompt_DocsPageRating_Aggregate;
  set: Scalars['String'];
};

/** columns and relationships of "prompt.categoryCode" */
export type Prompt_CategoryCodeDocsPageRatingsArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

/** columns and relationships of "prompt.categoryCode" */
export type Prompt_CategoryCodeDocsPageRatings_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

/** aggregated selection of "prompt.categoryCode" */
export type Prompt_CategoryCode_Aggregate = {
  __typename?: 'prompt_categoryCode_aggregate';
  aggregate: Maybe<Prompt_CategoryCode_Aggregate_Fields>;
  nodes: Array<Prompt_CategoryCode>;
};

/** aggregate fields of "prompt.categoryCode" */
export type Prompt_CategoryCode_Aggregate_Fields = {
  __typename?: 'prompt_categoryCode_aggregate_fields';
  count: Scalars['Int'];
  max: Maybe<Prompt_CategoryCode_Max_Fields>;
  min: Maybe<Prompt_CategoryCode_Min_Fields>;
};

/** aggregate fields of "prompt.categoryCode" */
export type Prompt_CategoryCode_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_CategoryCode_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "prompt.categoryCode". All fields are combined with a logical 'AND'. */
export type Prompt_CategoryCode_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_CategoryCode_Bool_Exp>>;
  _not?: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_CategoryCode_Bool_Exp>>;
  docsPageRatings?: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
  docsPageRatings_aggregate?: InputMaybe<Prompt_DocsPageRating_Aggregate_Bool_Exp>;
  set?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.categoryCode" */
export const promptCategoryCodeConstraint = {
  /** unique or primary key constraint on columns "set" */
  CategoryCodePkey: 'categoryCode_pkey',
} as const;

export type Prompt_CategoryCode_Constraint =
  (typeof promptCategoryCodeConstraint)[keyof typeof promptCategoryCodeConstraint];
export const promptCategoryCodeEnum = {
  SeoMetaDescription: 'seo_meta_description',
  SeoMetaTitle: 'seo_meta_title',
  SeoStructuredData: 'seo_structured_data',
  SeoSummary: 'seo_summary',
} as const;

export type Prompt_CategoryCode_Enum =
  (typeof promptCategoryCodeEnum)[keyof typeof promptCategoryCodeEnum];
/** Boolean expression to compare columns of type "prompt_categoryCode_enum". All fields are combined with logical 'AND'. */
export type Prompt_CategoryCode_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Prompt_CategoryCode_Enum>;
  _in?: InputMaybe<Array<Prompt_CategoryCode_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Prompt_CategoryCode_Enum>;
  _nin?: InputMaybe<Array<Prompt_CategoryCode_Enum>>;
};

/** input type for inserting data into table "prompt.categoryCode" */
export type Prompt_CategoryCode_Insert_Input = {
  docsPageRatings?: InputMaybe<Prompt_DocsPageRating_Arr_Rel_Insert_Input>;
  set?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Prompt_CategoryCode_Max_Fields = {
  __typename?: 'prompt_categoryCode_max_fields';
  set: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Prompt_CategoryCode_Min_Fields = {
  __typename?: 'prompt_categoryCode_min_fields';
  set: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "prompt.categoryCode" */
export type Prompt_CategoryCode_Mutation_Response = {
  __typename?: 'prompt_categoryCode_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_CategoryCode>;
};

/** input type for inserting object relation for remote table "prompt.categoryCode" */
export type Prompt_CategoryCode_Obj_Rel_Insert_Input = {
  data: Prompt_CategoryCode_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_CategoryCode_On_Conflict>;
};

/** on_conflict condition type for table "prompt.categoryCode" */
export type Prompt_CategoryCode_On_Conflict = {
  constraint: Prompt_CategoryCode_Constraint;
  update_columns: Array<Prompt_CategoryCode_Update_Column>;
  where?: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.categoryCode". */
export type Prompt_CategoryCode_Order_By = {
  docsPageRatings_aggregate?: InputMaybe<Prompt_DocsPageRating_Aggregate_Order_By>;
  set?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.categoryCode */
export type Prompt_CategoryCode_Pk_Columns_Input = {
  set: Scalars['String'];
};

/** select columns of table "prompt.categoryCode" */
export const promptCategoryCodeSelectColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Prompt_CategoryCode_Select_Column =
  (typeof promptCategoryCodeSelectColumn)[keyof typeof promptCategoryCodeSelectColumn];
/** input type for updating data in table "prompt.categoryCode" */
export type Prompt_CategoryCode_Set_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** Streaming cursor of the table "prompt_categoryCode" */
export type Prompt_CategoryCode_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_CategoryCode_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_CategoryCode_Stream_Cursor_Value_Input = {
  set?: InputMaybe<Scalars['String']>;
};

/** update columns of table "prompt.categoryCode" */
export const promptCategoryCodeUpdateColumn = {
  /** column name */
  Set: 'set',
} as const;

export type Prompt_CategoryCode_Update_Column =
  (typeof promptCategoryCodeUpdateColumn)[keyof typeof promptCategoryCodeUpdateColumn];
export type Prompt_CategoryCode_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_CategoryCode_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_CategoryCode_Bool_Exp;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption = {
  __typename?: 'prompt_chatCompletionOption';
  /** An object relationship */
  bulkJob: Maybe<Prompt_BulkJob>;
  bulkJobId: Maybe<Scalars['bigint']>;
  /** An object relationship */
  chatCompletionOptionError: Maybe<Prompt_ChatCompletionOptionError>;
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  deployedSchemaChunks: Array<GraphHub_DeployedSchemaChunk>;
  /** An aggregate relationship */
  deployedSchemaChunks_aggregate: GraphHub_DeployedSchemaChunk_Aggregate;
  /** An array relationship */
  docsPageRatings: Array<Prompt_DocsPageRating>;
  /** An aggregate relationship */
  docsPageRatings_aggregate: Prompt_DocsPageRating_Aggregate;
  /** An array relationship */
  draftSchemaChunks: Array<GraphHub_DraftSchemaChunk>;
  /** An aggregate relationship */
  draftSchemaChunks_aggregate: GraphHub_DraftSchemaChunk_Aggregate;
  environment: Maybe<Scalars['String']>;
  errorId: Maybe<Scalars['bigint']>;
  frequencyPenalty: Maybe<Scalars['numeric']>;
  id: Scalars['bigint'];
  logitBias: Maybe<Scalars['jsonb']>;
  maxTokens: Maybe<Scalars['Int']>;
  messages: Scalars['json'];
  /** deprecated - use metadata */
  meta: Maybe<Scalars['jsonb']>;
  metadata: Maybe<Scalars['jsonb']>;
  model: Scalars['String'];
  n: Maybe<Scalars['Int']>;
  presencePenalty: Maybe<Scalars['numeric']>;
  result: Maybe<Scalars['String']>;
  retries: Maybe<Scalars['Int']>;
  stop: Maybe<Scalars['json']>;
  temperature: Maybe<Scalars['numeric']>;
  tokensCompletion: Maybe<Scalars['Int']>;
  tokensPrompt: Maybe<Scalars['Int']>;
  tokensTotal: Maybe<Scalars['Int']>;
  topP: Maybe<Scalars['numeric']>;
  updatedAt: Scalars['timestamptz'];
  user: Scalars['String'];
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionDeployedSchemaChunksArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionDeployedSchemaChunks_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionDocsPageRatingsArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionDocsPageRatings_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionDraftSchemaChunksArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionDraftSchemaChunks_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionLogitBiasArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionMessagesArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionMetaArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOptionStopArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError = {
  __typename?: 'prompt_chatCompletionOptionError';
  /** An array relationship */
  chatCompletionOptions: Array<Prompt_ChatCompletionOption>;
  /** An aggregate relationship */
  chatCompletionOptions_aggregate: Prompt_ChatCompletionOption_Aggregate;
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  message: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionErrorChatCompletionOptionsArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

/** columns and relationships of "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionErrorChatCompletionOptions_AggregateArgs =
  {
    distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
    where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  };

/** aggregated selection of "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Aggregate = {
  __typename?: 'prompt_chatCompletionOptionError_aggregate';
  aggregate: Maybe<Prompt_ChatCompletionOptionError_Aggregate_Fields>;
  nodes: Array<Prompt_ChatCompletionOptionError>;
};

/** aggregate fields of "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Aggregate_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_aggregate_fields';
  avg: Maybe<Prompt_ChatCompletionOptionError_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Prompt_ChatCompletionOptionError_Max_Fields>;
  min: Maybe<Prompt_ChatCompletionOptionError_Min_Fields>;
  stddev: Maybe<Prompt_ChatCompletionOptionError_Stddev_Fields>;
  stddev_pop: Maybe<Prompt_ChatCompletionOptionError_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Prompt_ChatCompletionOptionError_Stddev_Samp_Fields>;
  sum: Maybe<Prompt_ChatCompletionOptionError_Sum_Fields>;
  var_pop: Maybe<Prompt_ChatCompletionOptionError_Var_Pop_Fields>;
  var_samp: Maybe<Prompt_ChatCompletionOptionError_Var_Samp_Fields>;
  variance: Maybe<Prompt_ChatCompletionOptionError_Variance_Fields>;
};

/** aggregate fields of "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_ChatCompletionOptionError_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Prompt_ChatCompletionOptionError_Avg_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_avg_fields';
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "prompt.chatCompletionOptionError". All fields are combined with a logical 'AND'. */
export type Prompt_ChatCompletionOptionError_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_ChatCompletionOptionError_Bool_Exp>>;
  _not?: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_ChatCompletionOptionError_Bool_Exp>>;
  chatCompletionOptions?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  chatCompletionOptions_aggregate?: InputMaybe<Prompt_ChatCompletionOption_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  message?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.chatCompletionOptionError" */
export const promptChatCompletionOptionErrorConstraint = {
  /** unique or primary key constraint on columns "id" */
  ChatCompletionOptionErrorPkey: 'chatCompletionOptionError_pkey',
} as const;

export type Prompt_ChatCompletionOptionError_Constraint =
  (typeof promptChatCompletionOptionErrorConstraint)[keyof typeof promptChatCompletionOptionErrorConstraint];
/** input type for incrementing numeric columns in table "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Insert_Input = {
  chatCompletionOptions?: InputMaybe<Prompt_ChatCompletionOption_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Prompt_ChatCompletionOptionError_Max_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  message: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Prompt_ChatCompletionOptionError_Min_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  message: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Mutation_Response = {
  __typename?: 'prompt_chatCompletionOptionError_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_ChatCompletionOptionError>;
};

/** input type for inserting object relation for remote table "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Obj_Rel_Insert_Input = {
  data: Prompt_ChatCompletionOptionError_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_ChatCompletionOptionError_On_Conflict>;
};

/** on_conflict condition type for table "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_On_Conflict = {
  constraint: Prompt_ChatCompletionOptionError_Constraint;
  update_columns: Array<Prompt_ChatCompletionOptionError_Update_Column>;
  where?: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.chatCompletionOptionError". */
export type Prompt_ChatCompletionOptionError_Order_By = {
  chatCompletionOptions_aggregate?: InputMaybe<Prompt_ChatCompletionOption_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.chatCompletionOptionError */
export type Prompt_ChatCompletionOptionError_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "prompt.chatCompletionOptionError" */
export const promptChatCompletionOptionErrorSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Message: 'message',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_ChatCompletionOptionError_Select_Column =
  (typeof promptChatCompletionOptionErrorSelectColumn)[keyof typeof promptChatCompletionOptionErrorSelectColumn];
/** input type for updating data in table "prompt.chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Prompt_ChatCompletionOptionError_Stddev_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_stddev_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Prompt_ChatCompletionOptionError_Stddev_Pop_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Prompt_ChatCompletionOptionError_Stddev_Samp_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "prompt_chatCompletionOptionError" */
export type Prompt_ChatCompletionOptionError_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_ChatCompletionOptionError_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_ChatCompletionOptionError_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  message?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Prompt_ChatCompletionOptionError_Sum_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_sum_fields';
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "prompt.chatCompletionOptionError" */
export const promptChatCompletionOptionErrorUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Message: 'message',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_ChatCompletionOptionError_Update_Column =
  (typeof promptChatCompletionOptionErrorUpdateColumn)[keyof typeof promptChatCompletionOptionErrorUpdateColumn];
export type Prompt_ChatCompletionOptionError_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Prompt_ChatCompletionOptionError_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_ChatCompletionOptionError_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_ChatCompletionOptionError_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_ChatCompletionOptionError_Var_Pop_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_var_pop_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Prompt_ChatCompletionOptionError_Var_Samp_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_var_samp_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Prompt_ChatCompletionOptionError_Variance_Fields = {
  __typename?: 'prompt_chatCompletionOptionError_variance_fields';
  id: Maybe<Scalars['Float']>;
};

/** aggregated selection of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Aggregate = {
  __typename?: 'prompt_chatCompletionOption_aggregate';
  aggregate: Maybe<Prompt_ChatCompletionOption_Aggregate_Fields>;
  nodes: Array<Prompt_ChatCompletionOption>;
};

export type Prompt_ChatCompletionOption_Aggregate_Bool_Exp = {
  count?: InputMaybe<Prompt_ChatCompletionOption_Aggregate_Bool_Exp_Count>;
};

export type Prompt_ChatCompletionOption_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Aggregate_Fields = {
  __typename?: 'prompt_chatCompletionOption_aggregate_fields';
  avg: Maybe<Prompt_ChatCompletionOption_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Prompt_ChatCompletionOption_Max_Fields>;
  min: Maybe<Prompt_ChatCompletionOption_Min_Fields>;
  stddev: Maybe<Prompt_ChatCompletionOption_Stddev_Fields>;
  stddev_pop: Maybe<Prompt_ChatCompletionOption_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Prompt_ChatCompletionOption_Stddev_Samp_Fields>;
  sum: Maybe<Prompt_ChatCompletionOption_Sum_Fields>;
  var_pop: Maybe<Prompt_ChatCompletionOption_Var_Pop_Fields>;
  var_samp: Maybe<Prompt_ChatCompletionOption_Var_Samp_Fields>;
  variance: Maybe<Prompt_ChatCompletionOption_Variance_Fields>;
};

/** aggregate fields of "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Aggregate_Order_By = {
  avg?: InputMaybe<Prompt_ChatCompletionOption_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompt_ChatCompletionOption_Max_Order_By>;
  min?: InputMaybe<Prompt_ChatCompletionOption_Min_Order_By>;
  stddev?: InputMaybe<Prompt_ChatCompletionOption_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompt_ChatCompletionOption_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompt_ChatCompletionOption_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompt_ChatCompletionOption_Sum_Order_By>;
  var_pop?: InputMaybe<Prompt_ChatCompletionOption_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompt_ChatCompletionOption_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompt_ChatCompletionOption_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Prompt_ChatCompletionOption_Append_Input = {
  logitBias?: InputMaybe<Scalars['jsonb']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Arr_Rel_Insert_Input = {
  data: Array<Prompt_ChatCompletionOption_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_ChatCompletionOption_On_Conflict>;
};

/** aggregate avg on columns */
export type Prompt_ChatCompletionOption_Avg_Fields = {
  __typename?: 'prompt_chatCompletionOption_avg_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Avg_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompt.chatCompletionOption". All fields are combined with a logical 'AND'. */
export type Prompt_ChatCompletionOption_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_ChatCompletionOption_Bool_Exp>>;
  _not?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_ChatCompletionOption_Bool_Exp>>;
  bulkJob?: InputMaybe<Prompt_BulkJob_Bool_Exp>;
  bulkJobId?: InputMaybe<Bigint_Comparison_Exp>;
  chatCompletionOptionError?: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deployedSchemaChunks?: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
  deployedSchemaChunks_aggregate?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Bool_Exp>;
  docsPageRatings?: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
  docsPageRatings_aggregate?: InputMaybe<Prompt_DocsPageRating_Aggregate_Bool_Exp>;
  draftSchemaChunks?: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
  draftSchemaChunks_aggregate?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Bool_Exp>;
  environment?: InputMaybe<String_Comparison_Exp>;
  errorId?: InputMaybe<Bigint_Comparison_Exp>;
  frequencyPenalty?: InputMaybe<Numeric_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  logitBias?: InputMaybe<Jsonb_Comparison_Exp>;
  maxTokens?: InputMaybe<Int_Comparison_Exp>;
  messages?: InputMaybe<Json_Comparison_Exp>;
  meta?: InputMaybe<Jsonb_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  model?: InputMaybe<String_Comparison_Exp>;
  n?: InputMaybe<Int_Comparison_Exp>;
  presencePenalty?: InputMaybe<Numeric_Comparison_Exp>;
  result?: InputMaybe<String_Comparison_Exp>;
  retries?: InputMaybe<Int_Comparison_Exp>;
  stop?: InputMaybe<Json_Comparison_Exp>;
  temperature?: InputMaybe<Numeric_Comparison_Exp>;
  tokensCompletion?: InputMaybe<Int_Comparison_Exp>;
  tokensPrompt?: InputMaybe<Int_Comparison_Exp>;
  tokensTotal?: InputMaybe<Int_Comparison_Exp>;
  topP?: InputMaybe<Numeric_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.chatCompletionOption" */
export const promptChatCompletionOptionConstraint = {
  /** unique or primary key constraint on columns "id" */
  ChatCompletionOptionPkey: 'chatCompletionOption_pkey',
} as const;

export type Prompt_ChatCompletionOption_Constraint =
  (typeof promptChatCompletionOptionConstraint)[keyof typeof promptChatCompletionOptionConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Prompt_ChatCompletionOption_Delete_At_Path_Input = {
  logitBias?: InputMaybe<Array<Scalars['String']>>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Array<Scalars['String']>>;
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Prompt_ChatCompletionOption_Delete_Elem_Input = {
  logitBias?: InputMaybe<Scalars['Int']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['Int']>;
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Prompt_ChatCompletionOption_Delete_Key_Input = {
  logitBias?: InputMaybe<Scalars['String']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['String']>;
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Inc_Input = {
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  errorId?: InputMaybe<Scalars['bigint']>;
  frequencyPenalty?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['bigint']>;
  maxTokens?: InputMaybe<Scalars['Int']>;
  n?: InputMaybe<Scalars['Int']>;
  presencePenalty?: InputMaybe<Scalars['numeric']>;
  retries?: InputMaybe<Scalars['Int']>;
  temperature?: InputMaybe<Scalars['numeric']>;
  tokensCompletion?: InputMaybe<Scalars['Int']>;
  tokensPrompt?: InputMaybe<Scalars['Int']>;
  tokensTotal?: InputMaybe<Scalars['Int']>;
  topP?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Insert_Input = {
  bulkJob?: InputMaybe<Prompt_BulkJob_Obj_Rel_Insert_Input>;
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  chatCompletionOptionError?: InputMaybe<Prompt_ChatCompletionOptionError_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  deployedSchemaChunks?: InputMaybe<GraphHub_DeployedSchemaChunk_Arr_Rel_Insert_Input>;
  docsPageRatings?: InputMaybe<Prompt_DocsPageRating_Arr_Rel_Insert_Input>;
  draftSchemaChunks?: InputMaybe<GraphHub_DraftSchemaChunk_Arr_Rel_Insert_Input>;
  environment?: InputMaybe<Scalars['String']>;
  errorId?: InputMaybe<Scalars['bigint']>;
  frequencyPenalty?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['bigint']>;
  logitBias?: InputMaybe<Scalars['jsonb']>;
  maxTokens?: InputMaybe<Scalars['Int']>;
  messages?: InputMaybe<Scalars['json']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  model?: InputMaybe<Scalars['String']>;
  n?: InputMaybe<Scalars['Int']>;
  presencePenalty?: InputMaybe<Scalars['numeric']>;
  result?: InputMaybe<Scalars['String']>;
  retries?: InputMaybe<Scalars['Int']>;
  stop?: InputMaybe<Scalars['json']>;
  temperature?: InputMaybe<Scalars['numeric']>;
  tokensCompletion?: InputMaybe<Scalars['Int']>;
  tokensPrompt?: InputMaybe<Scalars['Int']>;
  tokensTotal?: InputMaybe<Scalars['Int']>;
  topP?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Prompt_ChatCompletionOption_Max_Fields = {
  __typename?: 'prompt_chatCompletionOption_max_fields';
  bulkJobId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  environment: Maybe<Scalars['String']>;
  errorId: Maybe<Scalars['bigint']>;
  frequencyPenalty: Maybe<Scalars['numeric']>;
  id: Maybe<Scalars['bigint']>;
  maxTokens: Maybe<Scalars['Int']>;
  model: Maybe<Scalars['String']>;
  n: Maybe<Scalars['Int']>;
  presencePenalty: Maybe<Scalars['numeric']>;
  result: Maybe<Scalars['String']>;
  retries: Maybe<Scalars['Int']>;
  temperature: Maybe<Scalars['numeric']>;
  tokensCompletion: Maybe<Scalars['Int']>;
  tokensPrompt: Maybe<Scalars['Int']>;
  tokensTotal: Maybe<Scalars['Int']>;
  topP: Maybe<Scalars['numeric']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  user: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Max_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  environment?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  user?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Prompt_ChatCompletionOption_Min_Fields = {
  __typename?: 'prompt_chatCompletionOption_min_fields';
  bulkJobId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  environment: Maybe<Scalars['String']>;
  errorId: Maybe<Scalars['bigint']>;
  frequencyPenalty: Maybe<Scalars['numeric']>;
  id: Maybe<Scalars['bigint']>;
  maxTokens: Maybe<Scalars['Int']>;
  model: Maybe<Scalars['String']>;
  n: Maybe<Scalars['Int']>;
  presencePenalty: Maybe<Scalars['numeric']>;
  result: Maybe<Scalars['String']>;
  retries: Maybe<Scalars['Int']>;
  temperature: Maybe<Scalars['numeric']>;
  tokensCompletion: Maybe<Scalars['Int']>;
  tokensPrompt: Maybe<Scalars['Int']>;
  tokensTotal: Maybe<Scalars['Int']>;
  topP: Maybe<Scalars['numeric']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  user: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Min_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  environment?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  user?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Mutation_Response = {
  __typename?: 'prompt_chatCompletionOption_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_ChatCompletionOption>;
};

/** input type for inserting object relation for remote table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Obj_Rel_Insert_Input = {
  data: Prompt_ChatCompletionOption_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_ChatCompletionOption_On_Conflict>;
};

/** on_conflict condition type for table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_On_Conflict = {
  constraint: Prompt_ChatCompletionOption_Constraint;
  update_columns: Array<Prompt_ChatCompletionOption_Update_Column>;
  where?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.chatCompletionOption". */
export type Prompt_ChatCompletionOption_Order_By = {
  bulkJob?: InputMaybe<Prompt_BulkJob_Order_By>;
  bulkJobId?: InputMaybe<Order_By>;
  chatCompletionOptionError?: InputMaybe<Prompt_ChatCompletionOptionError_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deployedSchemaChunks_aggregate?: InputMaybe<GraphHub_DeployedSchemaChunk_Aggregate_Order_By>;
  docsPageRatings_aggregate?: InputMaybe<Prompt_DocsPageRating_Aggregate_Order_By>;
  draftSchemaChunks_aggregate?: InputMaybe<GraphHub_DraftSchemaChunk_Aggregate_Order_By>;
  environment?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  logitBias?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  messages?: InputMaybe<Order_By>;
  meta?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  stop?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  user?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.chatCompletionOption */
export type Prompt_ChatCompletionOption_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Prompt_ChatCompletionOption_Prepend_Input = {
  logitBias?: InputMaybe<Scalars['jsonb']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "prompt.chatCompletionOption" */
export const promptChatCompletionOptionSelectColumn = {
  /** column name */
  BulkJobId: 'bulkJobId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Environment: 'environment',
  /** column name */
  ErrorId: 'errorId',
  /** column name */
  FrequencyPenalty: 'frequencyPenalty',
  /** column name */
  Id: 'id',
  /** column name */
  LogitBias: 'logitBias',
  /** column name */
  MaxTokens: 'maxTokens',
  /** column name */
  Messages: 'messages',
  /** column name */
  Meta: 'meta',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  Model: 'model',
  /** column name */
  N: 'n',
  /** column name */
  PresencePenalty: 'presencePenalty',
  /** column name */
  Result: 'result',
  /** column name */
  Retries: 'retries',
  /** column name */
  Stop: 'stop',
  /** column name */
  Temperature: 'temperature',
  /** column name */
  TokensCompletion: 'tokensCompletion',
  /** column name */
  TokensPrompt: 'tokensPrompt',
  /** column name */
  TokensTotal: 'tokensTotal',
  /** column name */
  TopP: 'topP',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  User: 'user',
} as const;

export type Prompt_ChatCompletionOption_Select_Column =
  (typeof promptChatCompletionOptionSelectColumn)[keyof typeof promptChatCompletionOptionSelectColumn];
/** input type for updating data in table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Set_Input = {
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  environment?: InputMaybe<Scalars['String']>;
  errorId?: InputMaybe<Scalars['bigint']>;
  frequencyPenalty?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['bigint']>;
  logitBias?: InputMaybe<Scalars['jsonb']>;
  maxTokens?: InputMaybe<Scalars['Int']>;
  messages?: InputMaybe<Scalars['json']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  model?: InputMaybe<Scalars['String']>;
  n?: InputMaybe<Scalars['Int']>;
  presencePenalty?: InputMaybe<Scalars['numeric']>;
  result?: InputMaybe<Scalars['String']>;
  retries?: InputMaybe<Scalars['Int']>;
  stop?: InputMaybe<Scalars['json']>;
  temperature?: InputMaybe<Scalars['numeric']>;
  tokensCompletion?: InputMaybe<Scalars['Int']>;
  tokensPrompt?: InputMaybe<Scalars['Int']>;
  tokensTotal?: InputMaybe<Scalars['Int']>;
  topP?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Prompt_ChatCompletionOption_Stddev_Fields = {
  __typename?: 'prompt_chatCompletionOption_stddev_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Stddev_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Prompt_ChatCompletionOption_Stddev_Pop_Fields = {
  __typename?: 'prompt_chatCompletionOption_stddev_pop_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Stddev_Pop_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Prompt_ChatCompletionOption_Stddev_Samp_Fields = {
  __typename?: 'prompt_chatCompletionOption_stddev_samp_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Stddev_Samp_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompt_chatCompletionOption" */
export type Prompt_ChatCompletionOption_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_ChatCompletionOption_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_ChatCompletionOption_Stream_Cursor_Value_Input = {
  bulkJobId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  environment?: InputMaybe<Scalars['String']>;
  errorId?: InputMaybe<Scalars['bigint']>;
  frequencyPenalty?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['bigint']>;
  logitBias?: InputMaybe<Scalars['jsonb']>;
  maxTokens?: InputMaybe<Scalars['Int']>;
  messages?: InputMaybe<Scalars['json']>;
  /** deprecated - use metadata */
  meta?: InputMaybe<Scalars['jsonb']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  model?: InputMaybe<Scalars['String']>;
  n?: InputMaybe<Scalars['Int']>;
  presencePenalty?: InputMaybe<Scalars['numeric']>;
  result?: InputMaybe<Scalars['String']>;
  retries?: InputMaybe<Scalars['Int']>;
  stop?: InputMaybe<Scalars['json']>;
  temperature?: InputMaybe<Scalars['numeric']>;
  tokensCompletion?: InputMaybe<Scalars['Int']>;
  tokensPrompt?: InputMaybe<Scalars['Int']>;
  tokensTotal?: InputMaybe<Scalars['Int']>;
  topP?: InputMaybe<Scalars['numeric']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Prompt_ChatCompletionOption_Sum_Fields = {
  __typename?: 'prompt_chatCompletionOption_sum_fields';
  bulkJobId: Maybe<Scalars['bigint']>;
  errorId: Maybe<Scalars['bigint']>;
  frequencyPenalty: Maybe<Scalars['numeric']>;
  id: Maybe<Scalars['bigint']>;
  maxTokens: Maybe<Scalars['Int']>;
  n: Maybe<Scalars['Int']>;
  presencePenalty: Maybe<Scalars['numeric']>;
  retries: Maybe<Scalars['Int']>;
  temperature: Maybe<Scalars['numeric']>;
  tokensCompletion: Maybe<Scalars['Int']>;
  tokensPrompt: Maybe<Scalars['Int']>;
  tokensTotal: Maybe<Scalars['Int']>;
  topP: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Sum_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** update columns of table "prompt.chatCompletionOption" */
export const promptChatCompletionOptionUpdateColumn = {
  /** column name */
  BulkJobId: 'bulkJobId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Environment: 'environment',
  /** column name */
  ErrorId: 'errorId',
  /** column name */
  FrequencyPenalty: 'frequencyPenalty',
  /** column name */
  Id: 'id',
  /** column name */
  LogitBias: 'logitBias',
  /** column name */
  MaxTokens: 'maxTokens',
  /** column name */
  Messages: 'messages',
  /** column name */
  Meta: 'meta',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  Model: 'model',
  /** column name */
  N: 'n',
  /** column name */
  PresencePenalty: 'presencePenalty',
  /** column name */
  Result: 'result',
  /** column name */
  Retries: 'retries',
  /** column name */
  Stop: 'stop',
  /** column name */
  Temperature: 'temperature',
  /** column name */
  TokensCompletion: 'tokensCompletion',
  /** column name */
  TokensPrompt: 'tokensPrompt',
  /** column name */
  TokensTotal: 'tokensTotal',
  /** column name */
  TopP: 'topP',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  User: 'user',
} as const;

export type Prompt_ChatCompletionOption_Update_Column =
  (typeof promptChatCompletionOptionUpdateColumn)[keyof typeof promptChatCompletionOptionUpdateColumn];
export type Prompt_ChatCompletionOption_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Prompt_ChatCompletionOption_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Prompt_ChatCompletionOption_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Prompt_ChatCompletionOption_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Prompt_ChatCompletionOption_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Prompt_ChatCompletionOption_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Prompt_ChatCompletionOption_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_ChatCompletionOption_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_ChatCompletionOption_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_ChatCompletionOption_Var_Pop_Fields = {
  __typename?: 'prompt_chatCompletionOption_var_pop_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Var_Pop_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Prompt_ChatCompletionOption_Var_Samp_Fields = {
  __typename?: 'prompt_chatCompletionOption_var_samp_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Var_Samp_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Prompt_ChatCompletionOption_Variance_Fields = {
  __typename?: 'prompt_chatCompletionOption_variance_fields';
  bulkJobId: Maybe<Scalars['Float']>;
  errorId: Maybe<Scalars['Float']>;
  frequencyPenalty: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  maxTokens: Maybe<Scalars['Float']>;
  n: Maybe<Scalars['Float']>;
  presencePenalty: Maybe<Scalars['Float']>;
  retries: Maybe<Scalars['Float']>;
  temperature: Maybe<Scalars['Float']>;
  tokensCompletion: Maybe<Scalars['Float']>;
  tokensPrompt: Maybe<Scalars['Float']>;
  tokensTotal: Maybe<Scalars['Float']>;
  topP: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "prompt.chatCompletionOption" */
export type Prompt_ChatCompletionOption_Variance_Order_By = {
  bulkJobId?: InputMaybe<Order_By>;
  errorId?: InputMaybe<Order_By>;
  frequencyPenalty?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxTokens?: InputMaybe<Order_By>;
  n?: InputMaybe<Order_By>;
  presencePenalty?: InputMaybe<Order_By>;
  retries?: InputMaybe<Order_By>;
  temperature?: InputMaybe<Order_By>;
  tokensCompletion?: InputMaybe<Order_By>;
  tokensPrompt?: InputMaybe<Order_By>;
  tokensTotal?: InputMaybe<Order_By>;
  topP?: InputMaybe<Order_By>;
};

/** columns and relationships of "prompt.chatDocument" */
export type Prompt_ChatDocument = {
  __typename?: 'prompt_chatDocument';
  /** An object relationship */
  chatDocumentGroup: Prompt_ChatDocumentGroup;
  chatDocumentGroupId: Scalars['bigint'];
  confidenceScore: Maybe<Scalars['numeric']>;
  /** deprecated */
  content: Maybe<Scalars['String']>;
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  metadata: Maybe<Scalars['jsonb']>;
  pageContent: Scalars['String'];
  src: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "prompt.chatDocument" */
export type Prompt_ChatDocumentMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup = {
  __typename?: 'prompt_chatDocumentGroup';
  /** An object relationship */
  chatCompletionOption: Maybe<Prompt_ChatCompletionOption>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  /** An array relationship */
  chatDocuments: Array<Prompt_ChatDocument>;
  /** An aggregate relationship */
  chatDocuments_aggregate: Prompt_ChatDocument_Aggregate;
  createdAt: Scalars['timestamp'];
  id: Scalars['bigint'];
  question: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroupChatDocumentsArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocument_Order_By>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

/** columns and relationships of "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroupChatDocuments_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocument_Order_By>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

/** aggregated selection of "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Aggregate = {
  __typename?: 'prompt_chatDocumentGroup_aggregate';
  aggregate: Maybe<Prompt_ChatDocumentGroup_Aggregate_Fields>;
  nodes: Array<Prompt_ChatDocumentGroup>;
};

/** aggregate fields of "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Aggregate_Fields = {
  __typename?: 'prompt_chatDocumentGroup_aggregate_fields';
  avg: Maybe<Prompt_ChatDocumentGroup_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Prompt_ChatDocumentGroup_Max_Fields>;
  min: Maybe<Prompt_ChatDocumentGroup_Min_Fields>;
  stddev: Maybe<Prompt_ChatDocumentGroup_Stddev_Fields>;
  stddev_pop: Maybe<Prompt_ChatDocumentGroup_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Prompt_ChatDocumentGroup_Stddev_Samp_Fields>;
  sum: Maybe<Prompt_ChatDocumentGroup_Sum_Fields>;
  var_pop: Maybe<Prompt_ChatDocumentGroup_Var_Pop_Fields>;
  var_samp: Maybe<Prompt_ChatDocumentGroup_Var_Samp_Fields>;
  variance: Maybe<Prompt_ChatDocumentGroup_Variance_Fields>;
};

/** aggregate fields of "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_ChatDocumentGroup_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Prompt_ChatDocumentGroup_Avg_Fields = {
  __typename?: 'prompt_chatDocumentGroup_avg_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "prompt.chatDocumentGroup". All fields are combined with a logical 'AND'. */
export type Prompt_ChatDocumentGroup_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_ChatDocumentGroup_Bool_Exp>>;
  _not?: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_ChatDocumentGroup_Bool_Exp>>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  chatCompletionOptionId?: InputMaybe<Bigint_Comparison_Exp>;
  chatDocuments?: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
  chatDocuments_aggregate?: InputMaybe<Prompt_ChatDocument_Aggregate_Bool_Exp>;
  createdAt?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  question?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.chatDocumentGroup" */
export const promptChatDocumentGroupConstraint = {
  /** unique or primary key constraint on columns "id" */
  ChatDocumentGroupPkey: 'chatDocumentGroup_pkey',
} as const;

export type Prompt_ChatDocumentGroup_Constraint =
  (typeof promptChatDocumentGroupConstraint)[keyof typeof promptChatDocumentGroupConstraint];
/** input type for incrementing numeric columns in table "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Inc_Input = {
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Insert_Input = {
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Obj_Rel_Insert_Input>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  chatDocuments?: InputMaybe<Prompt_ChatDocument_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamp']>;
  id?: InputMaybe<Scalars['bigint']>;
  question?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Prompt_ChatDocumentGroup_Max_Fields = {
  __typename?: 'prompt_chatDocumentGroup_max_fields';
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamp']>;
  id: Maybe<Scalars['bigint']>;
  question: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Prompt_ChatDocumentGroup_Min_Fields = {
  __typename?: 'prompt_chatDocumentGroup_min_fields';
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamp']>;
  id: Maybe<Scalars['bigint']>;
  question: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Mutation_Response = {
  __typename?: 'prompt_chatDocumentGroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_ChatDocumentGroup>;
};

/** input type for inserting object relation for remote table "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Obj_Rel_Insert_Input = {
  data: Prompt_ChatDocumentGroup_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_ChatDocumentGroup_On_Conflict>;
};

/** on_conflict condition type for table "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_On_Conflict = {
  constraint: Prompt_ChatDocumentGroup_Constraint;
  update_columns: Array<Prompt_ChatDocumentGroup_Update_Column>;
  where?: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.chatDocumentGroup". */
export type Prompt_ChatDocumentGroup_Order_By = {
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  chatDocuments_aggregate?: InputMaybe<Prompt_ChatDocument_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  question?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.chatDocumentGroup */
export type Prompt_ChatDocumentGroup_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "prompt.chatDocumentGroup" */
export const promptChatDocumentGroupSelectColumn = {
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Question: 'question',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_ChatDocumentGroup_Select_Column =
  (typeof promptChatDocumentGroupSelectColumn)[keyof typeof promptChatDocumentGroupSelectColumn];
/** input type for updating data in table "prompt.chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Set_Input = {
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamp']>;
  id?: InputMaybe<Scalars['bigint']>;
  question?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Prompt_ChatDocumentGroup_Stddev_Fields = {
  __typename?: 'prompt_chatDocumentGroup_stddev_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Prompt_ChatDocumentGroup_Stddev_Pop_Fields = {
  __typename?: 'prompt_chatDocumentGroup_stddev_pop_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Prompt_ChatDocumentGroup_Stddev_Samp_Fields = {
  __typename?: 'prompt_chatDocumentGroup_stddev_samp_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "prompt_chatDocumentGroup" */
export type Prompt_ChatDocumentGroup_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_ChatDocumentGroup_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_ChatDocumentGroup_Stream_Cursor_Value_Input = {
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamp']>;
  id?: InputMaybe<Scalars['bigint']>;
  question?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Prompt_ChatDocumentGroup_Sum_Fields = {
  __typename?: 'prompt_chatDocumentGroup_sum_fields';
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
};

/** update columns of table "prompt.chatDocumentGroup" */
export const promptChatDocumentGroupUpdateColumn = {
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Question: 'question',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_ChatDocumentGroup_Update_Column =
  (typeof promptChatDocumentGroupUpdateColumn)[keyof typeof promptChatDocumentGroupUpdateColumn];
export type Prompt_ChatDocumentGroup_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Prompt_ChatDocumentGroup_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_ChatDocumentGroup_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_ChatDocumentGroup_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_ChatDocumentGroup_Var_Pop_Fields = {
  __typename?: 'prompt_chatDocumentGroup_var_pop_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Prompt_ChatDocumentGroup_Var_Samp_Fields = {
  __typename?: 'prompt_chatDocumentGroup_var_samp_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Prompt_ChatDocumentGroup_Variance_Fields = {
  __typename?: 'prompt_chatDocumentGroup_variance_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** aggregated selection of "prompt.chatDocument" */
export type Prompt_ChatDocument_Aggregate = {
  __typename?: 'prompt_chatDocument_aggregate';
  aggregate: Maybe<Prompt_ChatDocument_Aggregate_Fields>;
  nodes: Array<Prompt_ChatDocument>;
};

export type Prompt_ChatDocument_Aggregate_Bool_Exp = {
  count?: InputMaybe<Prompt_ChatDocument_Aggregate_Bool_Exp_Count>;
};

export type Prompt_ChatDocument_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "prompt.chatDocument" */
export type Prompt_ChatDocument_Aggregate_Fields = {
  __typename?: 'prompt_chatDocument_aggregate_fields';
  avg: Maybe<Prompt_ChatDocument_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Prompt_ChatDocument_Max_Fields>;
  min: Maybe<Prompt_ChatDocument_Min_Fields>;
  stddev: Maybe<Prompt_ChatDocument_Stddev_Fields>;
  stddev_pop: Maybe<Prompt_ChatDocument_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Prompt_ChatDocument_Stddev_Samp_Fields>;
  sum: Maybe<Prompt_ChatDocument_Sum_Fields>;
  var_pop: Maybe<Prompt_ChatDocument_Var_Pop_Fields>;
  var_samp: Maybe<Prompt_ChatDocument_Var_Samp_Fields>;
  variance: Maybe<Prompt_ChatDocument_Variance_Fields>;
};

/** aggregate fields of "prompt.chatDocument" */
export type Prompt_ChatDocument_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Aggregate_Order_By = {
  avg?: InputMaybe<Prompt_ChatDocument_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompt_ChatDocument_Max_Order_By>;
  min?: InputMaybe<Prompt_ChatDocument_Min_Order_By>;
  stddev?: InputMaybe<Prompt_ChatDocument_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompt_ChatDocument_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompt_ChatDocument_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompt_ChatDocument_Sum_Order_By>;
  var_pop?: InputMaybe<Prompt_ChatDocument_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompt_ChatDocument_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompt_ChatDocument_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Prompt_ChatDocument_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "prompt.chatDocument" */
export type Prompt_ChatDocument_Arr_Rel_Insert_Input = {
  data: Array<Prompt_ChatDocument_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_ChatDocument_On_Conflict>;
};

/** aggregate avg on columns */
export type Prompt_ChatDocument_Avg_Fields = {
  __typename?: 'prompt_chatDocument_avg_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Avg_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompt.chatDocument". All fields are combined with a logical 'AND'. */
export type Prompt_ChatDocument_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_ChatDocument_Bool_Exp>>;
  _not?: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_ChatDocument_Bool_Exp>>;
  chatDocumentGroup?: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
  chatDocumentGroupId?: InputMaybe<Bigint_Comparison_Exp>;
  confidenceScore?: InputMaybe<Numeric_Comparison_Exp>;
  content?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  pageContent?: InputMaybe<String_Comparison_Exp>;
  src?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.chatDocument" */
export const promptChatDocumentConstraint = {
  /** unique or primary key constraint on columns "id" */
  ChatDocumentPkey: 'chatDocument_pkey',
} as const;

export type Prompt_ChatDocument_Constraint =
  (typeof promptChatDocumentConstraint)[keyof typeof promptChatDocumentConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Prompt_ChatDocument_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Prompt_ChatDocument_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Prompt_ChatDocument_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "prompt.chatDocument" */
export type Prompt_ChatDocument_Inc_Input = {
  chatDocumentGroupId?: InputMaybe<Scalars['bigint']>;
  confidenceScore?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "prompt.chatDocument" */
export type Prompt_ChatDocument_Insert_Input = {
  chatDocumentGroup?: InputMaybe<Prompt_ChatDocumentGroup_Obj_Rel_Insert_Input>;
  chatDocumentGroupId?: InputMaybe<Scalars['bigint']>;
  confidenceScore?: InputMaybe<Scalars['numeric']>;
  /** deprecated */
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Prompt_ChatDocument_Max_Fields = {
  __typename?: 'prompt_chatDocument_max_fields';
  chatDocumentGroupId: Maybe<Scalars['bigint']>;
  confidenceScore: Maybe<Scalars['numeric']>;
  /** deprecated */
  content: Maybe<Scalars['String']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  src: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Max_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  /** deprecated */
  content?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  src?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Prompt_ChatDocument_Min_Fields = {
  __typename?: 'prompt_chatDocument_min_fields';
  chatDocumentGroupId: Maybe<Scalars['bigint']>;
  confidenceScore: Maybe<Scalars['numeric']>;
  /** deprecated */
  content: Maybe<Scalars['String']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  pageContent: Maybe<Scalars['String']>;
  src: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Min_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  /** deprecated */
  content?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  src?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prompt.chatDocument" */
export type Prompt_ChatDocument_Mutation_Response = {
  __typename?: 'prompt_chatDocument_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_ChatDocument>;
};

/** on_conflict condition type for table "prompt.chatDocument" */
export type Prompt_ChatDocument_On_Conflict = {
  constraint: Prompt_ChatDocument_Constraint;
  update_columns: Array<Prompt_ChatDocument_Update_Column>;
  where?: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.chatDocument". */
export type Prompt_ChatDocument_Order_By = {
  chatDocumentGroup?: InputMaybe<Prompt_ChatDocumentGroup_Order_By>;
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  content?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  pageContent?: InputMaybe<Order_By>;
  src?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.chatDocument */
export type Prompt_ChatDocument_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Prompt_ChatDocument_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "prompt.chatDocument" */
export const promptChatDocumentSelectColumn = {
  /** column name */
  ChatDocumentGroupId: 'chatDocumentGroupId',
  /** column name */
  ConfidenceScore: 'confidenceScore',
  /** column name */
  Content: 'content',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Src: 'src',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_ChatDocument_Select_Column =
  (typeof promptChatDocumentSelectColumn)[keyof typeof promptChatDocumentSelectColumn];
/** input type for updating data in table "prompt.chatDocument" */
export type Prompt_ChatDocument_Set_Input = {
  chatDocumentGroupId?: InputMaybe<Scalars['bigint']>;
  confidenceScore?: InputMaybe<Scalars['numeric']>;
  /** deprecated */
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Prompt_ChatDocument_Stddev_Fields = {
  __typename?: 'prompt_chatDocument_stddev_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Stddev_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Prompt_ChatDocument_Stddev_Pop_Fields = {
  __typename?: 'prompt_chatDocument_stddev_pop_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Stddev_Pop_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Prompt_ChatDocument_Stddev_Samp_Fields = {
  __typename?: 'prompt_chatDocument_stddev_samp_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Stddev_Samp_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompt_chatDocument" */
export type Prompt_ChatDocument_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_ChatDocument_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_ChatDocument_Stream_Cursor_Value_Input = {
  chatDocumentGroupId?: InputMaybe<Scalars['bigint']>;
  confidenceScore?: InputMaybe<Scalars['numeric']>;
  /** deprecated */
  content?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  pageContent?: InputMaybe<Scalars['String']>;
  src?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate sum on columns */
export type Prompt_ChatDocument_Sum_Fields = {
  __typename?: 'prompt_chatDocument_sum_fields';
  chatDocumentGroupId: Maybe<Scalars['bigint']>;
  confidenceScore: Maybe<Scalars['numeric']>;
  id: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Sum_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "prompt.chatDocument" */
export const promptChatDocumentUpdateColumn = {
  /** column name */
  ChatDocumentGroupId: 'chatDocumentGroupId',
  /** column name */
  ConfidenceScore: 'confidenceScore',
  /** column name */
  Content: 'content',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  PageContent: 'pageContent',
  /** column name */
  Src: 'src',
  /** column name */
  UpdatedAt: 'updatedAt',
} as const;

export type Prompt_ChatDocument_Update_Column =
  (typeof promptChatDocumentUpdateColumn)[keyof typeof promptChatDocumentUpdateColumn];
export type Prompt_ChatDocument_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Prompt_ChatDocument_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Prompt_ChatDocument_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Prompt_ChatDocument_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Prompt_ChatDocument_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Prompt_ChatDocument_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Prompt_ChatDocument_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_ChatDocument_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_ChatDocument_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_ChatDocument_Var_Pop_Fields = {
  __typename?: 'prompt_chatDocument_var_pop_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Var_Pop_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Prompt_ChatDocument_Var_Samp_Fields = {
  __typename?: 'prompt_chatDocument_var_samp_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Var_Samp_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Prompt_ChatDocument_Variance_Fields = {
  __typename?: 'prompt_chatDocument_variance_fields';
  chatDocumentGroupId: Maybe<Scalars['Float']>;
  confidenceScore: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "prompt.chatDocument" */
export type Prompt_ChatDocument_Variance_Order_By = {
  chatDocumentGroupId?: InputMaybe<Order_By>;
  confidenceScore?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** This table is used for QA for our chatCompletionOption. You can rate the result. */
export type Prompt_DocsPageRating = {
  __typename?: 'prompt_docsPageRating';
  categoryCode: Prompt_CategoryCode_Enum;
  /** An object relationship */
  categoryCodeByCategorycode: Prompt_CategoryCode;
  /** An object relationship */
  chatCompletionOption: Maybe<Prompt_ChatCompletionOption>;
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Scalars['timestamptz'];
  id: Scalars['bigint'];
  rating: Scalars['Int'];
  slug: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
};

/** aggregated selection of "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Aggregate = {
  __typename?: 'prompt_docsPageRating_aggregate';
  aggregate: Maybe<Prompt_DocsPageRating_Aggregate_Fields>;
  nodes: Array<Prompt_DocsPageRating>;
};

export type Prompt_DocsPageRating_Aggregate_Bool_Exp = {
  count?: InputMaybe<Prompt_DocsPageRating_Aggregate_Bool_Exp_Count>;
};

export type Prompt_DocsPageRating_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Aggregate_Fields = {
  __typename?: 'prompt_docsPageRating_aggregate_fields';
  avg: Maybe<Prompt_DocsPageRating_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Prompt_DocsPageRating_Max_Fields>;
  min: Maybe<Prompt_DocsPageRating_Min_Fields>;
  stddev: Maybe<Prompt_DocsPageRating_Stddev_Fields>;
  stddev_pop: Maybe<Prompt_DocsPageRating_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Prompt_DocsPageRating_Stddev_Samp_Fields>;
  sum: Maybe<Prompt_DocsPageRating_Sum_Fields>;
  var_pop: Maybe<Prompt_DocsPageRating_Var_Pop_Fields>;
  var_samp: Maybe<Prompt_DocsPageRating_Var_Samp_Fields>;
  variance: Maybe<Prompt_DocsPageRating_Variance_Fields>;
};

/** aggregate fields of "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Aggregate_Order_By = {
  avg?: InputMaybe<Prompt_DocsPageRating_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Prompt_DocsPageRating_Max_Order_By>;
  min?: InputMaybe<Prompt_DocsPageRating_Min_Order_By>;
  stddev?: InputMaybe<Prompt_DocsPageRating_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Prompt_DocsPageRating_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Prompt_DocsPageRating_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Prompt_DocsPageRating_Sum_Order_By>;
  var_pop?: InputMaybe<Prompt_DocsPageRating_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Prompt_DocsPageRating_Var_Samp_Order_By>;
  variance?: InputMaybe<Prompt_DocsPageRating_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Arr_Rel_Insert_Input = {
  data: Array<Prompt_DocsPageRating_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Prompt_DocsPageRating_On_Conflict>;
};

/** aggregate avg on columns */
export type Prompt_DocsPageRating_Avg_Fields = {
  __typename?: 'prompt_docsPageRating_avg_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Avg_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "prompt.docsPageRating". All fields are combined with a logical 'AND'. */
export type Prompt_DocsPageRating_Bool_Exp = {
  _and?: InputMaybe<Array<Prompt_DocsPageRating_Bool_Exp>>;
  _not?: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
  _or?: InputMaybe<Array<Prompt_DocsPageRating_Bool_Exp>>;
  categoryCode?: InputMaybe<Prompt_CategoryCode_Enum_Comparison_Exp>;
  categoryCodeByCategorycode?: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
  chatCompletionOptionId?: InputMaybe<Bigint_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  rating?: InputMaybe<Int_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "prompt.docsPageRating" */
export const promptDocsPageRatingConstraint = {
  /** unique or primary key constraint on columns "id" */
  ResultPkey: 'result_pkey',
} as const;

export type Prompt_DocsPageRating_Constraint =
  (typeof promptDocsPageRatingConstraint)[keyof typeof promptDocsPageRatingConstraint];
/** input type for incrementing numeric columns in table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Inc_Input = {
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  id?: InputMaybe<Scalars['bigint']>;
  rating?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Insert_Input = {
  categoryCode?: InputMaybe<Prompt_CategoryCode_Enum>;
  categoryCodeByCategorycode?: InputMaybe<Prompt_CategoryCode_Obj_Rel_Insert_Input>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Obj_Rel_Insert_Input>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  rating?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Prompt_DocsPageRating_Max_Fields = {
  __typename?: 'prompt_docsPageRating_max_fields';
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  rating: Maybe<Scalars['Int']>;
  slug: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Max_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Prompt_DocsPageRating_Min_Fields = {
  __typename?: 'prompt_docsPageRating_min_fields';
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  rating: Maybe<Scalars['Int']>;
  slug: Maybe<Scalars['String']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Min_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Mutation_Response = {
  __typename?: 'prompt_docsPageRating_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prompt_DocsPageRating>;
};

/** on_conflict condition type for table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_On_Conflict = {
  constraint: Prompt_DocsPageRating_Constraint;
  update_columns: Array<Prompt_DocsPageRating_Update_Column>;
  where?: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

/** Ordering options when selecting data from "prompt.docsPageRating". */
export type Prompt_DocsPageRating_Order_By = {
  categoryCode?: InputMaybe<Order_By>;
  categoryCodeByCategorycode?: InputMaybe<Prompt_CategoryCode_Order_By>;
  chatCompletionOption?: InputMaybe<Prompt_ChatCompletionOption_Order_By>;
  chatCompletionOptionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: prompt.docsPageRating */
export type Prompt_DocsPageRating_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "prompt.docsPageRating" */
export const promptDocsPageRatingSelectColumn = {
  /** column name */
  CategoryCode: 'categoryCode',
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Rating: 'rating',
  /** column name */
  Slug: 'slug',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type Prompt_DocsPageRating_Select_Column =
  (typeof promptDocsPageRatingSelectColumn)[keyof typeof promptDocsPageRatingSelectColumn];
/** input type for updating data in table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Set_Input = {
  categoryCode?: InputMaybe<Prompt_CategoryCode_Enum>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  rating?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Prompt_DocsPageRating_Stddev_Fields = {
  __typename?: 'prompt_docsPageRating_stddev_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Stddev_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Prompt_DocsPageRating_Stddev_Pop_Fields = {
  __typename?: 'prompt_docsPageRating_stddev_pop_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Stddev_Pop_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Prompt_DocsPageRating_Stddev_Samp_Fields = {
  __typename?: 'prompt_docsPageRating_stddev_samp_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Stddev_Samp_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "prompt_docsPageRating" */
export type Prompt_DocsPageRating_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Prompt_DocsPageRating_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Prompt_DocsPageRating_Stream_Cursor_Value_Input = {
  categoryCode?: InputMaybe<Prompt_CategoryCode_Enum>;
  chatCompletionOptionId?: InputMaybe<Scalars['bigint']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  rating?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Prompt_DocsPageRating_Sum_Fields = {
  __typename?: 'prompt_docsPageRating_sum_fields';
  chatCompletionOptionId: Maybe<Scalars['bigint']>;
  id: Maybe<Scalars['bigint']>;
  rating: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Sum_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** update columns of table "prompt.docsPageRating" */
export const promptDocsPageRatingUpdateColumn = {
  /** column name */
  CategoryCode: 'categoryCode',
  /** column name */
  ChatCompletionOptionId: 'chatCompletionOptionId',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  Id: 'id',
  /** column name */
  Rating: 'rating',
  /** column name */
  Slug: 'slug',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type Prompt_DocsPageRating_Update_Column =
  (typeof promptDocsPageRatingUpdateColumn)[keyof typeof promptDocsPageRatingUpdateColumn];
export type Prompt_DocsPageRating_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Prompt_DocsPageRating_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Prompt_DocsPageRating_Set_Input>;
  /** filter the rows which have to be updated */
  where: Prompt_DocsPageRating_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Prompt_DocsPageRating_Var_Pop_Fields = {
  __typename?: 'prompt_docsPageRating_var_pop_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Var_Pop_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Prompt_DocsPageRating_Var_Samp_Fields = {
  __typename?: 'prompt_docsPageRating_var_samp_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Var_Samp_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Prompt_DocsPageRating_Variance_Fields = {
  __typename?: 'prompt_docsPageRating_variance_fields';
  chatCompletionOptionId: Maybe<Scalars['Float']>;
  id: Maybe<Scalars['Float']>;
  rating: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "prompt.docsPageRating" */
export type Prompt_DocsPageRating_Variance_Order_By = {
  chatCompletionOptionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rating?: InputMaybe<Order_By>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "customMessage.content" */
  customMessage_content: Array<CustomMessage_Content>;
  /** fetch aggregated fields from the table: "customMessage.content" */
  customMessage_content_aggregate: CustomMessage_Content_Aggregate;
  /** fetch data from the table: "customMessage.content" using primary key columns */
  customMessage_content_by_pk: Maybe<CustomMessage_Content>;
  /** fetch data from the table: "customMessage.pageName" */
  customMessage_pageName: Array<CustomMessage_PageName>;
  /** fetch aggregated fields from the table: "customMessage.pageName" */
  customMessage_pageName_aggregate: CustomMessage_PageName_Aggregate;
  /** fetch data from the table: "customMessage.pageName" using primary key columns */
  customMessage_pageName_by_pk: Maybe<CustomMessage_PageName>;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_private" */
  embedding_zonos_com_dev_digest_private: Array<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_digest_private" */
  embedding_zonos_com_dev_digest_private_aggregate: Embedding_Zonos_Com_Dev_Digest_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_private" using primary key columns */
  embedding_zonos_com_dev_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_public" */
  embedding_zonos_com_dev_digest_public: Array<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_digest_public" */
  embedding_zonos_com_dev_digest_public_aggregate: Embedding_Zonos_Com_Dev_Digest_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_public" using primary key columns */
  embedding_zonos_com_dev_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  embedding_zonos_com_dev_digest_zonos_email_only: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  embedding_zonos_com_dev_digest_zonos_email_only_aggregate: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_zonos_email_only" using primary key columns */
  embedding_zonos_com_dev_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_dev_private" */
  embedding_zonos_com_dev_private: Array<Embedding_Zonos_Com_Dev_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_private" */
  embedding_zonos_com_dev_private_aggregate: Embedding_Zonos_Com_Dev_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_private" using primary key columns */
  embedding_zonos_com_dev_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Private>;
  /** fetch data from the table: "embedding.zonos_com_dev_public" */
  embedding_zonos_com_dev_public: Array<Embedding_Zonos_Com_Dev_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_public" */
  embedding_zonos_com_dev_public_aggregate: Embedding_Zonos_Com_Dev_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_public" using primary key columns */
  embedding_zonos_com_dev_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Public>;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_private" */
  embedding_zonos_com_dev_split_front_private: Array<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_split_front_private" */
  embedding_zonos_com_dev_split_front_private_aggregate: Embedding_Zonos_Com_Dev_Split_Front_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_private" using primary key columns */
  embedding_zonos_com_dev_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  embedding_zonos_com_dev_split_front_zonos_email_only: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  embedding_zonos_com_dev_split_front_zonos_email_only_aggregate: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" using primary key columns */
  embedding_zonos_com_dev_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_dev_zonos_email_only" */
  embedding_zonos_com_dev_zonos_email_only: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_zonos_email_only" */
  embedding_zonos_com_dev_zonos_email_only_aggregate: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_zonos_email_only" using primary key columns */
  embedding_zonos_com_dev_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_digest_private" */
  embedding_zonos_com_digest_private: Array<Embedding_Zonos_Com_Digest_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_digest_private" */
  embedding_zonos_com_digest_private_aggregate: Embedding_Zonos_Com_Digest_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_digest_private" using primary key columns */
  embedding_zonos_com_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Digest_Private>;
  /** fetch data from the table: "embedding.zonos_com_digest_public" */
  embedding_zonos_com_digest_public: Array<Embedding_Zonos_Com_Digest_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_digest_public" */
  embedding_zonos_com_digest_public_aggregate: Embedding_Zonos_Com_Digest_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_digest_public" using primary key columns */
  embedding_zonos_com_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Digest_Public>;
  /** fetch data from the table: "embedding.zonos_com_digest_zonos_email_only" */
  embedding_zonos_com_digest_zonos_email_only: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_digest_zonos_email_only" */
  embedding_zonos_com_digest_zonos_email_only_aggregate: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_digest_zonos_email_only" using primary key columns */
  embedding_zonos_com_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_private" */
  embedding_zonos_com_private: Array<Embedding_Zonos_Com_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_private" */
  embedding_zonos_com_private_aggregate: Embedding_Zonos_Com_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_private" using primary key columns */
  embedding_zonos_com_private_by_pk: Maybe<Embedding_Zonos_Com_Private>;
  /** fetch data from the table: "embedding.zonos_com_public" */
  embedding_zonos_com_public: Array<Embedding_Zonos_Com_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_public" */
  embedding_zonos_com_public_aggregate: Embedding_Zonos_Com_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_public" using primary key columns */
  embedding_zonos_com_public_by_pk: Maybe<Embedding_Zonos_Com_Public>;
  /** fetch data from the table: "embedding.zonos_com_split_front_private" */
  embedding_zonos_com_split_front_private: Array<Embedding_Zonos_Com_Split_Front_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_front_private" */
  embedding_zonos_com_split_front_private_aggregate: Embedding_Zonos_Com_Split_Front_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_front_private" using primary key columns */
  embedding_zonos_com_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Private>;
  /** fetch data from the table: "embedding.zonos_com_split_front_public" */
  embedding_zonos_com_split_front_public: Array<Embedding_Zonos_Com_Split_Front_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_front_public" */
  embedding_zonos_com_split_front_public_aggregate: Embedding_Zonos_Com_Split_Front_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_front_public" using primary key columns */
  embedding_zonos_com_split_front_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Public>;
  /** fetch data from the table: "embedding.zonos_com_split_front_zonos_email_only" */
  embedding_zonos_com_split_front_zonos_email_only: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_front_zonos_email_only" */
  embedding_zonos_com_split_front_zonos_email_only_aggregate: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_front_zonos_email_only" using primary key columns */
  embedding_zonos_com_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_split_private" */
  embedding_zonos_com_split_private: Array<Embedding_Zonos_Com_Split_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_private" */
  embedding_zonos_com_split_private_aggregate: Embedding_Zonos_Com_Split_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_private" using primary key columns */
  embedding_zonos_com_split_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Private>;
  /** fetch data from the table: "embedding.zonos_com_split_public" */
  embedding_zonos_com_split_public: Array<Embedding_Zonos_Com_Split_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_public" */
  embedding_zonos_com_split_public_aggregate: Embedding_Zonos_Com_Split_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_public" using primary key columns */
  embedding_zonos_com_split_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Public>;
  /** fetch data from the table: "embedding.zonos_com_split_zonos_email_only" */
  embedding_zonos_com_split_zonos_email_only: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_zonos_email_only" */
  embedding_zonos_com_split_zonos_email_only_aggregate: Embedding_Zonos_Com_Split_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_zonos_email_only" using primary key columns */
  embedding_zonos_com_split_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_zonos_email_only" */
  embedding_zonos_com_zonos_email_only: Array<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_zonos_email_only" */
  embedding_zonos_com_zonos_email_only_aggregate: Embedding_Zonos_Com_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_zonos_email_only" using primary key columns */
  embedding_zonos_com_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** fetch data from the table: "error.event" */
  error_event: Array<Error_Event>;
  /** fetch aggregated fields from the table: "error.event" */
  error_event_aggregate: Error_Event_Aggregate;
  /** fetch data from the table: "error.event" using primary key columns */
  error_event_by_pk: Maybe<Error_Event>;
  /** fetch data from the table: "error.project" */
  error_project: Array<Error_Project>;
  /** fetch data from the table: "error.projectName" */
  error_projectName: Array<Error_ProjectName>;
  /** fetch aggregated fields from the table: "error.projectName" */
  error_projectName_aggregate: Error_ProjectName_Aggregate;
  /** fetch data from the table: "error.projectName" using primary key columns */
  error_projectName_by_pk: Maybe<Error_ProjectName>;
  /** fetch aggregated fields from the table: "error.project" */
  error_project_aggregate: Error_Project_Aggregate;
  /** fetch data from the table: "error.project" using primary key columns */
  error_project_by_pk: Maybe<Error_Project>;
  /** fetch data from the table: "feature.aspect" */
  feature_aspect: Array<Feature_Aspect>;
  /** fetch data from the table: "feature.aspectKey" */
  feature_aspectKey: Array<Feature_AspectKey>;
  /** fetch aggregated fields from the table: "feature.aspectKey" */
  feature_aspectKey_aggregate: Feature_AspectKey_Aggregate;
  /** fetch data from the table: "feature.aspectKey" using primary key columns */
  feature_aspectKey_by_pk: Maybe<Feature_AspectKey>;
  /** fetch aggregated fields from the table: "feature.aspect" */
  feature_aspect_aggregate: Feature_Aspect_Aggregate;
  /** fetch data from the table: "feature.aspect" using primary key columns */
  feature_aspect_by_pk: Maybe<Feature_Aspect>;
  /** fetch data from the table: "feature.audience" */
  feature_audience: Array<Feature_Audience>;
  /** fetch data from the table: "feature.audienceAspectLink" */
  feature_audienceAspectLink: Array<Feature_AudienceAspectLink>;
  /** fetch aggregated fields from the table: "feature.audienceAspectLink" */
  feature_audienceAspectLink_aggregate: Feature_AudienceAspectLink_Aggregate;
  /** fetch data from the table: "feature.audienceAspectLink" using primary key columns */
  feature_audienceAspectLink_by_pk: Maybe<Feature_AudienceAspectLink>;
  /** fetch data from the table: "feature.audienceEntityLink" */
  feature_audienceEntityLink: Array<Feature_AudienceEntityLink>;
  /** fetch aggregated fields from the table: "feature.audienceEntityLink" */
  feature_audienceEntityLink_aggregate: Feature_AudienceEntityLink_Aggregate;
  /** fetch data from the table: "feature.audienceEntityLink" using primary key columns */
  feature_audienceEntityLink_by_pk: Maybe<Feature_AudienceEntityLink>;
  /** fetch data from the table: "feature.audienceName" */
  feature_audienceName: Array<Feature_AudienceName>;
  /** fetch aggregated fields from the table: "feature.audienceName" */
  feature_audienceName_aggregate: Feature_AudienceName_Aggregate;
  /** fetch data from the table: "feature.audienceName" using primary key columns */
  feature_audienceName_by_pk: Maybe<Feature_AudienceName>;
  /** fetch aggregated fields from the table: "feature.audience" */
  feature_audience_aggregate: Feature_Audience_Aggregate;
  /** fetch data from the table: "feature.audience" using primary key columns */
  feature_audience_by_pk: Maybe<Feature_Audience>;
  /** fetch data from the table: "feature.entity" */
  feature_entity: Array<Feature_Entity>;
  /** fetch aggregated fields from the table: "feature.entity" */
  feature_entity_aggregate: Feature_Entity_Aggregate;
  /** fetch data from the table: "feature.entity" using primary key columns */
  feature_entity_by_pk: Maybe<Feature_Entity>;
  /** fetch data from the table: "graphHub.category" */
  graphHub_category: Array<GraphHub_Category>;
  /** fetch data from the table: "graphHub.categoryLabel" */
  graphHub_categoryLabel: Array<GraphHub_CategoryLabel>;
  /** fetch aggregated fields from the table: "graphHub.categoryLabel" */
  graphHub_categoryLabel_aggregate: GraphHub_CategoryLabel_Aggregate;
  /** fetch data from the table: "graphHub.categoryLabel" using primary key columns */
  graphHub_categoryLabel_by_pk: Maybe<GraphHub_CategoryLabel>;
  /** fetch aggregated fields from the table: "graphHub.category" */
  graphHub_category_aggregate: GraphHub_Category_Aggregate;
  /** fetch data from the table: "graphHub.category" using primary key columns */
  graphHub_category_by_pk: Maybe<GraphHub_Category>;
  /** fetch data from the table: "graphHub.deployedInstance" */
  graphHub_deployedInstance: Array<GraphHub_DeployedInstance>;
  /** fetch aggregated fields from the table: "graphHub.deployedInstance" */
  graphHub_deployedInstance_aggregate: GraphHub_DeployedInstance_Aggregate;
  /** fetch data from the table: "graphHub.deployedInstance" using primary key columns */
  graphHub_deployedInstance_by_pk: Maybe<GraphHub_DeployedInstance>;
  /** fetch data from the table: "graphHub.deployedSchema" */
  graphHub_deployedSchema: Array<GraphHub_DeployedSchema>;
  /** fetch data from the table: "graphHub.deployedSchemaChunk" */
  graphHub_deployedSchemaChunk: Array<GraphHub_DeployedSchemaChunk>;
  /** fetch aggregated fields from the table: "graphHub.deployedSchemaChunk" */
  graphHub_deployedSchemaChunk_aggregate: GraphHub_DeployedSchemaChunk_Aggregate;
  /** fetch data from the table: "graphHub.deployedSchemaChunk" using primary key columns */
  graphHub_deployedSchemaChunk_by_pk: Maybe<GraphHub_DeployedSchemaChunk>;
  /** fetch data from the table: "graphHub.deployedSchemaLabel" */
  graphHub_deployedSchemaLabel: Array<GraphHub_DeployedSchemaLabel>;
  /** fetch aggregated fields from the table: "graphHub.deployedSchemaLabel" */
  graphHub_deployedSchemaLabel_aggregate: GraphHub_DeployedSchemaLabel_Aggregate;
  /** fetch data from the table: "graphHub.deployedSchemaLabel" using primary key columns */
  graphHub_deployedSchemaLabel_by_pk: Maybe<GraphHub_DeployedSchemaLabel>;
  /** fetch aggregated fields from the table: "graphHub.deployedSchema" */
  graphHub_deployedSchema_aggregate: GraphHub_DeployedSchema_Aggregate;
  /** fetch data from the table: "graphHub.deployedSchema" using primary key columns */
  graphHub_deployedSchema_by_pk: Maybe<GraphHub_DeployedSchema>;
  /** fetch data from the table: "graphHub.draftInstance" */
  graphHub_draftInstance: Array<GraphHub_DraftInstance>;
  /** fetch aggregated fields from the table: "graphHub.draftInstance" */
  graphHub_draftInstance_aggregate: GraphHub_DraftInstance_Aggregate;
  /** fetch data from the table: "graphHub.draftInstance" using primary key columns */
  graphHub_draftInstance_by_pk: Maybe<GraphHub_DraftInstance>;
  /** fetch data from the table: "graphHub.draftSchema" */
  graphHub_draftSchema: Array<GraphHub_DraftSchema>;
  /** fetch data from the table: "graphHub.draftSchemaChunk" */
  graphHub_draftSchemaChunk: Array<GraphHub_DraftSchemaChunk>;
  /** fetch aggregated fields from the table: "graphHub.draftSchemaChunk" */
  graphHub_draftSchemaChunk_aggregate: GraphHub_DraftSchemaChunk_Aggregate;
  /** fetch data from the table: "graphHub.draftSchemaChunk" using primary key columns */
  graphHub_draftSchemaChunk_by_pk: Maybe<GraphHub_DraftSchemaChunk>;
  /** fetch aggregated fields from the table: "graphHub.draftSchema" */
  graphHub_draftSchema_aggregate: GraphHub_DraftSchema_Aggregate;
  /** fetch data from the table: "graphHub.draftSchema" using primary key columns */
  graphHub_draftSchema_by_pk: Maybe<GraphHub_DraftSchema>;
  /** fetch data from the table: "locale.location" */
  locale_location: Array<Locale_Location>;
  /** fetch data from the table: "locale.locationCode" */
  locale_locationCode: Array<Locale_LocationCode>;
  /** fetch aggregated fields from the table: "locale.locationCode" */
  locale_locationCode_aggregate: Locale_LocationCode_Aggregate;
  /** fetch data from the table: "locale.locationCode" using primary key columns */
  locale_locationCode_by_pk: Maybe<Locale_LocationCode>;
  /** fetch aggregated fields from the table: "locale.location" */
  locale_location_aggregate: Locale_Location_Aggregate;
  /** fetch data from the table: "locale.location" using primary key columns */
  locale_location_by_pk: Maybe<Locale_Location>;
  /** fetch data from the table: "locale.message" */
  locale_message: Array<Locale_Message>;
  /** fetch aggregated fields from the table: "locale.message" */
  locale_message_aggregate: Locale_Message_Aggregate;
  /** fetch data from the table: "locale.message" using primary key columns */
  locale_message_by_pk: Maybe<Locale_Message>;
  /** fetch data from the table: "locale.rating" */
  locale_rating: Array<Locale_Rating>;
  /** fetch aggregated fields from the table: "locale.rating" */
  locale_rating_aggregate: Locale_Rating_Aggregate;
  /** fetch data from the table: "locale.rating" using primary key columns */
  locale_rating_by_pk: Maybe<Locale_Rating>;
  /** fetch data from the table: "prompt.bulkJob" */
  prompt_bulkJob: Array<Prompt_BulkJob>;
  /** fetch data from the table: "prompt.bulkJobProjectLabel" */
  prompt_bulkJobProjectLabel: Array<Prompt_BulkJobProjectLabel>;
  /** fetch aggregated fields from the table: "prompt.bulkJobProjectLabel" */
  prompt_bulkJobProjectLabel_aggregate: Prompt_BulkJobProjectLabel_Aggregate;
  /** fetch data from the table: "prompt.bulkJobProjectLabel" using primary key columns */
  prompt_bulkJobProjectLabel_by_pk: Maybe<Prompt_BulkJobProjectLabel>;
  /** fetch data from the table: "prompt.bulkJobStatus" */
  prompt_bulkJobStatus: Array<Prompt_BulkJobStatus>;
  /** fetch aggregated fields from the table: "prompt.bulkJobStatus" */
  prompt_bulkJobStatus_aggregate: Prompt_BulkJobStatus_Aggregate;
  /** fetch data from the table: "prompt.bulkJobStatus" using primary key columns */
  prompt_bulkJobStatus_by_pk: Maybe<Prompt_BulkJobStatus>;
  /** fetch aggregated fields from the table: "prompt.bulkJob" */
  prompt_bulkJob_aggregate: Prompt_BulkJob_Aggregate;
  /** fetch data from the table: "prompt.bulkJob" using primary key columns */
  prompt_bulkJob_by_pk: Maybe<Prompt_BulkJob>;
  /** fetch data from the table: "prompt.categoryCode" */
  prompt_categoryCode: Array<Prompt_CategoryCode>;
  /** fetch aggregated fields from the table: "prompt.categoryCode" */
  prompt_categoryCode_aggregate: Prompt_CategoryCode_Aggregate;
  /** fetch data from the table: "prompt.categoryCode" using primary key columns */
  prompt_categoryCode_by_pk: Maybe<Prompt_CategoryCode>;
  /** fetch data from the table: "prompt.chatCompletionOption" */
  prompt_chatCompletionOption: Array<Prompt_ChatCompletionOption>;
  /** fetch data from the table: "prompt.chatCompletionOptionError" */
  prompt_chatCompletionOptionError: Array<Prompt_ChatCompletionOptionError>;
  /** fetch aggregated fields from the table: "prompt.chatCompletionOptionError" */
  prompt_chatCompletionOptionError_aggregate: Prompt_ChatCompletionOptionError_Aggregate;
  /** fetch data from the table: "prompt.chatCompletionOptionError" using primary key columns */
  prompt_chatCompletionOptionError_by_pk: Maybe<Prompt_ChatCompletionOptionError>;
  /** fetch aggregated fields from the table: "prompt.chatCompletionOption" */
  prompt_chatCompletionOption_aggregate: Prompt_ChatCompletionOption_Aggregate;
  /** fetch data from the table: "prompt.chatCompletionOption" using primary key columns */
  prompt_chatCompletionOption_by_pk: Maybe<Prompt_ChatCompletionOption>;
  /** fetch data from the table: "prompt.chatDocument" */
  prompt_chatDocument: Array<Prompt_ChatDocument>;
  /** fetch data from the table: "prompt.chatDocumentGroup" */
  prompt_chatDocumentGroup: Array<Prompt_ChatDocumentGroup>;
  /** fetch aggregated fields from the table: "prompt.chatDocumentGroup" */
  prompt_chatDocumentGroup_aggregate: Prompt_ChatDocumentGroup_Aggregate;
  /** fetch data from the table: "prompt.chatDocumentGroup" using primary key columns */
  prompt_chatDocumentGroup_by_pk: Maybe<Prompt_ChatDocumentGroup>;
  /** fetch aggregated fields from the table: "prompt.chatDocument" */
  prompt_chatDocument_aggregate: Prompt_ChatDocument_Aggregate;
  /** fetch data from the table: "prompt.chatDocument" using primary key columns */
  prompt_chatDocument_by_pk: Maybe<Prompt_ChatDocument>;
  /** fetch data from the table: "prompt.docsPageRating" */
  prompt_docsPageRating: Array<Prompt_DocsPageRating>;
  /** fetch aggregated fields from the table: "prompt.docsPageRating" */
  prompt_docsPageRating_aggregate: Prompt_DocsPageRating_Aggregate;
  /** fetch data from the table: "prompt.docsPageRating" using primary key columns */
  prompt_docsPageRating_by_pk: Maybe<Prompt_DocsPageRating>;
  /** fetch data from the table: "usage.event" */
  usage_event: Array<Usage_Event>;
  /** fetch aggregated fields from the table: "usage.event" */
  usage_event_aggregate: Usage_Event_Aggregate;
  /** fetch data from the table: "usage.event" using primary key columns */
  usage_event_by_pk: Maybe<Usage_Event>;
  /** fetch data from the table: "ux.dashboardPreferences" */
  ux_dashboardPreferences: Array<Ux_DashboardPreferences>;
  /** fetch aggregated fields from the table: "ux.dashboardPreferences" */
  ux_dashboardPreferences_aggregate: Ux_DashboardPreferences_Aggregate;
  /** fetch data from the table: "ux.dashboardPreferences" using primary key columns */
  ux_dashboardPreferences_by_pk: Maybe<Ux_DashboardPreferences>;
};

export type Query_RootCustomMessage_ContentArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_Content_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_Content_Order_By>>;
  where: InputMaybe<CustomMessage_Content_Bool_Exp>;
};

export type Query_RootCustomMessage_Content_AggregateArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_Content_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_Content_Order_By>>;
  where: InputMaybe<CustomMessage_Content_Bool_Exp>;
};

export type Query_RootCustomMessage_Content_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootCustomMessage_PageNameArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_PageName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_PageName_Order_By>>;
  where: InputMaybe<CustomMessage_PageName_Bool_Exp>;
};

export type Query_RootCustomMessage_PageName_AggregateArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_PageName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_PageName_Order_By>>;
  where: InputMaybe<CustomMessage_PageName_Bool_Exp>;
};

export type Query_RootCustomMessage_PageName_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Private_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Public_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Query_RootEmbedding_Zonos_Com_Dev_PrivateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Private_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Dev_PublicArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Public_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Dev_Split_Front_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Split_Front_Private_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Dev_Split_Front_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_OnlyArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Query_RootEmbedding_Zonos_Com_Dev_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Zonos_Email_Only_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Dev_Zonos_Email_Only_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Digest_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Digest_Private_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Digest_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Digest_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Digest_Public_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Digest_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Digest_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Digest_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Digest_Zonos_Email_Only_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_PrivateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Private_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_PublicArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Public_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_Private_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_Public_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Query_RootEmbedding_Zonos_Com_Split_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Private_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Split_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Public_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Split_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Split_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
  };

export type Query_RootEmbedding_Zonos_Com_Split_Zonos_Email_Only_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootEmbedding_Zonos_Com_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Zonos_Email_Only_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Zonos_Email_Only_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Zonos_Email_Only_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
};

export type Query_RootEmbedding_Zonos_Com_Zonos_Email_Only_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootError_EventArgs = {
  distinct_on: InputMaybe<Array<Error_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Event_Order_By>>;
  where: InputMaybe<Error_Event_Bool_Exp>;
};

export type Query_RootError_Event_AggregateArgs = {
  distinct_on: InputMaybe<Array<Error_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Event_Order_By>>;
  where: InputMaybe<Error_Event_Bool_Exp>;
};

export type Query_RootError_Event_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootError_ProjectArgs = {
  distinct_on: InputMaybe<Array<Error_Project_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Project_Order_By>>;
  where: InputMaybe<Error_Project_Bool_Exp>;
};

export type Query_RootError_ProjectNameArgs = {
  distinct_on: InputMaybe<Array<Error_ProjectName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_ProjectName_Order_By>>;
  where: InputMaybe<Error_ProjectName_Bool_Exp>;
};

export type Query_RootError_ProjectName_AggregateArgs = {
  distinct_on: InputMaybe<Array<Error_ProjectName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_ProjectName_Order_By>>;
  where: InputMaybe<Error_ProjectName_Bool_Exp>;
};

export type Query_RootError_ProjectName_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootError_Project_AggregateArgs = {
  distinct_on: InputMaybe<Array<Error_Project_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Project_Order_By>>;
  where: InputMaybe<Error_Project_Bool_Exp>;
};

export type Query_RootError_Project_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootFeature_AspectArgs = {
  distinct_on: InputMaybe<Array<Feature_Aspect_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Aspect_Order_By>>;
  where: InputMaybe<Feature_Aspect_Bool_Exp>;
};

export type Query_RootFeature_AspectKeyArgs = {
  distinct_on: InputMaybe<Array<Feature_AspectKey_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AspectKey_Order_By>>;
  where: InputMaybe<Feature_AspectKey_Bool_Exp>;
};

export type Query_RootFeature_AspectKey_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AspectKey_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AspectKey_Order_By>>;
  where: InputMaybe<Feature_AspectKey_Bool_Exp>;
};

export type Query_RootFeature_AspectKey_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootFeature_Aspect_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_Aspect_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Aspect_Order_By>>;
  where: InputMaybe<Feature_Aspect_Bool_Exp>;
};

export type Query_RootFeature_Aspect_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootFeature_AudienceArgs = {
  distinct_on: InputMaybe<Array<Feature_Audience_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Audience_Order_By>>;
  where: InputMaybe<Feature_Audience_Bool_Exp>;
};

export type Query_RootFeature_AudienceAspectLinkArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceAspectLink_Order_By>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

export type Query_RootFeature_AudienceAspectLink_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceAspectLink_Order_By>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

export type Query_RootFeature_AudienceAspectLink_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootFeature_AudienceEntityLinkArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceEntityLink_Order_By>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

export type Query_RootFeature_AudienceEntityLink_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceEntityLink_Order_By>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

export type Query_RootFeature_AudienceEntityLink_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootFeature_AudienceNameArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceName_Order_By>>;
  where: InputMaybe<Feature_AudienceName_Bool_Exp>;
};

export type Query_RootFeature_AudienceName_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceName_Order_By>>;
  where: InputMaybe<Feature_AudienceName_Bool_Exp>;
};

export type Query_RootFeature_AudienceName_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootFeature_Audience_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_Audience_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Audience_Order_By>>;
  where: InputMaybe<Feature_Audience_Bool_Exp>;
};

export type Query_RootFeature_Audience_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootFeature_EntityArgs = {
  distinct_on: InputMaybe<Array<Feature_Entity_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Entity_Order_By>>;
  where: InputMaybe<Feature_Entity_Bool_Exp>;
};

export type Query_RootFeature_Entity_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_Entity_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Entity_Order_By>>;
  where: InputMaybe<Feature_Entity_Bool_Exp>;
};

export type Query_RootFeature_Entity_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_CategoryArgs = {
  distinct_on: InputMaybe<Array<GraphHub_Category_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_Category_Order_By>>;
  where: InputMaybe<GraphHub_Category_Bool_Exp>;
};

export type Query_RootGraphHub_CategoryLabelArgs = {
  distinct_on: InputMaybe<Array<GraphHub_CategoryLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_CategoryLabel_Order_By>>;
  where: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
};

export type Query_RootGraphHub_CategoryLabel_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_CategoryLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_CategoryLabel_Order_By>>;
  where: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
};

export type Query_RootGraphHub_CategoryLabel_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootGraphHub_Category_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_Category_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_Category_Order_By>>;
  where: InputMaybe<GraphHub_Category_Bool_Exp>;
};

export type Query_RootGraphHub_Category_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_DeployedInstanceArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedInstance_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedInstance_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_DeployedSchemaArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchema_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedSchemaChunkArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedSchemaChunk_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedSchemaChunk_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_DeployedSchemaLabelArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedSchemaLabel_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedSchemaLabel_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootGraphHub_DeployedSchema_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchema_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

export type Query_RootGraphHub_DeployedSchema_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_DraftInstanceArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

export type Query_RootGraphHub_DraftInstance_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

export type Query_RootGraphHub_DraftInstance_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_DraftSchemaArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchema_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
};

export type Query_RootGraphHub_DraftSchemaChunkArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

export type Query_RootGraphHub_DraftSchemaChunk_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

export type Query_RootGraphHub_DraftSchemaChunk_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootGraphHub_DraftSchema_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchema_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
};

export type Query_RootGraphHub_DraftSchema_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootLocale_LocationArgs = {
  distinct_on: InputMaybe<Array<Locale_Location_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Location_Order_By>>;
  where: InputMaybe<Locale_Location_Bool_Exp>;
};

export type Query_RootLocale_LocationCodeArgs = {
  distinct_on: InputMaybe<Array<Locale_LocationCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_LocationCode_Order_By>>;
  where: InputMaybe<Locale_LocationCode_Bool_Exp>;
};

export type Query_RootLocale_LocationCode_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_LocationCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_LocationCode_Order_By>>;
  where: InputMaybe<Locale_LocationCode_Bool_Exp>;
};

export type Query_RootLocale_LocationCode_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootLocale_Location_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Location_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Location_Order_By>>;
  where: InputMaybe<Locale_Location_Bool_Exp>;
};

export type Query_RootLocale_Location_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootLocale_MessageArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

export type Query_RootLocale_Message_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

export type Query_RootLocale_Message_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootLocale_RatingArgs = {
  distinct_on: InputMaybe<Array<Locale_Rating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Rating_Order_By>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

export type Query_RootLocale_Rating_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Rating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Rating_Order_By>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

export type Query_RootLocale_Rating_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootPrompt_BulkJobArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

export type Query_RootPrompt_BulkJobProjectLabelArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobProjectLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobProjectLabel_Order_By>>;
  where: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
};

export type Query_RootPrompt_BulkJobProjectLabel_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobProjectLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobProjectLabel_Order_By>>;
  where: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
};

export type Query_RootPrompt_BulkJobProjectLabel_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootPrompt_BulkJobStatusArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobStatus_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobStatus_Order_By>>;
  where: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
};

export type Query_RootPrompt_BulkJobStatus_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobStatus_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobStatus_Order_By>>;
  where: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
};

export type Query_RootPrompt_BulkJobStatus_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootPrompt_BulkJob_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

export type Query_RootPrompt_BulkJob_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootPrompt_CategoryCodeArgs = {
  distinct_on: InputMaybe<Array<Prompt_CategoryCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_CategoryCode_Order_By>>;
  where: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
};

export type Query_RootPrompt_CategoryCode_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_CategoryCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_CategoryCode_Order_By>>;
  where: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
};

export type Query_RootPrompt_CategoryCode_By_PkArgs = {
  set: Scalars['String'];
};

export type Query_RootPrompt_ChatCompletionOptionArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

export type Query_RootPrompt_ChatCompletionOptionErrorArgs = {
  distinct_on: InputMaybe<
    Array<Prompt_ChatCompletionOptionError_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOptionError_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
};

export type Query_RootPrompt_ChatCompletionOptionError_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Prompt_ChatCompletionOptionError_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOptionError_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
};

export type Query_RootPrompt_ChatCompletionOptionError_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootPrompt_ChatCompletionOption_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

export type Query_RootPrompt_ChatCompletionOption_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootPrompt_ChatDocumentArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocument_Order_By>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

export type Query_RootPrompt_ChatDocumentGroupArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocumentGroup_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocumentGroup_Order_By>>;
  where: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
};

export type Query_RootPrompt_ChatDocumentGroup_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocumentGroup_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocumentGroup_Order_By>>;
  where: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
};

export type Query_RootPrompt_ChatDocumentGroup_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootPrompt_ChatDocument_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocument_Order_By>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

export type Query_RootPrompt_ChatDocument_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootPrompt_DocsPageRatingArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

export type Query_RootPrompt_DocsPageRating_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

export type Query_RootPrompt_DocsPageRating_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootUsage_EventArgs = {
  distinct_on: InputMaybe<Array<Usage_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Usage_Event_Order_By>>;
  where: InputMaybe<Usage_Event_Bool_Exp>;
};

export type Query_RootUsage_Event_AggregateArgs = {
  distinct_on: InputMaybe<Array<Usage_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Usage_Event_Order_By>>;
  where: InputMaybe<Usage_Event_Bool_Exp>;
};

export type Query_RootUsage_Event_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Query_RootUx_DashboardPreferencesArgs = {
  distinct_on: InputMaybe<Array<Ux_DashboardPreferences_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Ux_DashboardPreferences_Order_By>>;
  where: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
};

export type Query_RootUx_DashboardPreferences_AggregateArgs = {
  distinct_on: InputMaybe<Array<Ux_DashboardPreferences_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Ux_DashboardPreferences_Order_By>>;
  where: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
};

export type Query_RootUx_DashboardPreferences_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "customMessage.content" */
  customMessage_content: Array<CustomMessage_Content>;
  /** fetch aggregated fields from the table: "customMessage.content" */
  customMessage_content_aggregate: CustomMessage_Content_Aggregate;
  /** fetch data from the table: "customMessage.content" using primary key columns */
  customMessage_content_by_pk: Maybe<CustomMessage_Content>;
  /** fetch data from the table in a streaming manner: "customMessage.content" */
  customMessage_content_stream: Array<CustomMessage_Content>;
  /** fetch data from the table: "customMessage.pageName" */
  customMessage_pageName: Array<CustomMessage_PageName>;
  /** fetch aggregated fields from the table: "customMessage.pageName" */
  customMessage_pageName_aggregate: CustomMessage_PageName_Aggregate;
  /** fetch data from the table: "customMessage.pageName" using primary key columns */
  customMessage_pageName_by_pk: Maybe<CustomMessage_PageName>;
  /** fetch data from the table in a streaming manner: "customMessage.pageName" */
  customMessage_pageName_stream: Array<CustomMessage_PageName>;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_private" */
  embedding_zonos_com_dev_digest_private: Array<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_digest_private" */
  embedding_zonos_com_dev_digest_private_aggregate: Embedding_Zonos_Com_Dev_Digest_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_private" using primary key columns */
  embedding_zonos_com_dev_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_digest_private" */
  embedding_zonos_com_dev_digest_private_stream: Array<Embedding_Zonos_Com_Dev_Digest_Private>;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_public" */
  embedding_zonos_com_dev_digest_public: Array<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_digest_public" */
  embedding_zonos_com_dev_digest_public_aggregate: Embedding_Zonos_Com_Dev_Digest_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_public" using primary key columns */
  embedding_zonos_com_dev_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_digest_public" */
  embedding_zonos_com_dev_digest_public_stream: Array<Embedding_Zonos_Com_Dev_Digest_Public>;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  embedding_zonos_com_dev_digest_zonos_email_only: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_digest_zonos_email_only" */
  embedding_zonos_com_dev_digest_zonos_email_only_aggregate: Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_digest_zonos_email_only" using primary key columns */
  embedding_zonos_com_dev_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_digest_zonos_email_only" */
  embedding_zonos_com_dev_digest_zonos_email_only_stream: Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_dev_private" */
  embedding_zonos_com_dev_private: Array<Embedding_Zonos_Com_Dev_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_private" */
  embedding_zonos_com_dev_private_aggregate: Embedding_Zonos_Com_Dev_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_private" using primary key columns */
  embedding_zonos_com_dev_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_private" */
  embedding_zonos_com_dev_private_stream: Array<Embedding_Zonos_Com_Dev_Private>;
  /** fetch data from the table: "embedding.zonos_com_dev_public" */
  embedding_zonos_com_dev_public: Array<Embedding_Zonos_Com_Dev_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_public" */
  embedding_zonos_com_dev_public_aggregate: Embedding_Zonos_Com_Dev_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_public" using primary key columns */
  embedding_zonos_com_dev_public_by_pk: Maybe<Embedding_Zonos_Com_Dev_Public>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_public" */
  embedding_zonos_com_dev_public_stream: Array<Embedding_Zonos_Com_Dev_Public>;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_private" */
  embedding_zonos_com_dev_split_front_private: Array<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_split_front_private" */
  embedding_zonos_com_dev_split_front_private_aggregate: Embedding_Zonos_Com_Dev_Split_Front_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_private" using primary key columns */
  embedding_zonos_com_dev_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_split_front_private" */
  embedding_zonos_com_dev_split_front_private_stream: Array<Embedding_Zonos_Com_Dev_Split_Front_Private>;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  embedding_zonos_com_dev_split_front_zonos_email_only: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  embedding_zonos_com_dev_split_front_zonos_email_only_aggregate: Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_split_front_zonos_email_only" using primary key columns */
  embedding_zonos_com_dev_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_split_front_zonos_email_only" */
  embedding_zonos_com_dev_split_front_zonos_email_only_stream: Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_dev_zonos_email_only" */
  embedding_zonos_com_dev_zonos_email_only: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_dev_zonos_email_only" */
  embedding_zonos_com_dev_zonos_email_only_aggregate: Embedding_Zonos_Com_Dev_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_dev_zonos_email_only" using primary key columns */
  embedding_zonos_com_dev_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_dev_zonos_email_only" */
  embedding_zonos_com_dev_zonos_email_only_stream: Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_digest_private" */
  embedding_zonos_com_digest_private: Array<Embedding_Zonos_Com_Digest_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_digest_private" */
  embedding_zonos_com_digest_private_aggregate: Embedding_Zonos_Com_Digest_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_digest_private" using primary key columns */
  embedding_zonos_com_digest_private_by_pk: Maybe<Embedding_Zonos_Com_Digest_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_digest_private" */
  embedding_zonos_com_digest_private_stream: Array<Embedding_Zonos_Com_Digest_Private>;
  /** fetch data from the table: "embedding.zonos_com_digest_public" */
  embedding_zonos_com_digest_public: Array<Embedding_Zonos_Com_Digest_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_digest_public" */
  embedding_zonos_com_digest_public_aggregate: Embedding_Zonos_Com_Digest_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_digest_public" using primary key columns */
  embedding_zonos_com_digest_public_by_pk: Maybe<Embedding_Zonos_Com_Digest_Public>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_digest_public" */
  embedding_zonos_com_digest_public_stream: Array<Embedding_Zonos_Com_Digest_Public>;
  /** fetch data from the table: "embedding.zonos_com_digest_zonos_email_only" */
  embedding_zonos_com_digest_zonos_email_only: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_digest_zonos_email_only" */
  embedding_zonos_com_digest_zonos_email_only_aggregate: Embedding_Zonos_Com_Digest_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_digest_zonos_email_only" using primary key columns */
  embedding_zonos_com_digest_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_digest_zonos_email_only" */
  embedding_zonos_com_digest_zonos_email_only_stream: Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_private" */
  embedding_zonos_com_private: Array<Embedding_Zonos_Com_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_private" */
  embedding_zonos_com_private_aggregate: Embedding_Zonos_Com_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_private" using primary key columns */
  embedding_zonos_com_private_by_pk: Maybe<Embedding_Zonos_Com_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_private" */
  embedding_zonos_com_private_stream: Array<Embedding_Zonos_Com_Private>;
  /** fetch data from the table: "embedding.zonos_com_public" */
  embedding_zonos_com_public: Array<Embedding_Zonos_Com_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_public" */
  embedding_zonos_com_public_aggregate: Embedding_Zonos_Com_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_public" using primary key columns */
  embedding_zonos_com_public_by_pk: Maybe<Embedding_Zonos_Com_Public>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_public" */
  embedding_zonos_com_public_stream: Array<Embedding_Zonos_Com_Public>;
  /** fetch data from the table: "embedding.zonos_com_split_front_private" */
  embedding_zonos_com_split_front_private: Array<Embedding_Zonos_Com_Split_Front_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_front_private" */
  embedding_zonos_com_split_front_private_aggregate: Embedding_Zonos_Com_Split_Front_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_front_private" using primary key columns */
  embedding_zonos_com_split_front_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_split_front_private" */
  embedding_zonos_com_split_front_private_stream: Array<Embedding_Zonos_Com_Split_Front_Private>;
  /** fetch data from the table: "embedding.zonos_com_split_front_public" */
  embedding_zonos_com_split_front_public: Array<Embedding_Zonos_Com_Split_Front_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_front_public" */
  embedding_zonos_com_split_front_public_aggregate: Embedding_Zonos_Com_Split_Front_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_front_public" using primary key columns */
  embedding_zonos_com_split_front_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Public>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_split_front_public" */
  embedding_zonos_com_split_front_public_stream: Array<Embedding_Zonos_Com_Split_Front_Public>;
  /** fetch data from the table: "embedding.zonos_com_split_front_zonos_email_only" */
  embedding_zonos_com_split_front_zonos_email_only: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_front_zonos_email_only" */
  embedding_zonos_com_split_front_zonos_email_only_aggregate: Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_front_zonos_email_only" using primary key columns */
  embedding_zonos_com_split_front_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_split_front_zonos_email_only" */
  embedding_zonos_com_split_front_zonos_email_only_stream: Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_split_private" */
  embedding_zonos_com_split_private: Array<Embedding_Zonos_Com_Split_Private>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_private" */
  embedding_zonos_com_split_private_aggregate: Embedding_Zonos_Com_Split_Private_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_private" using primary key columns */
  embedding_zonos_com_split_private_by_pk: Maybe<Embedding_Zonos_Com_Split_Private>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_split_private" */
  embedding_zonos_com_split_private_stream: Array<Embedding_Zonos_Com_Split_Private>;
  /** fetch data from the table: "embedding.zonos_com_split_public" */
  embedding_zonos_com_split_public: Array<Embedding_Zonos_Com_Split_Public>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_public" */
  embedding_zonos_com_split_public_aggregate: Embedding_Zonos_Com_Split_Public_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_public" using primary key columns */
  embedding_zonos_com_split_public_by_pk: Maybe<Embedding_Zonos_Com_Split_Public>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_split_public" */
  embedding_zonos_com_split_public_stream: Array<Embedding_Zonos_Com_Split_Public>;
  /** fetch data from the table: "embedding.zonos_com_split_zonos_email_only" */
  embedding_zonos_com_split_zonos_email_only: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_split_zonos_email_only" */
  embedding_zonos_com_split_zonos_email_only_aggregate: Embedding_Zonos_Com_Split_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_split_zonos_email_only" using primary key columns */
  embedding_zonos_com_split_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_split_zonos_email_only" */
  embedding_zonos_com_split_zonos_email_only_stream: Array<Embedding_Zonos_Com_Split_Zonos_Email_Only>;
  /** fetch data from the table: "embedding.zonos_com_zonos_email_only" */
  embedding_zonos_com_zonos_email_only: Array<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** fetch aggregated fields from the table: "embedding.zonos_com_zonos_email_only" */
  embedding_zonos_com_zonos_email_only_aggregate: Embedding_Zonos_Com_Zonos_Email_Only_Aggregate;
  /** fetch data from the table: "embedding.zonos_com_zonos_email_only" using primary key columns */
  embedding_zonos_com_zonos_email_only_by_pk: Maybe<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** fetch data from the table in a streaming manner: "embedding.zonos_com_zonos_email_only" */
  embedding_zonos_com_zonos_email_only_stream: Array<Embedding_Zonos_Com_Zonos_Email_Only>;
  /** fetch data from the table: "error.event" */
  error_event: Array<Error_Event>;
  /** fetch aggregated fields from the table: "error.event" */
  error_event_aggregate: Error_Event_Aggregate;
  /** fetch data from the table: "error.event" using primary key columns */
  error_event_by_pk: Maybe<Error_Event>;
  /** fetch data from the table in a streaming manner: "error.event" */
  error_event_stream: Array<Error_Event>;
  /** fetch data from the table: "error.project" */
  error_project: Array<Error_Project>;
  /** fetch data from the table: "error.projectName" */
  error_projectName: Array<Error_ProjectName>;
  /** fetch aggregated fields from the table: "error.projectName" */
  error_projectName_aggregate: Error_ProjectName_Aggregate;
  /** fetch data from the table: "error.projectName" using primary key columns */
  error_projectName_by_pk: Maybe<Error_ProjectName>;
  /** fetch data from the table in a streaming manner: "error.projectName" */
  error_projectName_stream: Array<Error_ProjectName>;
  /** fetch aggregated fields from the table: "error.project" */
  error_project_aggregate: Error_Project_Aggregate;
  /** fetch data from the table: "error.project" using primary key columns */
  error_project_by_pk: Maybe<Error_Project>;
  /** fetch data from the table in a streaming manner: "error.project" */
  error_project_stream: Array<Error_Project>;
  /** fetch data from the table: "feature.aspect" */
  feature_aspect: Array<Feature_Aspect>;
  /** fetch data from the table: "feature.aspectKey" */
  feature_aspectKey: Array<Feature_AspectKey>;
  /** fetch aggregated fields from the table: "feature.aspectKey" */
  feature_aspectKey_aggregate: Feature_AspectKey_Aggregate;
  /** fetch data from the table: "feature.aspectKey" using primary key columns */
  feature_aspectKey_by_pk: Maybe<Feature_AspectKey>;
  /** fetch data from the table in a streaming manner: "feature.aspectKey" */
  feature_aspectKey_stream: Array<Feature_AspectKey>;
  /** fetch aggregated fields from the table: "feature.aspect" */
  feature_aspect_aggregate: Feature_Aspect_Aggregate;
  /** fetch data from the table: "feature.aspect" using primary key columns */
  feature_aspect_by_pk: Maybe<Feature_Aspect>;
  /** fetch data from the table in a streaming manner: "feature.aspect" */
  feature_aspect_stream: Array<Feature_Aspect>;
  /** fetch data from the table: "feature.audience" */
  feature_audience: Array<Feature_Audience>;
  /** fetch data from the table: "feature.audienceAspectLink" */
  feature_audienceAspectLink: Array<Feature_AudienceAspectLink>;
  /** fetch aggregated fields from the table: "feature.audienceAspectLink" */
  feature_audienceAspectLink_aggregate: Feature_AudienceAspectLink_Aggregate;
  /** fetch data from the table: "feature.audienceAspectLink" using primary key columns */
  feature_audienceAspectLink_by_pk: Maybe<Feature_AudienceAspectLink>;
  /** fetch data from the table in a streaming manner: "feature.audienceAspectLink" */
  feature_audienceAspectLink_stream: Array<Feature_AudienceAspectLink>;
  /** fetch data from the table: "feature.audienceEntityLink" */
  feature_audienceEntityLink: Array<Feature_AudienceEntityLink>;
  /** fetch aggregated fields from the table: "feature.audienceEntityLink" */
  feature_audienceEntityLink_aggregate: Feature_AudienceEntityLink_Aggregate;
  /** fetch data from the table: "feature.audienceEntityLink" using primary key columns */
  feature_audienceEntityLink_by_pk: Maybe<Feature_AudienceEntityLink>;
  /** fetch data from the table in a streaming manner: "feature.audienceEntityLink" */
  feature_audienceEntityLink_stream: Array<Feature_AudienceEntityLink>;
  /** fetch data from the table: "feature.audienceName" */
  feature_audienceName: Array<Feature_AudienceName>;
  /** fetch aggregated fields from the table: "feature.audienceName" */
  feature_audienceName_aggregate: Feature_AudienceName_Aggregate;
  /** fetch data from the table: "feature.audienceName" using primary key columns */
  feature_audienceName_by_pk: Maybe<Feature_AudienceName>;
  /** fetch data from the table in a streaming manner: "feature.audienceName" */
  feature_audienceName_stream: Array<Feature_AudienceName>;
  /** fetch aggregated fields from the table: "feature.audience" */
  feature_audience_aggregate: Feature_Audience_Aggregate;
  /** fetch data from the table: "feature.audience" using primary key columns */
  feature_audience_by_pk: Maybe<Feature_Audience>;
  /** fetch data from the table in a streaming manner: "feature.audience" */
  feature_audience_stream: Array<Feature_Audience>;
  /** fetch data from the table: "feature.entity" */
  feature_entity: Array<Feature_Entity>;
  /** fetch aggregated fields from the table: "feature.entity" */
  feature_entity_aggregate: Feature_Entity_Aggregate;
  /** fetch data from the table: "feature.entity" using primary key columns */
  feature_entity_by_pk: Maybe<Feature_Entity>;
  /** fetch data from the table in a streaming manner: "feature.entity" */
  feature_entity_stream: Array<Feature_Entity>;
  /** fetch data from the table: "graphHub.category" */
  graphHub_category: Array<GraphHub_Category>;
  /** fetch data from the table: "graphHub.categoryLabel" */
  graphHub_categoryLabel: Array<GraphHub_CategoryLabel>;
  /** fetch aggregated fields from the table: "graphHub.categoryLabel" */
  graphHub_categoryLabel_aggregate: GraphHub_CategoryLabel_Aggregate;
  /** fetch data from the table: "graphHub.categoryLabel" using primary key columns */
  graphHub_categoryLabel_by_pk: Maybe<GraphHub_CategoryLabel>;
  /** fetch data from the table in a streaming manner: "graphHub.categoryLabel" */
  graphHub_categoryLabel_stream: Array<GraphHub_CategoryLabel>;
  /** fetch aggregated fields from the table: "graphHub.category" */
  graphHub_category_aggregate: GraphHub_Category_Aggregate;
  /** fetch data from the table: "graphHub.category" using primary key columns */
  graphHub_category_by_pk: Maybe<GraphHub_Category>;
  /** fetch data from the table in a streaming manner: "graphHub.category" */
  graphHub_category_stream: Array<GraphHub_Category>;
  /** fetch data from the table: "graphHub.deployedInstance" */
  graphHub_deployedInstance: Array<GraphHub_DeployedInstance>;
  /** fetch aggregated fields from the table: "graphHub.deployedInstance" */
  graphHub_deployedInstance_aggregate: GraphHub_DeployedInstance_Aggregate;
  /** fetch data from the table: "graphHub.deployedInstance" using primary key columns */
  graphHub_deployedInstance_by_pk: Maybe<GraphHub_DeployedInstance>;
  /** fetch data from the table in a streaming manner: "graphHub.deployedInstance" */
  graphHub_deployedInstance_stream: Array<GraphHub_DeployedInstance>;
  /** fetch data from the table: "graphHub.deployedSchema" */
  graphHub_deployedSchema: Array<GraphHub_DeployedSchema>;
  /** fetch data from the table: "graphHub.deployedSchemaChunk" */
  graphHub_deployedSchemaChunk: Array<GraphHub_DeployedSchemaChunk>;
  /** fetch aggregated fields from the table: "graphHub.deployedSchemaChunk" */
  graphHub_deployedSchemaChunk_aggregate: GraphHub_DeployedSchemaChunk_Aggregate;
  /** fetch data from the table: "graphHub.deployedSchemaChunk" using primary key columns */
  graphHub_deployedSchemaChunk_by_pk: Maybe<GraphHub_DeployedSchemaChunk>;
  /** fetch data from the table in a streaming manner: "graphHub.deployedSchemaChunk" */
  graphHub_deployedSchemaChunk_stream: Array<GraphHub_DeployedSchemaChunk>;
  /** fetch data from the table: "graphHub.deployedSchemaLabel" */
  graphHub_deployedSchemaLabel: Array<GraphHub_DeployedSchemaLabel>;
  /** fetch aggregated fields from the table: "graphHub.deployedSchemaLabel" */
  graphHub_deployedSchemaLabel_aggregate: GraphHub_DeployedSchemaLabel_Aggregate;
  /** fetch data from the table: "graphHub.deployedSchemaLabel" using primary key columns */
  graphHub_deployedSchemaLabel_by_pk: Maybe<GraphHub_DeployedSchemaLabel>;
  /** fetch data from the table in a streaming manner: "graphHub.deployedSchemaLabel" */
  graphHub_deployedSchemaLabel_stream: Array<GraphHub_DeployedSchemaLabel>;
  /** fetch aggregated fields from the table: "graphHub.deployedSchema" */
  graphHub_deployedSchema_aggregate: GraphHub_DeployedSchema_Aggregate;
  /** fetch data from the table: "graphHub.deployedSchema" using primary key columns */
  graphHub_deployedSchema_by_pk: Maybe<GraphHub_DeployedSchema>;
  /** fetch data from the table in a streaming manner: "graphHub.deployedSchema" */
  graphHub_deployedSchema_stream: Array<GraphHub_DeployedSchema>;
  /** fetch data from the table: "graphHub.draftInstance" */
  graphHub_draftInstance: Array<GraphHub_DraftInstance>;
  /** fetch aggregated fields from the table: "graphHub.draftInstance" */
  graphHub_draftInstance_aggregate: GraphHub_DraftInstance_Aggregate;
  /** fetch data from the table: "graphHub.draftInstance" using primary key columns */
  graphHub_draftInstance_by_pk: Maybe<GraphHub_DraftInstance>;
  /** fetch data from the table in a streaming manner: "graphHub.draftInstance" */
  graphHub_draftInstance_stream: Array<GraphHub_DraftInstance>;
  /** fetch data from the table: "graphHub.draftSchema" */
  graphHub_draftSchema: Array<GraphHub_DraftSchema>;
  /** fetch data from the table: "graphHub.draftSchemaChunk" */
  graphHub_draftSchemaChunk: Array<GraphHub_DraftSchemaChunk>;
  /** fetch aggregated fields from the table: "graphHub.draftSchemaChunk" */
  graphHub_draftSchemaChunk_aggregate: GraphHub_DraftSchemaChunk_Aggregate;
  /** fetch data from the table: "graphHub.draftSchemaChunk" using primary key columns */
  graphHub_draftSchemaChunk_by_pk: Maybe<GraphHub_DraftSchemaChunk>;
  /** fetch data from the table in a streaming manner: "graphHub.draftSchemaChunk" */
  graphHub_draftSchemaChunk_stream: Array<GraphHub_DraftSchemaChunk>;
  /** fetch aggregated fields from the table: "graphHub.draftSchema" */
  graphHub_draftSchema_aggregate: GraphHub_DraftSchema_Aggregate;
  /** fetch data from the table: "graphHub.draftSchema" using primary key columns */
  graphHub_draftSchema_by_pk: Maybe<GraphHub_DraftSchema>;
  /** fetch data from the table in a streaming manner: "graphHub.draftSchema" */
  graphHub_draftSchema_stream: Array<GraphHub_DraftSchema>;
  /** fetch data from the table: "locale.location" */
  locale_location: Array<Locale_Location>;
  /** fetch data from the table: "locale.locationCode" */
  locale_locationCode: Array<Locale_LocationCode>;
  /** fetch aggregated fields from the table: "locale.locationCode" */
  locale_locationCode_aggregate: Locale_LocationCode_Aggregate;
  /** fetch data from the table: "locale.locationCode" using primary key columns */
  locale_locationCode_by_pk: Maybe<Locale_LocationCode>;
  /** fetch data from the table in a streaming manner: "locale.locationCode" */
  locale_locationCode_stream: Array<Locale_LocationCode>;
  /** fetch aggregated fields from the table: "locale.location" */
  locale_location_aggregate: Locale_Location_Aggregate;
  /** fetch data from the table: "locale.location" using primary key columns */
  locale_location_by_pk: Maybe<Locale_Location>;
  /** fetch data from the table in a streaming manner: "locale.location" */
  locale_location_stream: Array<Locale_Location>;
  /** fetch data from the table: "locale.message" */
  locale_message: Array<Locale_Message>;
  /** fetch aggregated fields from the table: "locale.message" */
  locale_message_aggregate: Locale_Message_Aggregate;
  /** fetch data from the table: "locale.message" using primary key columns */
  locale_message_by_pk: Maybe<Locale_Message>;
  /** fetch data from the table in a streaming manner: "locale.message" */
  locale_message_stream: Array<Locale_Message>;
  /** fetch data from the table: "locale.rating" */
  locale_rating: Array<Locale_Rating>;
  /** fetch aggregated fields from the table: "locale.rating" */
  locale_rating_aggregate: Locale_Rating_Aggregate;
  /** fetch data from the table: "locale.rating" using primary key columns */
  locale_rating_by_pk: Maybe<Locale_Rating>;
  /** fetch data from the table in a streaming manner: "locale.rating" */
  locale_rating_stream: Array<Locale_Rating>;
  /** fetch data from the table: "prompt.bulkJob" */
  prompt_bulkJob: Array<Prompt_BulkJob>;
  /** fetch data from the table: "prompt.bulkJobProjectLabel" */
  prompt_bulkJobProjectLabel: Array<Prompt_BulkJobProjectLabel>;
  /** fetch aggregated fields from the table: "prompt.bulkJobProjectLabel" */
  prompt_bulkJobProjectLabel_aggregate: Prompt_BulkJobProjectLabel_Aggregate;
  /** fetch data from the table: "prompt.bulkJobProjectLabel" using primary key columns */
  prompt_bulkJobProjectLabel_by_pk: Maybe<Prompt_BulkJobProjectLabel>;
  /** fetch data from the table in a streaming manner: "prompt.bulkJobProjectLabel" */
  prompt_bulkJobProjectLabel_stream: Array<Prompt_BulkJobProjectLabel>;
  /** fetch data from the table: "prompt.bulkJobStatus" */
  prompt_bulkJobStatus: Array<Prompt_BulkJobStatus>;
  /** fetch aggregated fields from the table: "prompt.bulkJobStatus" */
  prompt_bulkJobStatus_aggregate: Prompt_BulkJobStatus_Aggregate;
  /** fetch data from the table: "prompt.bulkJobStatus" using primary key columns */
  prompt_bulkJobStatus_by_pk: Maybe<Prompt_BulkJobStatus>;
  /** fetch data from the table in a streaming manner: "prompt.bulkJobStatus" */
  prompt_bulkJobStatus_stream: Array<Prompt_BulkJobStatus>;
  /** fetch aggregated fields from the table: "prompt.bulkJob" */
  prompt_bulkJob_aggregate: Prompt_BulkJob_Aggregate;
  /** fetch data from the table: "prompt.bulkJob" using primary key columns */
  prompt_bulkJob_by_pk: Maybe<Prompt_BulkJob>;
  /** fetch data from the table in a streaming manner: "prompt.bulkJob" */
  prompt_bulkJob_stream: Array<Prompt_BulkJob>;
  /** fetch data from the table: "prompt.categoryCode" */
  prompt_categoryCode: Array<Prompt_CategoryCode>;
  /** fetch aggregated fields from the table: "prompt.categoryCode" */
  prompt_categoryCode_aggregate: Prompt_CategoryCode_Aggregate;
  /** fetch data from the table: "prompt.categoryCode" using primary key columns */
  prompt_categoryCode_by_pk: Maybe<Prompt_CategoryCode>;
  /** fetch data from the table in a streaming manner: "prompt.categoryCode" */
  prompt_categoryCode_stream: Array<Prompt_CategoryCode>;
  /** fetch data from the table: "prompt.chatCompletionOption" */
  prompt_chatCompletionOption: Array<Prompt_ChatCompletionOption>;
  /** fetch data from the table: "prompt.chatCompletionOptionError" */
  prompt_chatCompletionOptionError: Array<Prompt_ChatCompletionOptionError>;
  /** fetch aggregated fields from the table: "prompt.chatCompletionOptionError" */
  prompt_chatCompletionOptionError_aggregate: Prompt_ChatCompletionOptionError_Aggregate;
  /** fetch data from the table: "prompt.chatCompletionOptionError" using primary key columns */
  prompt_chatCompletionOptionError_by_pk: Maybe<Prompt_ChatCompletionOptionError>;
  /** fetch data from the table in a streaming manner: "prompt.chatCompletionOptionError" */
  prompt_chatCompletionOptionError_stream: Array<Prompt_ChatCompletionOptionError>;
  /** fetch aggregated fields from the table: "prompt.chatCompletionOption" */
  prompt_chatCompletionOption_aggregate: Prompt_ChatCompletionOption_Aggregate;
  /** fetch data from the table: "prompt.chatCompletionOption" using primary key columns */
  prompt_chatCompletionOption_by_pk: Maybe<Prompt_ChatCompletionOption>;
  /** fetch data from the table in a streaming manner: "prompt.chatCompletionOption" */
  prompt_chatCompletionOption_stream: Array<Prompt_ChatCompletionOption>;
  /** fetch data from the table: "prompt.chatDocument" */
  prompt_chatDocument: Array<Prompt_ChatDocument>;
  /** fetch data from the table: "prompt.chatDocumentGroup" */
  prompt_chatDocumentGroup: Array<Prompt_ChatDocumentGroup>;
  /** fetch aggregated fields from the table: "prompt.chatDocumentGroup" */
  prompt_chatDocumentGroup_aggregate: Prompt_ChatDocumentGroup_Aggregate;
  /** fetch data from the table: "prompt.chatDocumentGroup" using primary key columns */
  prompt_chatDocumentGroup_by_pk: Maybe<Prompt_ChatDocumentGroup>;
  /** fetch data from the table in a streaming manner: "prompt.chatDocumentGroup" */
  prompt_chatDocumentGroup_stream: Array<Prompt_ChatDocumentGroup>;
  /** fetch aggregated fields from the table: "prompt.chatDocument" */
  prompt_chatDocument_aggregate: Prompt_ChatDocument_Aggregate;
  /** fetch data from the table: "prompt.chatDocument" using primary key columns */
  prompt_chatDocument_by_pk: Maybe<Prompt_ChatDocument>;
  /** fetch data from the table in a streaming manner: "prompt.chatDocument" */
  prompt_chatDocument_stream: Array<Prompt_ChatDocument>;
  /** fetch data from the table: "prompt.docsPageRating" */
  prompt_docsPageRating: Array<Prompt_DocsPageRating>;
  /** fetch aggregated fields from the table: "prompt.docsPageRating" */
  prompt_docsPageRating_aggregate: Prompt_DocsPageRating_Aggregate;
  /** fetch data from the table: "prompt.docsPageRating" using primary key columns */
  prompt_docsPageRating_by_pk: Maybe<Prompt_DocsPageRating>;
  /** fetch data from the table in a streaming manner: "prompt.docsPageRating" */
  prompt_docsPageRating_stream: Array<Prompt_DocsPageRating>;
  /** fetch data from the table: "usage.event" */
  usage_event: Array<Usage_Event>;
  /** fetch aggregated fields from the table: "usage.event" */
  usage_event_aggregate: Usage_Event_Aggregate;
  /** fetch data from the table: "usage.event" using primary key columns */
  usage_event_by_pk: Maybe<Usage_Event>;
  /** fetch data from the table in a streaming manner: "usage.event" */
  usage_event_stream: Array<Usage_Event>;
  /** fetch data from the table: "ux.dashboardPreferences" */
  ux_dashboardPreferences: Array<Ux_DashboardPreferences>;
  /** fetch aggregated fields from the table: "ux.dashboardPreferences" */
  ux_dashboardPreferences_aggregate: Ux_DashboardPreferences_Aggregate;
  /** fetch data from the table: "ux.dashboardPreferences" using primary key columns */
  ux_dashboardPreferences_by_pk: Maybe<Ux_DashboardPreferences>;
  /** fetch data from the table in a streaming manner: "ux.dashboardPreferences" */
  ux_dashboardPreferences_stream: Array<Ux_DashboardPreferences>;
};

export type Subscription_RootCustomMessage_ContentArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_Content_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_Content_Order_By>>;
  where: InputMaybe<CustomMessage_Content_Bool_Exp>;
};

export type Subscription_RootCustomMessage_Content_AggregateArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_Content_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_Content_Order_By>>;
  where: InputMaybe<CustomMessage_Content_Bool_Exp>;
};

export type Subscription_RootCustomMessage_Content_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootCustomMessage_Content_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<CustomMessage_Content_Stream_Cursor_Input>>;
  where: InputMaybe<CustomMessage_Content_Bool_Exp>;
};

export type Subscription_RootCustomMessage_PageNameArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_PageName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_PageName_Order_By>>;
  where: InputMaybe<CustomMessage_PageName_Bool_Exp>;
};

export type Subscription_RootCustomMessage_PageName_AggregateArgs = {
  distinct_on: InputMaybe<Array<CustomMessage_PageName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<CustomMessage_PageName_Order_By>>;
  where: InputMaybe<CustomMessage_PageName_Bool_Exp>;
};

export type Subscription_RootCustomMessage_PageName_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootCustomMessage_PageName_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<CustomMessage_PageName_Stream_Cursor_Input>>;
  where: InputMaybe<CustomMessage_PageName_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Private_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Private_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Private_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Private_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Private_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Public_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Public_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Digest_Public_Order_By>>;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Public_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Public_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_OnlyArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_PrivateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Private_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Private_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Embedding_Zonos_Com_Dev_Private_Stream_Cursor_Input>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_PublicArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Public_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Dev_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Public_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Embedding_Zonos_Com_Dev_Public_Stream_Cursor_Input>>;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Private_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Private_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Private_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Private_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_OnlyArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Dev_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Dev_Zonos_Email_Only_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Dev_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Digest_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Private_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Digest_Private_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Private_Order_By>>;
    where: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Digest_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Private_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Embedding_Zonos_Com_Digest_Private_Stream_Cursor_Input>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Public_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Digest_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Public_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Embedding_Zonos_Com_Digest_Public_Stream_Cursor_Input>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Digest_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Digest_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Digest_Zonos_Email_Only_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Digest_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_PrivateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Private_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Private_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Private_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Embedding_Zonos_Com_Private_Stream_Cursor_Input>>;
  where: InputMaybe<Embedding_Zonos_Com_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_PublicArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Public_AggregateArgs = {
  distinct_on: InputMaybe<Array<Embedding_Zonos_Com_Public_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Public_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Embedding_Zonos_Com_Public_Stream_Cursor_Input>>;
  where: InputMaybe<Embedding_Zonos_Com_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Private_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Private_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Private_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Private_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Private_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Private_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Front_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Front_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Public_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Public_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Public_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Public_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Public_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Public_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_OnlyArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Front_Zonos_Email_Only_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Front_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_PrivateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Private_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Private_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Private_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Private_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Private_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Embedding_Zonos_Com_Split_Private_Stream_Cursor_Input>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Split_Private_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_PublicArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Public_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Public_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Split_Public_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Public_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Public_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Embedding_Zonos_Com_Split_Public_Stream_Cursor_Input>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Split_Public_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<
    Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Order_By>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Split_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<
      Array<Embedding_Zonos_Com_Split_Zonos_Email_Only_Order_By>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Zonos_Email_Only_By_PkArgs =
  {
    id: Scalars['bigint'];
  };

export type Subscription_RootEmbedding_Zonos_Com_Split_Zonos_Email_Only_StreamArgs =
  {
    batch_size: Scalars['Int'];
    cursor: Array<
      InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Stream_Cursor_Input>
    >;
    where: InputMaybe<Embedding_Zonos_Com_Split_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Zonos_Email_OnlyArgs = {
  distinct_on: InputMaybe<
    Array<Embedding_Zonos_Com_Zonos_Email_Only_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Embedding_Zonos_Com_Zonos_Email_Only_Order_By>>;
  where: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
};

export type Subscription_RootEmbedding_Zonos_Com_Zonos_Email_Only_AggregateArgs =
  {
    distinct_on: InputMaybe<
      Array<Embedding_Zonos_Com_Zonos_Email_Only_Select_Column>
    >;
    limit: InputMaybe<Scalars['Int']>;
    offset: InputMaybe<Scalars['Int']>;
    order_by: InputMaybe<Array<Embedding_Zonos_Com_Zonos_Email_Only_Order_By>>;
    where: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
  };

export type Subscription_RootEmbedding_Zonos_Com_Zonos_Email_Only_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootEmbedding_Zonos_Com_Zonos_Email_Only_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Stream_Cursor_Input>
  >;
  where: InputMaybe<Embedding_Zonos_Com_Zonos_Email_Only_Bool_Exp>;
};

export type Subscription_RootError_EventArgs = {
  distinct_on: InputMaybe<Array<Error_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Event_Order_By>>;
  where: InputMaybe<Error_Event_Bool_Exp>;
};

export type Subscription_RootError_Event_AggregateArgs = {
  distinct_on: InputMaybe<Array<Error_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Event_Order_By>>;
  where: InputMaybe<Error_Event_Bool_Exp>;
};

export type Subscription_RootError_Event_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootError_Event_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Error_Event_Stream_Cursor_Input>>;
  where: InputMaybe<Error_Event_Bool_Exp>;
};

export type Subscription_RootError_ProjectArgs = {
  distinct_on: InputMaybe<Array<Error_Project_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Project_Order_By>>;
  where: InputMaybe<Error_Project_Bool_Exp>;
};

export type Subscription_RootError_ProjectNameArgs = {
  distinct_on: InputMaybe<Array<Error_ProjectName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_ProjectName_Order_By>>;
  where: InputMaybe<Error_ProjectName_Bool_Exp>;
};

export type Subscription_RootError_ProjectName_AggregateArgs = {
  distinct_on: InputMaybe<Array<Error_ProjectName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_ProjectName_Order_By>>;
  where: InputMaybe<Error_ProjectName_Bool_Exp>;
};

export type Subscription_RootError_ProjectName_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootError_ProjectName_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Error_ProjectName_Stream_Cursor_Input>>;
  where: InputMaybe<Error_ProjectName_Bool_Exp>;
};

export type Subscription_RootError_Project_AggregateArgs = {
  distinct_on: InputMaybe<Array<Error_Project_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Error_Project_Order_By>>;
  where: InputMaybe<Error_Project_Bool_Exp>;
};

export type Subscription_RootError_Project_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootError_Project_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Error_Project_Stream_Cursor_Input>>;
  where: InputMaybe<Error_Project_Bool_Exp>;
};

export type Subscription_RootFeature_AspectArgs = {
  distinct_on: InputMaybe<Array<Feature_Aspect_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Aspect_Order_By>>;
  where: InputMaybe<Feature_Aspect_Bool_Exp>;
};

export type Subscription_RootFeature_AspectKeyArgs = {
  distinct_on: InputMaybe<Array<Feature_AspectKey_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AspectKey_Order_By>>;
  where: InputMaybe<Feature_AspectKey_Bool_Exp>;
};

export type Subscription_RootFeature_AspectKey_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AspectKey_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AspectKey_Order_By>>;
  where: InputMaybe<Feature_AspectKey_Bool_Exp>;
};

export type Subscription_RootFeature_AspectKey_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootFeature_AspectKey_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_AspectKey_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_AspectKey_Bool_Exp>;
};

export type Subscription_RootFeature_Aspect_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_Aspect_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Aspect_Order_By>>;
  where: InputMaybe<Feature_Aspect_Bool_Exp>;
};

export type Subscription_RootFeature_Aspect_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootFeature_Aspect_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_Aspect_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_Aspect_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceArgs = {
  distinct_on: InputMaybe<Array<Feature_Audience_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Audience_Order_By>>;
  where: InputMaybe<Feature_Audience_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceAspectLinkArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceAspectLink_Order_By>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceAspectLink_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceAspectLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceAspectLink_Order_By>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceAspectLink_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootFeature_AudienceAspectLink_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_AudienceAspectLink_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_AudienceAspectLink_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceEntityLinkArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceEntityLink_Order_By>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceEntityLink_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceEntityLink_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceEntityLink_Order_By>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceEntityLink_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootFeature_AudienceEntityLink_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_AudienceEntityLink_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_AudienceEntityLink_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceNameArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceName_Order_By>>;
  where: InputMaybe<Feature_AudienceName_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceName_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_AudienceName_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_AudienceName_Order_By>>;
  where: InputMaybe<Feature_AudienceName_Bool_Exp>;
};

export type Subscription_RootFeature_AudienceName_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootFeature_AudienceName_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_AudienceName_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_AudienceName_Bool_Exp>;
};

export type Subscription_RootFeature_Audience_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_Audience_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Audience_Order_By>>;
  where: InputMaybe<Feature_Audience_Bool_Exp>;
};

export type Subscription_RootFeature_Audience_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootFeature_Audience_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_Audience_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_Audience_Bool_Exp>;
};

export type Subscription_RootFeature_EntityArgs = {
  distinct_on: InputMaybe<Array<Feature_Entity_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Entity_Order_By>>;
  where: InputMaybe<Feature_Entity_Bool_Exp>;
};

export type Subscription_RootFeature_Entity_AggregateArgs = {
  distinct_on: InputMaybe<Array<Feature_Entity_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Feature_Entity_Order_By>>;
  where: InputMaybe<Feature_Entity_Bool_Exp>;
};

export type Subscription_RootFeature_Entity_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootFeature_Entity_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Feature_Entity_Stream_Cursor_Input>>;
  where: InputMaybe<Feature_Entity_Bool_Exp>;
};

export type Subscription_RootGraphHub_CategoryArgs = {
  distinct_on: InputMaybe<Array<GraphHub_Category_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_Category_Order_By>>;
  where: InputMaybe<GraphHub_Category_Bool_Exp>;
};

export type Subscription_RootGraphHub_CategoryLabelArgs = {
  distinct_on: InputMaybe<Array<GraphHub_CategoryLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_CategoryLabel_Order_By>>;
  where: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
};

export type Subscription_RootGraphHub_CategoryLabel_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_CategoryLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_CategoryLabel_Order_By>>;
  where: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
};

export type Subscription_RootGraphHub_CategoryLabel_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootGraphHub_CategoryLabel_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_CategoryLabel_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_CategoryLabel_Bool_Exp>;
};

export type Subscription_RootGraphHub_Category_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_Category_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_Category_Order_By>>;
  where: InputMaybe<GraphHub_Category_Bool_Exp>;
};

export type Subscription_RootGraphHub_Category_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_Category_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_Category_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_Category_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedInstanceArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedInstance_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedInstance_Order_By>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedInstance_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_DeployedInstance_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DeployedInstance_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DeployedInstance_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchema_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaChunkArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaChunk_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaChunk_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_DeployedSchemaChunk_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DeployedSchemaChunk_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaLabelArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaLabel_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchemaLabel_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchemaLabel_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootGraphHub_DeployedSchemaLabel_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DeployedSchemaLabel_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DeployedSchemaLabel_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchema_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DeployedSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DeployedSchema_Order_By>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

export type Subscription_RootGraphHub_DeployedSchema_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_DeployedSchema_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DeployedSchema_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftInstanceArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftInstance_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftInstance_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftInstance_Order_By>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftInstance_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_DraftInstance_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DraftInstance_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DraftInstance_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftSchemaArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchema_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftSchemaChunkArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftSchemaChunk_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchemaChunk_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchemaChunk_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftSchemaChunk_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_DraftSchemaChunk_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DraftSchemaChunk_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftSchema_AggregateArgs = {
  distinct_on: InputMaybe<Array<GraphHub_DraftSchema_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<GraphHub_DraftSchema_Order_By>>;
  where: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
};

export type Subscription_RootGraphHub_DraftSchema_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootGraphHub_DraftSchema_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<GraphHub_DraftSchema_Stream_Cursor_Input>>;
  where: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
};

export type Subscription_RootLocale_LocationArgs = {
  distinct_on: InputMaybe<Array<Locale_Location_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Location_Order_By>>;
  where: InputMaybe<Locale_Location_Bool_Exp>;
};

export type Subscription_RootLocale_LocationCodeArgs = {
  distinct_on: InputMaybe<Array<Locale_LocationCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_LocationCode_Order_By>>;
  where: InputMaybe<Locale_LocationCode_Bool_Exp>;
};

export type Subscription_RootLocale_LocationCode_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_LocationCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_LocationCode_Order_By>>;
  where: InputMaybe<Locale_LocationCode_Bool_Exp>;
};

export type Subscription_RootLocale_LocationCode_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootLocale_LocationCode_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Locale_LocationCode_Stream_Cursor_Input>>;
  where: InputMaybe<Locale_LocationCode_Bool_Exp>;
};

export type Subscription_RootLocale_Location_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Location_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Location_Order_By>>;
  where: InputMaybe<Locale_Location_Bool_Exp>;
};

export type Subscription_RootLocale_Location_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootLocale_Location_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Locale_Location_Stream_Cursor_Input>>;
  where: InputMaybe<Locale_Location_Bool_Exp>;
};

export type Subscription_RootLocale_MessageArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

export type Subscription_RootLocale_Message_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Message_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Message_Order_By>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

export type Subscription_RootLocale_Message_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootLocale_Message_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Locale_Message_Stream_Cursor_Input>>;
  where: InputMaybe<Locale_Message_Bool_Exp>;
};

export type Subscription_RootLocale_RatingArgs = {
  distinct_on: InputMaybe<Array<Locale_Rating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Rating_Order_By>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

export type Subscription_RootLocale_Rating_AggregateArgs = {
  distinct_on: InputMaybe<Array<Locale_Rating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Locale_Rating_Order_By>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

export type Subscription_RootLocale_Rating_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootLocale_Rating_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Locale_Rating_Stream_Cursor_Input>>;
  where: InputMaybe<Locale_Rating_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobProjectLabelArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobProjectLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobProjectLabel_Order_By>>;
  where: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobProjectLabel_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobProjectLabel_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobProjectLabel_Order_By>>;
  where: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobProjectLabel_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootPrompt_BulkJobProjectLabel_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_BulkJobProjectLabel_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_BulkJobProjectLabel_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobStatusArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobStatus_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobStatus_Order_By>>;
  where: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobStatus_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJobStatus_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJobStatus_Order_By>>;
  where: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJobStatus_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootPrompt_BulkJobStatus_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_BulkJobStatus_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_BulkJobStatus_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJob_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_BulkJob_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_BulkJob_Order_By>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

export type Subscription_RootPrompt_BulkJob_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootPrompt_BulkJob_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_BulkJob_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_BulkJob_Bool_Exp>;
};

export type Subscription_RootPrompt_CategoryCodeArgs = {
  distinct_on: InputMaybe<Array<Prompt_CategoryCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_CategoryCode_Order_By>>;
  where: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
};

export type Subscription_RootPrompt_CategoryCode_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_CategoryCode_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_CategoryCode_Order_By>>;
  where: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
};

export type Subscription_RootPrompt_CategoryCode_By_PkArgs = {
  set: Scalars['String'];
};

export type Subscription_RootPrompt_CategoryCode_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_CategoryCode_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_CategoryCode_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatCompletionOptionArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatCompletionOptionErrorArgs = {
  distinct_on: InputMaybe<
    Array<Prompt_ChatCompletionOptionError_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOptionError_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatCompletionOptionError_AggregateArgs = {
  distinct_on: InputMaybe<
    Array<Prompt_ChatCompletionOptionError_Select_Column>
  >;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOptionError_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatCompletionOptionError_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootPrompt_ChatCompletionOptionError_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<
    InputMaybe<Prompt_ChatCompletionOptionError_Stream_Cursor_Input>
  >;
  where: InputMaybe<Prompt_ChatCompletionOptionError_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatCompletionOption_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatCompletionOption_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatCompletionOption_Order_By>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatCompletionOption_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootPrompt_ChatCompletionOption_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_ChatCompletionOption_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_ChatCompletionOption_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatDocumentArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocument_Order_By>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatDocumentGroupArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocumentGroup_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocumentGroup_Order_By>>;
  where: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatDocumentGroup_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocumentGroup_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocumentGroup_Order_By>>;
  where: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatDocumentGroup_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootPrompt_ChatDocumentGroup_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_ChatDocumentGroup_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_ChatDocumentGroup_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatDocument_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_ChatDocument_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_ChatDocument_Order_By>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

export type Subscription_RootPrompt_ChatDocument_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootPrompt_ChatDocument_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_ChatDocument_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_ChatDocument_Bool_Exp>;
};

export type Subscription_RootPrompt_DocsPageRatingArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

export type Subscription_RootPrompt_DocsPageRating_AggregateArgs = {
  distinct_on: InputMaybe<Array<Prompt_DocsPageRating_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Prompt_DocsPageRating_Order_By>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

export type Subscription_RootPrompt_DocsPageRating_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootPrompt_DocsPageRating_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Prompt_DocsPageRating_Stream_Cursor_Input>>;
  where: InputMaybe<Prompt_DocsPageRating_Bool_Exp>;
};

export type Subscription_RootUsage_EventArgs = {
  distinct_on: InputMaybe<Array<Usage_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Usage_Event_Order_By>>;
  where: InputMaybe<Usage_Event_Bool_Exp>;
};

export type Subscription_RootUsage_Event_AggregateArgs = {
  distinct_on: InputMaybe<Array<Usage_Event_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Usage_Event_Order_By>>;
  where: InputMaybe<Usage_Event_Bool_Exp>;
};

export type Subscription_RootUsage_Event_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootUsage_Event_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Usage_Event_Stream_Cursor_Input>>;
  where: InputMaybe<Usage_Event_Bool_Exp>;
};

export type Subscription_RootUx_DashboardPreferencesArgs = {
  distinct_on: InputMaybe<Array<Ux_DashboardPreferences_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Ux_DashboardPreferences_Order_By>>;
  where: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
};

export type Subscription_RootUx_DashboardPreferences_AggregateArgs = {
  distinct_on: InputMaybe<Array<Ux_DashboardPreferences_Select_Column>>;
  limit: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
  order_by: InputMaybe<Array<Ux_DashboardPreferences_Order_By>>;
  where: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
};

export type Subscription_RootUx_DashboardPreferences_By_PkArgs = {
  id: Scalars['bigint'];
};

export type Subscription_RootUx_DashboardPreferences_StreamArgs = {
  batch_size: Scalars['Int'];
  cursor: Array<InputMaybe<Ux_DashboardPreferences_Stream_Cursor_Input>>;
  where: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamp']>;
  _gt?: InputMaybe<Scalars['timestamp']>;
  _gte?: InputMaybe<Scalars['timestamp']>;
  _in?: InputMaybe<Array<Scalars['timestamp']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamp']>;
  _lte?: InputMaybe<Scalars['timestamp']>;
  _neq?: InputMaybe<Scalars['timestamp']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** tracks individual usage metrics */
export type Usage_Event = {
  __typename?: 'usage_event';
  /** An object relationship */
  aspect: Feature_Aspect;
  createdAt: Scalars['timestamptz'];
  featureAspectKey: Scalars['String'];
  host: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  metadata: Maybe<Scalars['jsonb']>;
  updatedAt: Scalars['timestamptz'];
  userId: Scalars['String'];
  userStoreId: Scalars['bigint'];
};

/** tracks individual usage metrics */
export type Usage_EventMetadataArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "usage.event" */
export type Usage_Event_Aggregate = {
  __typename?: 'usage_event_aggregate';
  aggregate: Maybe<Usage_Event_Aggregate_Fields>;
  nodes: Array<Usage_Event>;
};

/** aggregate fields of "usage.event" */
export type Usage_Event_Aggregate_Fields = {
  __typename?: 'usage_event_aggregate_fields';
  avg: Maybe<Usage_Event_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Usage_Event_Max_Fields>;
  min: Maybe<Usage_Event_Min_Fields>;
  stddev: Maybe<Usage_Event_Stddev_Fields>;
  stddev_pop: Maybe<Usage_Event_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Usage_Event_Stddev_Samp_Fields>;
  sum: Maybe<Usage_Event_Sum_Fields>;
  var_pop: Maybe<Usage_Event_Var_Pop_Fields>;
  var_samp: Maybe<Usage_Event_Var_Samp_Fields>;
  variance: Maybe<Usage_Event_Variance_Fields>;
};

/** aggregate fields of "usage.event" */
export type Usage_Event_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Usage_Event_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Usage_Event_Append_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Usage_Event_Avg_Fields = {
  __typename?: 'usage_event_avg_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "usage.event". All fields are combined with a logical 'AND'. */
export type Usage_Event_Bool_Exp = {
  _and?: InputMaybe<Array<Usage_Event_Bool_Exp>>;
  _not?: InputMaybe<Usage_Event_Bool_Exp>;
  _or?: InputMaybe<Array<Usage_Event_Bool_Exp>>;
  aspect?: InputMaybe<Feature_Aspect_Bool_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  featureAspectKey?: InputMaybe<String_Comparison_Exp>;
  host?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  metadata?: InputMaybe<Jsonb_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
  userStoreId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "usage.event" */
export const usageEventConstraint = {
  /** unique or primary key constraint on columns "id" */
  EventPkey: 'event_pkey',
} as const;

export type Usage_Event_Constraint =
  (typeof usageEventConstraint)[keyof typeof usageEventConstraint];
/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Usage_Event_Delete_At_Path_Input = {
  metadata?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Usage_Event_Delete_Elem_Input = {
  metadata?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Usage_Event_Delete_Key_Input = {
  metadata?: InputMaybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "usage.event" */
export type Usage_Event_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  userStoreId?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "usage.event" */
export type Usage_Event_Insert_Input = {
  aspect?: InputMaybe<Feature_Aspect_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  featureAspectKey?: InputMaybe<Scalars['String']>;
  host?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  userStoreId?: InputMaybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Usage_Event_Max_Fields = {
  __typename?: 'usage_event_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  featureAspectKey: Maybe<Scalars['String']>;
  host: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
  userStoreId: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type Usage_Event_Min_Fields = {
  __typename?: 'usage_event_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  featureAspectKey: Maybe<Scalars['String']>;
  host: Maybe<Scalars['String']>;
  id: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
  userStoreId: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "usage.event" */
export type Usage_Event_Mutation_Response = {
  __typename?: 'usage_event_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Usage_Event>;
};

/** on_conflict condition type for table "usage.event" */
export type Usage_Event_On_Conflict = {
  constraint: Usage_Event_Constraint;
  update_columns: Array<Usage_Event_Update_Column>;
  where?: InputMaybe<Usage_Event_Bool_Exp>;
};

/** Ordering options when selecting data from "usage.event". */
export type Usage_Event_Order_By = {
  aspect?: InputMaybe<Feature_Aspect_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  featureAspectKey?: InputMaybe<Order_By>;
  host?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  metadata?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
  userStoreId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: usage.event */
export type Usage_Event_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Usage_Event_Prepend_Input = {
  metadata?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "usage.event" */
export const usageEventSelectColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  FeatureAspectKey: 'featureAspectKey',
  /** column name */
  Host: 'host',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
  /** column name */
  UserStoreId: 'userStoreId',
} as const;

export type Usage_Event_Select_Column =
  (typeof usageEventSelectColumn)[keyof typeof usageEventSelectColumn];
/** input type for updating data in table "usage.event" */
export type Usage_Event_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  featureAspectKey?: InputMaybe<Scalars['String']>;
  host?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  userStoreId?: InputMaybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Usage_Event_Stddev_Fields = {
  __typename?: 'usage_event_stddev_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Usage_Event_Stddev_Pop_Fields = {
  __typename?: 'usage_event_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Usage_Event_Stddev_Samp_Fields = {
  __typename?: 'usage_event_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "usage_event" */
export type Usage_Event_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Usage_Event_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Usage_Event_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  featureAspectKey?: InputMaybe<Scalars['String']>;
  host?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['bigint']>;
  metadata?: InputMaybe<Scalars['jsonb']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
  userStoreId?: InputMaybe<Scalars['bigint']>;
};

/** aggregate sum on columns */
export type Usage_Event_Sum_Fields = {
  __typename?: 'usage_event_sum_fields';
  id: Maybe<Scalars['bigint']>;
  userStoreId: Maybe<Scalars['bigint']>;
};

/** update columns of table "usage.event" */
export const usageEventUpdateColumn = {
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  FeatureAspectKey: 'featureAspectKey',
  /** column name */
  Host: 'host',
  /** column name */
  Id: 'id',
  /** column name */
  Metadata: 'metadata',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
  /** column name */
  UserStoreId: 'userStoreId',
} as const;

export type Usage_Event_Update_Column =
  (typeof usageEventUpdateColumn)[keyof typeof usageEventUpdateColumn];
export type Usage_Event_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Usage_Event_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Usage_Event_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Usage_Event_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Usage_Event_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Usage_Event_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Usage_Event_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Usage_Event_Set_Input>;
  /** filter the rows which have to be updated */
  where: Usage_Event_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Usage_Event_Var_Pop_Fields = {
  __typename?: 'usage_event_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Usage_Event_Var_Samp_Fields = {
  __typename?: 'usage_event_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Usage_Event_Variance_Fields = {
  __typename?: 'usage_event_variance_fields';
  id: Maybe<Scalars['Float']>;
  userStoreId: Maybe<Scalars['Float']>;
};

/** columns and relationships of "ux.dashboardPreferences" */
export type Ux_DashboardPreferences = {
  __typename?: 'ux_dashboardPreferences';
  autoClassifyOrderItems: Scalars['Boolean'];
  classifyDescription: Maybe<Scalars['Boolean']>;
  classifySku: Maybe<Scalars['Boolean']>;
  createdAt: Scalars['timestamptz'];
  dismissedCatalogBannerIds: Maybe<Scalars['json']>;
  fallbackToDefaultHsCode: Maybe<Scalars['Boolean']>;
  id: Scalars['bigint'];
  quoterDefaultCurrencyCode: Maybe<Scalars['Boolean']>;
  quoterDefaultWeightUnitType: Maybe<Scalars['String']>;
  storeId: Maybe<Scalars['bigint']>;
  updatedAt: Scalars['timestamptz'];
  userId: Maybe<Scalars['String']>;
};

/** columns and relationships of "ux.dashboardPreferences" */
export type Ux_DashboardPreferencesDismissedCatalogBannerIdsArgs = {
  path: InputMaybe<Scalars['String']>;
};

/** aggregated selection of "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Aggregate = {
  __typename?: 'ux_dashboardPreferences_aggregate';
  aggregate: Maybe<Ux_DashboardPreferences_Aggregate_Fields>;
  nodes: Array<Ux_DashboardPreferences>;
};

/** aggregate fields of "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Aggregate_Fields = {
  __typename?: 'ux_dashboardPreferences_aggregate_fields';
  avg: Maybe<Ux_DashboardPreferences_Avg_Fields>;
  count: Scalars['Int'];
  max: Maybe<Ux_DashboardPreferences_Max_Fields>;
  min: Maybe<Ux_DashboardPreferences_Min_Fields>;
  stddev: Maybe<Ux_DashboardPreferences_Stddev_Fields>;
  stddev_pop: Maybe<Ux_DashboardPreferences_Stddev_Pop_Fields>;
  stddev_samp: Maybe<Ux_DashboardPreferences_Stddev_Samp_Fields>;
  sum: Maybe<Ux_DashboardPreferences_Sum_Fields>;
  var_pop: Maybe<Ux_DashboardPreferences_Var_Pop_Fields>;
  var_samp: Maybe<Ux_DashboardPreferences_Var_Samp_Fields>;
  variance: Maybe<Ux_DashboardPreferences_Variance_Fields>;
};

/** aggregate fields of "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Aggregate_FieldsCountArgs = {
  columns: InputMaybe<Array<Ux_DashboardPreferences_Select_Column>>;
  distinct: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Ux_DashboardPreferences_Avg_Fields = {
  __typename?: 'ux_dashboardPreferences_avg_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "ux.dashboardPreferences". All fields are combined with a logical 'AND'. */
export type Ux_DashboardPreferences_Bool_Exp = {
  _and?: InputMaybe<Array<Ux_DashboardPreferences_Bool_Exp>>;
  _not?: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
  _or?: InputMaybe<Array<Ux_DashboardPreferences_Bool_Exp>>;
  autoClassifyOrderItems?: InputMaybe<Boolean_Comparison_Exp>;
  classifyDescription?: InputMaybe<Boolean_Comparison_Exp>;
  classifySku?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dismissedCatalogBannerIds?: InputMaybe<Json_Comparison_Exp>;
  fallbackToDefaultHsCode?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  quoterDefaultCurrencyCode?: InputMaybe<Boolean_Comparison_Exp>;
  quoterDefaultWeightUnitType?: InputMaybe<String_Comparison_Exp>;
  storeId?: InputMaybe<Bigint_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ux.dashboardPreferences" */
export const uxDashboardPreferencesConstraint = {
  /** unique or primary key constraint on columns "id" */
  DashboardPreferencesPkey: 'dashboardPreferences_pkey',
  /** unique or primary key constraint on columns "storeId" */
  DashboardPreferencesStoreIdKey: 'dashboardPreferences_storeId_key',
} as const;

export type Ux_DashboardPreferences_Constraint =
  (typeof uxDashboardPreferencesConstraint)[keyof typeof uxDashboardPreferencesConstraint];
/** input type for incrementing numeric columns in table "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  storeId?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Insert_Input = {
  autoClassifyOrderItems?: InputMaybe<Scalars['Boolean']>;
  classifyDescription?: InputMaybe<Scalars['Boolean']>;
  classifySku?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  dismissedCatalogBannerIds?: InputMaybe<Scalars['json']>;
  fallbackToDefaultHsCode?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['bigint']>;
  quoterDefaultCurrencyCode?: InputMaybe<Scalars['Boolean']>;
  quoterDefaultWeightUnitType?: InputMaybe<Scalars['String']>;
  storeId?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Ux_DashboardPreferences_Max_Fields = {
  __typename?: 'ux_dashboardPreferences_max_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  quoterDefaultWeightUnitType: Maybe<Scalars['String']>;
  storeId: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Ux_DashboardPreferences_Min_Fields = {
  __typename?: 'ux_dashboardPreferences_min_fields';
  createdAt: Maybe<Scalars['timestamptz']>;
  id: Maybe<Scalars['bigint']>;
  quoterDefaultWeightUnitType: Maybe<Scalars['String']>;
  storeId: Maybe<Scalars['bigint']>;
  updatedAt: Maybe<Scalars['timestamptz']>;
  userId: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Mutation_Response = {
  __typename?: 'ux_dashboardPreferences_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Ux_DashboardPreferences>;
};

/** on_conflict condition type for table "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_On_Conflict = {
  constraint: Ux_DashboardPreferences_Constraint;
  update_columns: Array<Ux_DashboardPreferences_Update_Column>;
  where?: InputMaybe<Ux_DashboardPreferences_Bool_Exp>;
};

/** Ordering options when selecting data from "ux.dashboardPreferences". */
export type Ux_DashboardPreferences_Order_By = {
  autoClassifyOrderItems?: InputMaybe<Order_By>;
  classifyDescription?: InputMaybe<Order_By>;
  classifySku?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dismissedCatalogBannerIds?: InputMaybe<Order_By>;
  fallbackToDefaultHsCode?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  quoterDefaultCurrencyCode?: InputMaybe<Order_By>;
  quoterDefaultWeightUnitType?: InputMaybe<Order_By>;
  storeId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ux.dashboardPreferences */
export type Ux_DashboardPreferences_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "ux.dashboardPreferences" */
export const uxDashboardPreferencesSelectColumn = {
  /** column name */
  AutoClassifyOrderItems: 'autoClassifyOrderItems',
  /** column name */
  ClassifyDescription: 'classifyDescription',
  /** column name */
  ClassifySku: 'classifySku',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DismissedCatalogBannerIds: 'dismissedCatalogBannerIds',
  /** column name */
  FallbackToDefaultHsCode: 'fallbackToDefaultHsCode',
  /** column name */
  Id: 'id',
  /** column name */
  QuoterDefaultCurrencyCode: 'quoterDefaultCurrencyCode',
  /** column name */
  QuoterDefaultWeightUnitType: 'quoterDefaultWeightUnitType',
  /** column name */
  StoreId: 'storeId',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type Ux_DashboardPreferences_Select_Column =
  (typeof uxDashboardPreferencesSelectColumn)[keyof typeof uxDashboardPreferencesSelectColumn];
/** input type for updating data in table "ux.dashboardPreferences" */
export type Ux_DashboardPreferences_Set_Input = {
  autoClassifyOrderItems?: InputMaybe<Scalars['Boolean']>;
  classifyDescription?: InputMaybe<Scalars['Boolean']>;
  classifySku?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  dismissedCatalogBannerIds?: InputMaybe<Scalars['json']>;
  fallbackToDefaultHsCode?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['bigint']>;
  quoterDefaultCurrencyCode?: InputMaybe<Scalars['Boolean']>;
  quoterDefaultWeightUnitType?: InputMaybe<Scalars['String']>;
  storeId?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Ux_DashboardPreferences_Stddev_Fields = {
  __typename?: 'ux_dashboardPreferences_stddev_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Ux_DashboardPreferences_Stddev_Pop_Fields = {
  __typename?: 'ux_dashboardPreferences_stddev_pop_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Ux_DashboardPreferences_Stddev_Samp_Fields = {
  __typename?: 'ux_dashboardPreferences_stddev_samp_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Streaming cursor of the table "ux_dashboardPreferences" */
export type Ux_DashboardPreferences_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ux_DashboardPreferences_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ux_DashboardPreferences_Stream_Cursor_Value_Input = {
  autoClassifyOrderItems?: InputMaybe<Scalars['Boolean']>;
  classifyDescription?: InputMaybe<Scalars['Boolean']>;
  classifySku?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['timestamptz']>;
  dismissedCatalogBannerIds?: InputMaybe<Scalars['json']>;
  fallbackToDefaultHsCode?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['bigint']>;
  quoterDefaultCurrencyCode?: InputMaybe<Scalars['Boolean']>;
  quoterDefaultWeightUnitType?: InputMaybe<Scalars['String']>;
  storeId?: InputMaybe<Scalars['bigint']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']>;
  userId?: InputMaybe<Scalars['String']>;
};

/** aggregate sum on columns */
export type Ux_DashboardPreferences_Sum_Fields = {
  __typename?: 'ux_dashboardPreferences_sum_fields';
  id: Maybe<Scalars['bigint']>;
  storeId: Maybe<Scalars['bigint']>;
};

/** update columns of table "ux.dashboardPreferences" */
export const uxDashboardPreferencesUpdateColumn = {
  /** column name */
  AutoClassifyOrderItems: 'autoClassifyOrderItems',
  /** column name */
  ClassifyDescription: 'classifyDescription',
  /** column name */
  ClassifySku: 'classifySku',
  /** column name */
  CreatedAt: 'createdAt',
  /** column name */
  DismissedCatalogBannerIds: 'dismissedCatalogBannerIds',
  /** column name */
  FallbackToDefaultHsCode: 'fallbackToDefaultHsCode',
  /** column name */
  Id: 'id',
  /** column name */
  QuoterDefaultCurrencyCode: 'quoterDefaultCurrencyCode',
  /** column name */
  QuoterDefaultWeightUnitType: 'quoterDefaultWeightUnitType',
  /** column name */
  StoreId: 'storeId',
  /** column name */
  UpdatedAt: 'updatedAt',
  /** column name */
  UserId: 'userId',
} as const;

export type Ux_DashboardPreferences_Update_Column =
  (typeof uxDashboardPreferencesUpdateColumn)[keyof typeof uxDashboardPreferencesUpdateColumn];
export type Ux_DashboardPreferences_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ux_DashboardPreferences_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ux_DashboardPreferences_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ux_DashboardPreferences_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ux_DashboardPreferences_Var_Pop_Fields = {
  __typename?: 'ux_dashboardPreferences_var_pop_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Ux_DashboardPreferences_Var_Samp_Fields = {
  __typename?: 'ux_dashboardPreferences_var_samp_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Ux_DashboardPreferences_Variance_Fields = {
  __typename?: 'ux_dashboardPreferences_variance_fields';
  id: Maybe<Scalars['Float']>;
  storeId: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "vector". All fields are combined with logical 'AND'. */
export type Vector_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['vector']>;
  _gt?: InputMaybe<Scalars['vector']>;
  _gte?: InputMaybe<Scalars['vector']>;
  _in?: InputMaybe<Array<Scalars['vector']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['vector']>;
  _lte?: InputMaybe<Scalars['vector']>;
  _neq?: InputMaybe<Scalars['vector']>;
  _nin?: InputMaybe<Array<Scalars['vector']>>;
};

/**
 * A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.
 *
 * In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.
 */
export type __Directive = {
  __typename?: '__Directive';
  name: Scalars['String'];
  description: Maybe<Scalars['String']>;
  isRepeatable: Scalars['Boolean'];
  locations: Array<__DirectiveLocation>;
  args: Array<__InputValue>;
};

/**
 * A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.
 *
 * In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.
 */
export type __DirectiveArgsArgs = {
  includeDeprecated?: InputMaybe<Scalars['Boolean']>;
};

/** A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies. */
export const directiveLocation = {
  /** Location adjacent to a query operation. */
  Query: 'QUERY',
  /** Location adjacent to a mutation operation. */
  Mutation: 'MUTATION',
  /** Location adjacent to a subscription operation. */
  Subscription: 'SUBSCRIPTION',
  /** Location adjacent to a field. */
  Field: 'FIELD',
  /** Location adjacent to a fragment definition. */
  FragmentDefinition: 'FRAGMENT_DEFINITION',
  /** Location adjacent to a fragment spread. */
  FragmentSpread: 'FRAGMENT_SPREAD',
  /** Location adjacent to an inline fragment. */
  InlineFragment: 'INLINE_FRAGMENT',
  /** Location adjacent to a variable definition. */
  VariableDefinition: 'VARIABLE_DEFINITION',
  /** Location adjacent to a schema definition. */
  Schema: 'SCHEMA',
  /** Location adjacent to a scalar definition. */
  Scalar: 'SCALAR',
  /** Location adjacent to an object type definition. */
  Object: 'OBJECT',
  /** Location adjacent to a field definition. */
  FieldDefinition: 'FIELD_DEFINITION',
  /** Location adjacent to an argument definition. */
  ArgumentDefinition: 'ARGUMENT_DEFINITION',
  /** Location adjacent to an interface definition. */
  Interface: 'INTERFACE',
  /** Location adjacent to a union definition. */
  Union: 'UNION',
  /** Location adjacent to an enum definition. */
  Enum: 'ENUM',
  /** Location adjacent to an enum value definition. */
  EnumValue: 'ENUM_VALUE',
  /** Location adjacent to an input object type definition. */
  InputObject: 'INPUT_OBJECT',
  /** Location adjacent to an input object field definition. */
  InputFieldDefinition: 'INPUT_FIELD_DEFINITION',
} as const;

export type __DirectiveLocation =
  (typeof directiveLocation)[keyof typeof directiveLocation];
/** One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string. */
export type __EnumValue = {
  __typename?: '__EnumValue';
  name: Scalars['String'];
  description: Maybe<Scalars['String']>;
  isDeprecated: Scalars['Boolean'];
  deprecationReason: Maybe<Scalars['String']>;
};

/** Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type. */
export type __Field = {
  __typename?: '__Field';
  name: Scalars['String'];
  description: Maybe<Scalars['String']>;
  args: Array<__InputValue>;
  type: __Type;
  isDeprecated: Scalars['Boolean'];
  deprecationReason: Maybe<Scalars['String']>;
};

/** Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type. */
export type __FieldArgsArgs = {
  includeDeprecated?: InputMaybe<Scalars['Boolean']>;
};

/** Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value. */
export type __InputValue = {
  __typename?: '__InputValue';
  name: Scalars['String'];
  description: Maybe<Scalars['String']>;
  type: __Type;
  /** A GraphQL-formatted string representing the default value for this input value. */
  defaultValue: Maybe<Scalars['String']>;
  isDeprecated: Scalars['Boolean'];
  deprecationReason: Maybe<Scalars['String']>;
};

/** A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations. */
export type __Schema = {
  __typename?: '__Schema';
  description: Maybe<Scalars['String']>;
  /** A list of all types supported by this server. */
  types: Array<__Type>;
  /** The type that query operations will be rooted at. */
  queryType: __Type;
  /** If this server supports mutation, the type that mutation operations will be rooted at. */
  mutationType: Maybe<__Type>;
  /** If this server support subscription, the type that subscription operations will be rooted at. */
  subscriptionType: Maybe<__Type>;
  /** A list of all directives supported by this server. */
  directives: Array<__Directive>;
};

/**
 * The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.
 *
 * Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.
 */
export type __Type = {
  __typename?: '__Type';
  kind: __TypeKind;
  name: Maybe<Scalars['String']>;
  description: Maybe<Scalars['String']>;
  specifiedByURL: Maybe<Scalars['String']>;
  fields: Maybe<Array<__Field>>;
  interfaces: Maybe<Array<__Type>>;
  possibleTypes: Maybe<Array<__Type>>;
  enumValues: Maybe<Array<__EnumValue>>;
  inputFields: Maybe<Array<__InputValue>>;
  ofType: Maybe<__Type>;
};

/**
 * The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.
 *
 * Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.
 */
export type __TypeFieldsArgs = {
  includeDeprecated?: InputMaybe<Scalars['Boolean']>;
};

/**
 * The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.
 *
 * Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.
 */
export type __TypeEnumValuesArgs = {
  includeDeprecated?: InputMaybe<Scalars['Boolean']>;
};

/**
 * The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.
 *
 * Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.
 */
export type __TypeInputFieldsArgs = {
  includeDeprecated?: InputMaybe<Scalars['Boolean']>;
};

/** An enum describing what kind of type a given `__Type` is. */
export const typeKind = {
  /** Indicates this type is a scalar. */
  Scalar: 'SCALAR',
  /** Indicates this type is an object. `fields` and `interfaces` are valid fields. */
  Object: 'OBJECT',
  /** Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields. */
  Interface: 'INTERFACE',
  /** Indicates this type is a union. `possibleTypes` is a valid field. */
  Union: 'UNION',
  /** Indicates this type is an enum. `enumValues` is a valid field. */
  Enum: 'ENUM',
  /** Indicates this type is an input object. `inputFields` is a valid field. */
  InputObject: 'INPUT_OBJECT',
  /** Indicates this type is a list. `ofType` is a valid field. */
  List: 'LIST',
  /** Indicates this type is a non-null. `ofType` is a valid field. */
  NonNull: 'NON_NULL',
} as const;

export type __TypeKind = (typeof typeKind)[keyof typeof typeKind];
export type GetFeatureAspectAudiencesQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GetFeatureAspectAudiencesQuery = { __typename?: 'query_root' } & {
  feature_audience: Array<
    { __typename?: 'feature_audience' } & Pick<Feature_Audience, 'id' | 'name'>
  >;
  feature_aspect: Array<
    { __typename?: 'feature_aspect' } & Pick<Feature_Aspect, 'id' | 'key'> & {
        aspectLinks: Array<
          { __typename?: 'feature_audienceAspectLink' } & {
            audience: { __typename?: 'feature_audience' } & Pick<
              Feature_Audience,
              'name'
            >;
          }
        >;
      }
  >;
};

export type FilterGraphHubDeployedSchemaQueryVariables = Exact<{
  where: InputMaybe<GraphHub_DeployedSchema_Bool_Exp>;
  order_by: InputMaybe<
    Array<GraphHub_DeployedSchema_Order_By> | GraphHub_DeployedSchema_Order_By
  >;
}>;

export type FilterGraphHubDeployedSchemaQuery = {
  __typename?: 'query_root';
} & {
  graphHub_deployedSchema: Array<
    { __typename?: 'graphHub_deployedSchema' } & Pick<
      GraphHub_DeployedSchema,
      'id' | 'label' | 'updatedAt' | 'createdAt'
    >
  >;
};

export type FilterGraphHubDeployedSchemaChunkQueryVariables = Exact<{
  where: InputMaybe<GraphHub_DeployedSchemaChunk_Bool_Exp>;
  order_by: InputMaybe<
    | Array<GraphHub_DeployedSchemaChunk_Order_By>
    | GraphHub_DeployedSchemaChunk_Order_By
  >;
}>;

export type FilterGraphHubDeployedSchemaChunkQuery = {
  __typename?: 'query_root';
} & {
  graphHub_deployedSchemaChunk: Array<
    { __typename?: 'graphHub_deployedSchemaChunk' } & Pick<
      GraphHub_DeployedSchemaChunk,
      'id' | 'apiReferenceData' | 'apiReferenceDataLabel' | 'schemaDefinition'
    > & {
        chatCompletionOption: Maybe<
          { __typename?: 'prompt_chatCompletionOption' } & Pick<
            Prompt_ChatCompletionOption,
            'result' | 'errorId'
          >
        >;
      }
  >;
};

export type FilterGraphHubDraftSchemaQueryVariables = Exact<{
  where: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
  order_by: InputMaybe<
    Array<GraphHub_DraftSchema_Order_By> | GraphHub_DraftSchema_Order_By
  >;
}>;

export type FilterGraphHubDraftSchemaQuery = { __typename?: 'query_root' } & {
  graphHub_draftSchema: Array<
    { __typename?: 'graphHub_draftSchema' } & Pick<
      GraphHub_DraftSchema,
      'id' | 'label' | 'updatedAt' | 'createdAt'
    >
  >;
};

export type FilterGraphHubDraftSchemaChunkQueryVariables = Exact<{
  where: InputMaybe<GraphHub_DraftSchemaChunk_Bool_Exp>;
  order_by: InputMaybe<
    | Array<GraphHub_DraftSchemaChunk_Order_By>
    | GraphHub_DraftSchemaChunk_Order_By
  >;
}>;

export type FilterGraphHubDraftSchemaChunkQuery = {
  __typename?: 'query_root';
} & {
  graphHub_draftSchemaChunk: Array<
    { __typename?: 'graphHub_draftSchemaChunk' } & Pick<
      GraphHub_DraftSchemaChunk,
      'id' | 'schemaDefinition'
    > & {
        chatCompletionOption: Maybe<
          { __typename?: 'prompt_chatCompletionOption' } & Pick<
            Prompt_ChatCompletionOption,
            | 'errorId'
            | 'result'
            | 'messages'
            | 'meta'
            | 'maxTokens'
            | 'logitBias'
            | 'id'
            | 'frequencyPenalty'
            | 'model'
            | 'n'
            | 'presencePenalty'
            | 'stop'
            | 'temperature'
            | 'topP'
            | 'user'
          >
        >;
      }
  >;
};

export type GetGraphHubCategoryQueryVariables = Exact<{ [key: string]: never }>;

export type GetGraphHubCategoryQuery = { __typename?: 'query_root' } & {
  graphHub_category: Array<
    { __typename?: 'graphHub_category' } & Pick<
      GraphHub_Category,
      'id' | 'createdAt' | 'label' | 'updatedAt'
    >
  >;
};

export type GetDraftSchemaWithChunksByIdQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;

export type GetDraftSchemaWithChunksByIdQuery = {
  __typename?: 'query_root';
} & {
  graphHub_draftSchemaChunk: Array<
    { __typename?: 'graphHub_draftSchemaChunk' } & Pick<
      GraphHub_DraftSchemaChunk,
      | 'id'
      | 'apiReferenceDataLabel'
      | 'apiReferenceData'
      | 'schemaDefinition'
      | 'draftSchemaId'
      | 'userId'
    > & {
        chatCompletionOption: Maybe<
          { __typename?: 'prompt_chatCompletionOption' } & Pick<
            Prompt_ChatCompletionOption,
            'result' | 'meta'
          >
        >;
      }
  >;
  graphHub_draftSchema: Array<
    { __typename?: 'graphHub_draftSchema' } & Pick<
      GraphHub_DraftSchema,
      'schemaDefinition' | 'label'
    >
  >;
};

export type GetGraphHubDeployedInstanceQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;

export type GetGraphHubDeployedInstanceQuery = { __typename?: 'query_root' } & {
  graphHub_deployedInstance_by_pk: Maybe<
    { __typename?: 'graphHub_deployedInstance' } & Pick<
      GraphHub_DeployedInstance,
      | 'categoryId'
      | 'createdAt'
      | 'id'
      | 'query'
      | 'deployedSchemaId'
      | 'updatedAt'
      | 'userId'
      | 'variables'
    > & {
        deployedSchema: { __typename?: 'graphHub_deployedSchema' } & Pick<
          GraphHub_DeployedSchema,
          'schemaDefinition' | 'label' | 'id'
        >;
      }
  >;
};

export type GetGraphHubDraftInstanceQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;

export type GetGraphHubDraftInstanceQuery = { __typename?: 'query_root' } & {
  graphHub_draftInstance_by_pk: Maybe<
    { __typename?: 'graphHub_draftInstance' } & Pick<
      GraphHub_DraftInstance,
      | 'categoryId'
      | 'createdAt'
      | 'id'
      | 'query'
      | 'draftSchemaId'
      | 'updatedAt'
      | 'userId'
      | 'variables'
    > & {
        draftSchema: { __typename?: 'graphHub_draftSchema' } & Pick<
          GraphHub_DraftSchema,
          'schemaDefinition' | 'label' | 'userId' | 'id'
        >;
      }
  >;
};

export type GetGraphHubSchemaQueryVariables = Exact<{
  draftSchemaWhere?: InputMaybe<GraphHub_DraftSchema_Bool_Exp>;
  draftSchemaOrderBy: InputMaybe<
    Array<GraphHub_DraftSchema_Order_By> | GraphHub_DraftSchema_Order_By
  >;
}>;

export type GetGraphHubSchemaQuery = { __typename?: 'query_root' } & {
  graphHub_deployedSchema: Array<
    { __typename?: 'graphHub_deployedSchema' } & Pick<
      GraphHub_DeployedSchema,
      'id' | 'label'
    >
  >;
  graphHub_draftSchema: Array<
    { __typename?: 'graphHub_draftSchema' } & Pick<
      GraphHub_DraftSchema,
      'id' | 'label' | 'updatedAt' | 'userId'
    >
  >;
};

export type GetGraphHubDeployedSchemaByIdQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;

export type GetGraphHubDeployedSchemaByIdQuery = {
  __typename?: 'query_root';
} & {
  graphHub_deployedSchema: Array<
    { __typename?: 'graphHub_deployedSchema' } & Pick<
      GraphHub_DeployedSchema,
      'createdAt' | 'schemaDefinition' | 'label' | 'id' | 'updatedAt'
    >
  >;
};

export type GetGraphHubDraftSchemaByIdQueryVariables = Exact<{
  id: Scalars['bigint'];
}>;

export type GetGraphHubDraftSchemaByIdQuery = { __typename?: 'query_root' } & {
  graphHub_draftSchema: Array<
    { __typename?: 'graphHub_draftSchema' } & Pick<
      GraphHub_DraftSchema,
      'createdAt' | 'schemaDefinition' | 'label' | 'id' | 'updatedAt' | 'userId'
    >
  >;
};

export type GetGraphHubDeployedSchemaChunkQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
}>;

export type GetGraphHubDeployedSchemaChunkQuery = {
  __typename?: 'query_root';
} & {
  graphHub_deployedSchemaChunk: Array<
    { __typename?: 'graphHub_deployedSchemaChunk' } & Pick<
      GraphHub_DeployedSchemaChunk,
      | 'id'
      | 'bulkJobId'
      | 'apiReferenceDataLabel'
      | 'deployedSchemaId'
      | 'createdAt'
      | 'updatedAt'
    > & {
        deployedSchema: { __typename?: 'graphHub_deployedSchema' } & Pick<
          GraphHub_DeployedSchema,
          'label'
        >;
        chatCompletionOption: Maybe<
          { __typename?: 'prompt_chatCompletionOption' } & Pick<
            Prompt_ChatCompletionOption,
            'messages' | 'result'
          >
        >;
      }
  >;
};

export type GetGraphHubDraftSchemaChunkQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']>;
  offset: InputMaybe<Scalars['Int']>;
}>;

export type GetGraphHubDraftSchemaChunkQuery = { __typename?: 'query_root' } & {
  graphHub_draftSchemaChunk: Array<
    { __typename?: 'graphHub_draftSchemaChunk' } & Pick<
      GraphHub_DraftSchemaChunk,
      | 'id'
      | 'apiReferenceDataLabel'
      | 'draftSchemaId'
      | 'bulkJobId'
      | 'createdAt'
      | 'updatedAt'
    > & {
        draftSchema: { __typename?: 'graphHub_draftSchema' } & Pick<
          GraphHub_DraftSchema,
          'label'
        >;
        chatCompletionOption: Maybe<
          { __typename?: 'prompt_chatCompletionOption' } & Pick<
            Prompt_ChatCompletionOption,
            'errorId' | 'result' | 'retries'
          >
        >;
      }
  >;
};

export type InsertGraphHubCategoryLabelMutationVariables = Exact<{
  objects:
    | Array<GraphHub_CategoryLabel_Insert_Input>
    | GraphHub_CategoryLabel_Insert_Input;
}>;

export type InsertGraphHubCategoryLabelMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_categoryLabel: Maybe<
    { __typename?: 'graphHub_categoryLabel_mutation_response' } & Pick<
      GraphHub_CategoryLabel_Mutation_Response,
      'affected_rows'
    > & {
        returning: Array<
          { __typename?: 'graphHub_categoryLabel' } & Pick<
            GraphHub_CategoryLabel,
            'set'
          >
        >;
      }
  >;
};

export type InsertGraphHubCategoryMutationVariables = Exact<{
  objects:
    | Array<GraphHub_Category_Insert_Input>
    | GraphHub_Category_Insert_Input;
}>;

export type InsertGraphHubCategoryMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_category: Maybe<
    { __typename?: 'graphHub_category_mutation_response' } & Pick<
      GraphHub_Category_Mutation_Response,
      'affected_rows'
    > & {
        returning: Array<
          { __typename?: 'graphHub_category' } & Pick<
            GraphHub_Category,
            'createdAt' | 'id' | 'label' | 'updatedAt'
          >
        >;
      }
  >;
};

export type InsertGraphHubDeployedInstanceMutationVariables = Exact<{
  objects?: InputMaybe<
    | Array<GraphHub_DeployedInstance_Insert_Input>
    | GraphHub_DeployedInstance_Insert_Input
  >;
}>;

export type InsertGraphHubDeployedInstanceMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_deployedInstance: Maybe<
    { __typename?: 'graphHub_deployedInstance_mutation_response' } & Pick<
      GraphHub_DeployedInstance_Mutation_Response,
      'affected_rows'
    > & {
        returning: Array<
          { __typename?: 'graphHub_deployedInstance' } & Pick<
            GraphHub_DeployedInstance,
            | 'id'
            | 'query'
            | 'updatedAt'
            | 'userId'
            | 'variables'
            | 'categoryId'
            | 'createdAt'
            | 'deployedSchemaId'
          > & {
              category: { __typename?: 'graphHub_category' } & Pick<
                GraphHub_Category,
                'createdAt' | 'id' | 'label' | 'updatedAt'
              >;
              deployedSchema: { __typename?: 'graphHub_deployedSchema' } & Pick<
                GraphHub_DeployedSchema,
                'createdAt' | 'schemaDefinition' | 'id' | 'label' | 'updatedAt'
              >;
            }
        >;
      }
  >;
};

export type InsertGraphHubDraftInstanceMutationVariables = Exact<{
  objects?: InputMaybe<
    | Array<GraphHub_DraftInstance_Insert_Input>
    | GraphHub_DraftInstance_Insert_Input
  >;
}>;

export type InsertGraphHubDraftInstanceMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_draftInstance: Maybe<
    { __typename?: 'graphHub_draftInstance_mutation_response' } & Pick<
      GraphHub_DraftInstance_Mutation_Response,
      'affected_rows'
    > & {
        returning: Array<
          { __typename?: 'graphHub_draftInstance' } & Pick<
            GraphHub_DraftInstance,
            | 'id'
            | 'query'
            | 'updatedAt'
            | 'userId'
            | 'variables'
            | 'categoryId'
            | 'createdAt'
            | 'draftSchemaId'
          > & {
              category: { __typename?: 'graphHub_category' } & Pick<
                GraphHub_Category,
                'createdAt' | 'id' | 'label' | 'updatedAt'
              >;
              draftSchema: { __typename?: 'graphHub_draftSchema' } & Pick<
                GraphHub_DraftSchema,
                | 'userId'
                | 'createdAt'
                | 'schemaDefinition'
                | 'id'
                | 'label'
                | 'updatedAt'
              >;
            }
        >;
      }
  >;
};

export type UpsertGraphHubDeployedSchemaMutationVariables = Exact<{
  objects:
    | Array<GraphHub_DeployedSchema_Insert_Input>
    | GraphHub_DeployedSchema_Insert_Input;
}>;

export type UpsertGraphHubDeployedSchemaMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_deployedSchema: Maybe<
    { __typename?: 'graphHub_deployedSchema_mutation_response' } & Pick<
      GraphHub_DeployedSchema_Mutation_Response,
      'affected_rows'
    > & {
        returning: Array<
          { __typename?: 'graphHub_deployedSchema' } & Pick<
            GraphHub_DeployedSchema,
            'createdAt' | 'schemaDefinition' | 'id' | 'label' | 'updatedAt'
          >
        >;
      }
  >;
};

export type UpsertGraphHubDraftSchemaMutationVariables = Exact<{
  objects:
    | Array<GraphHub_DraftSchema_Insert_Input>
    | GraphHub_DraftSchema_Insert_Input;
}>;

export type UpsertGraphHubDraftSchemaMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_draftSchema: Maybe<
    { __typename?: 'graphHub_draftSchema_mutation_response' } & Pick<
      GraphHub_DraftSchema_Mutation_Response,
      'affected_rows'
    > & {
        returning: Array<
          { __typename?: 'graphHub_draftSchema' } & Pick<
            GraphHub_DraftSchema,
            | 'createdAt'
            | 'schemaDefinition'
            | 'id'
            | 'label'
            | 'userId'
            | 'updatedAt'
          >
        >;
      }
  >;
};

export type ChatCompletionOptionFragmentFragment = {
  __typename?: 'prompt_chatCompletionOption';
} & Pick<
  Prompt_ChatCompletionOption,
  | 'bulkJobId'
  | 'createdAt'
  | 'frequencyPenalty'
  | 'id'
  | 'maxTokens'
  | 'messages'
  | 'model'
  | 'n'
  | 'presencePenalty'
  | 'result'
  | 'stop'
  | 'temperature'
  | 'topP'
  | 'user'
  | 'updatedAt'
>;

export type UpsertGraphHubDeployedSchemaChunkMutationVariables = Exact<{
  objects:
    | Array<GraphHub_DeployedSchemaChunk_Insert_Input>
    | GraphHub_DeployedSchemaChunk_Insert_Input;
}>;

export type UpsertGraphHubDeployedSchemaChunkMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_deployedSchemaChunk: Maybe<
    { __typename?: 'graphHub_deployedSchemaChunk_mutation_response' } & {
      returning: Array<
        { __typename?: 'graphHub_deployedSchemaChunk' } & Pick<
          GraphHub_DeployedSchemaChunk,
          'createdAt' | 'bulkJobId' | 'deployedSchemaId' | 'id' | 'updatedAt'
        > & {
            chatCompletionOption: Maybe<
              { __typename?: 'prompt_chatCompletionOption' } & Pick<
                Prompt_ChatCompletionOption,
                | 'bulkJobId'
                | 'createdAt'
                | 'frequencyPenalty'
                | 'id'
                | 'maxTokens'
                | 'messages'
                | 'model'
                | 'n'
                | 'presencePenalty'
                | 'result'
                | 'stop'
                | 'temperature'
                | 'topP'
                | 'user'
                | 'updatedAt'
              >
            >;
            deployedSchema: { __typename?: 'graphHub_deployedSchema' } & Pick<
              GraphHub_DeployedSchema,
              'createdAt' | 'schemaDefinition' | 'id' | 'label' | 'updatedAt'
            >;
          }
      >;
    }
  >;
};

export type UpsertGraphHubDraftSchemaChunkMutationVariables = Exact<{
  objects:
    | Array<GraphHub_DraftSchemaChunk_Insert_Input>
    | GraphHub_DraftSchemaChunk_Insert_Input;
}>;

export type UpsertGraphHubDraftSchemaChunkMutation = {
  __typename?: 'mutation_root';
} & {
  insert_graphHub_draftSchemaChunk: Maybe<
    { __typename?: 'graphHub_draftSchemaChunk_mutation_response' } & {
      returning: Array<
        { __typename?: 'graphHub_draftSchemaChunk' } & Pick<
          GraphHub_DraftSchemaChunk,
          'createdAt' | 'bulkJobId' | 'draftSchemaId' | 'id' | 'updatedAt'
        > & {
            chatCompletionOption: Maybe<
              { __typename?: 'prompt_chatCompletionOption' } & Pick<
                Prompt_ChatCompletionOption,
                | 'bulkJobId'
                | 'createdAt'
                | 'frequencyPenalty'
                | 'id'
                | 'maxTokens'
                | 'messages'
                | 'model'
                | 'n'
                | 'presencePenalty'
                | 'result'
                | 'stop'
                | 'temperature'
                | 'topP'
                | 'user'
                | 'updatedAt'
              >
            >;
            draftSchema: { __typename?: 'graphHub_draftSchema' } & Pick<
              GraphHub_DraftSchema,
              'createdAt' | 'schemaDefinition' | 'id' | 'label' | 'updatedAt'
            >;
          }
      >;
    }
  >;
};

export type GetSchemaQueryVariables = Exact<{ [key: string]: never }>;

export type GetSchemaQuery = { __typename?: 'query_root' } & {
  __schema: { __typename?: '__Schema' } & {
    queryType: { __typename?: '__Type' } & Pick<__Type, 'name'>;
    mutationType: Maybe<{ __typename?: '__Type' } & Pick<__Type, 'name'>>;
    subscriptionType: Maybe<{ __typename?: '__Type' } & Pick<__Type, 'name'>>;
    types: Array<
      { __typename?: '__Type' } & Pick<
        __Type,
        'kind' | 'name' | 'description'
      > & {
          fields: Maybe<
            Array<
              { __typename?: '__Field' } & Pick<
                __Field,
                'name' | 'description' | 'isDeprecated' | 'deprecationReason'
              > & {
                  args: Array<
                    { __typename?: '__InputValue' } & Pick<
                      __InputValue,
                      'name' | 'description' | 'defaultValue'
                    > & {
                        type: { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          > & {
                                              ofType: Maybe<
                                                {
                                                  __typename?: '__Type';
                                                } & Pick<
                                                  __Type,
                                                  'kind' | 'name'
                                                > & {
                                                    ofType: Maybe<
                                                      {
                                                        __typename?: '__Type';
                                                      } & Pick<
                                                        __Type,
                                                        'kind' | 'name'
                                                      > & {
                                                          ofType: Maybe<
                                                            {
                                                              __typename?: '__Type';
                                                            } & Pick<
                                                              __Type,
                                                              'kind' | 'name'
                                                            > & {
                                                                ofType: Maybe<
                                                                  {
                                                                    __typename?: '__Type';
                                                                  } & Pick<
                                                                    __Type,
                                                                    | 'kind'
                                                                    | 'name'
                                                                  >
                                                                >;
                                                              }
                                                          >;
                                                        }
                                                    >;
                                                  }
                                              >;
                                            }
                                        >;
                                      }
                                  >;
                                }
                            >;
                          };
                      }
                  >;
                  type: { __typename?: '__Type' } & Pick<
                    __Type,
                    'kind' | 'name'
                  > & {
                      ofType: Maybe<
                        { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          > & {
                                              ofType: Maybe<
                                                {
                                                  __typename?: '__Type';
                                                } & Pick<
                                                  __Type,
                                                  'kind' | 'name'
                                                > & {
                                                    ofType: Maybe<
                                                      {
                                                        __typename?: '__Type';
                                                      } & Pick<
                                                        __Type,
                                                        'kind' | 'name'
                                                      > & {
                                                          ofType: Maybe<
                                                            {
                                                              __typename?: '__Type';
                                                            } & Pick<
                                                              __Type,
                                                              'kind' | 'name'
                                                            >
                                                          >;
                                                        }
                                                    >;
                                                  }
                                              >;
                                            }
                                        >;
                                      }
                                  >;
                                }
                            >;
                          }
                      >;
                    };
                }
            >
          >;
          inputFields: Maybe<
            Array<
              { __typename?: '__InputValue' } & Pick<
                __InputValue,
                'name' | 'description' | 'defaultValue'
              > & {
                  type: { __typename?: '__Type' } & Pick<
                    __Type,
                    'kind' | 'name'
                  > & {
                      ofType: Maybe<
                        { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          > & {
                                              ofType: Maybe<
                                                {
                                                  __typename?: '__Type';
                                                } & Pick<
                                                  __Type,
                                                  'kind' | 'name'
                                                > & {
                                                    ofType: Maybe<
                                                      {
                                                        __typename?: '__Type';
                                                      } & Pick<
                                                        __Type,
                                                        'kind' | 'name'
                                                      > & {
                                                          ofType: Maybe<
                                                            {
                                                              __typename?: '__Type';
                                                            } & Pick<
                                                              __Type,
                                                              'kind' | 'name'
                                                            >
                                                          >;
                                                        }
                                                    >;
                                                  }
                                              >;
                                            }
                                        >;
                                      }
                                  >;
                                }
                            >;
                          }
                      >;
                    };
                }
            >
          >;
          interfaces: Maybe<
            Array<
              { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                  ofType: Maybe<
                    { __typename?: '__Type' } & Pick<
                      __Type,
                      'kind' | 'name'
                    > & {
                        ofType: Maybe<
                          { __typename?: '__Type' } & Pick<
                            __Type,
                            'kind' | 'name'
                          > & {
                              ofType: Maybe<
                                { __typename?: '__Type' } & Pick<
                                  __Type,
                                  'kind' | 'name'
                                > & {
                                    ofType: Maybe<
                                      { __typename?: '__Type' } & Pick<
                                        __Type,
                                        'kind' | 'name'
                                      > & {
                                          ofType: Maybe<
                                            { __typename?: '__Type' } & Pick<
                                              __Type,
                                              'kind' | 'name'
                                            > & {
                                                ofType: Maybe<
                                                  {
                                                    __typename?: '__Type';
                                                  } & Pick<
                                                    __Type,
                                                    'kind' | 'name'
                                                  > & {
                                                      ofType: Maybe<
                                                        {
                                                          __typename?: '__Type';
                                                        } & Pick<
                                                          __Type,
                                                          'kind' | 'name'
                                                        >
                                                      >;
                                                    }
                                                >;
                                              }
                                          >;
                                        }
                                    >;
                                  }
                              >;
                            }
                        >;
                      }
                  >;
                }
            >
          >;
          enumValues: Maybe<
            Array<
              { __typename?: '__EnumValue' } & Pick<
                __EnumValue,
                'name' | 'description' | 'isDeprecated' | 'deprecationReason'
              >
            >
          >;
          possibleTypes: Maybe<
            Array<
              { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                  ofType: Maybe<
                    { __typename?: '__Type' } & Pick<
                      __Type,
                      'kind' | 'name'
                    > & {
                        ofType: Maybe<
                          { __typename?: '__Type' } & Pick<
                            __Type,
                            'kind' | 'name'
                          > & {
                              ofType: Maybe<
                                { __typename?: '__Type' } & Pick<
                                  __Type,
                                  'kind' | 'name'
                                > & {
                                    ofType: Maybe<
                                      { __typename?: '__Type' } & Pick<
                                        __Type,
                                        'kind' | 'name'
                                      > & {
                                          ofType: Maybe<
                                            { __typename?: '__Type' } & Pick<
                                              __Type,
                                              'kind' | 'name'
                                            > & {
                                                ofType: Maybe<
                                                  {
                                                    __typename?: '__Type';
                                                  } & Pick<
                                                    __Type,
                                                    'kind' | 'name'
                                                  > & {
                                                      ofType: Maybe<
                                                        {
                                                          __typename?: '__Type';
                                                        } & Pick<
                                                          __Type,
                                                          'kind' | 'name'
                                                        >
                                                      >;
                                                    }
                                                >;
                                              }
                                          >;
                                        }
                                    >;
                                  }
                              >;
                            }
                        >;
                      }
                  >;
                }
            >
          >;
        }
    >;
    directives: Array<
      { __typename?: '__Directive' } & Pick<
        __Directive,
        'name' | 'description' | 'locations'
      > & {
          args: Array<
            { __typename?: '__InputValue' } & Pick<
              __InputValue,
              'name' | 'description' | 'defaultValue'
            > & {
                type: { __typename?: '__Type' } & Pick<
                  __Type,
                  'kind' | 'name'
                > & {
                    ofType: Maybe<
                      { __typename?: '__Type' } & Pick<
                        __Type,
                        'kind' | 'name'
                      > & {
                          ofType: Maybe<
                            { __typename?: '__Type' } & Pick<
                              __Type,
                              'kind' | 'name'
                            > & {
                                ofType: Maybe<
                                  { __typename?: '__Type' } & Pick<
                                    __Type,
                                    'kind' | 'name'
                                  > & {
                                      ofType: Maybe<
                                        { __typename?: '__Type' } & Pick<
                                          __Type,
                                          'kind' | 'name'
                                        > & {
                                            ofType: Maybe<
                                              { __typename?: '__Type' } & Pick<
                                                __Type,
                                                'kind' | 'name'
                                              > & {
                                                  ofType: Maybe<
                                                    {
                                                      __typename?: '__Type';
                                                    } & Pick<
                                                      __Type,
                                                      'kind' | 'name'
                                                    > & {
                                                        ofType: Maybe<
                                                          {
                                                            __typename?: '__Type';
                                                          } & Pick<
                                                            __Type,
                                                            'kind' | 'name'
                                                          >
                                                        >;
                                                      }
                                                  >;
                                                }
                                            >;
                                          }
                                      >;
                                    }
                                >;
                              }
                          >;
                        }
                    >;
                  };
              }
          >;
        }
    >;
  };
};

export type FullTypeFragment = { __typename?: '__Type' } & Pick<
  __Type,
  'kind' | 'name' | 'description'
> & {
    fields: Maybe<
      Array<
        { __typename?: '__Field' } & Pick<
          __Field,
          'name' | 'description' | 'isDeprecated' | 'deprecationReason'
        > & {
            args: Array<
              { __typename?: '__InputValue' } & Pick<
                __InputValue,
                'name' | 'description' | 'defaultValue'
              > & {
                  type: { __typename?: '__Type' } & Pick<
                    __Type,
                    'kind' | 'name'
                  > & {
                      ofType: Maybe<
                        { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          > & {
                                              ofType: Maybe<
                                                {
                                                  __typename?: '__Type';
                                                } & Pick<
                                                  __Type,
                                                  'kind' | 'name'
                                                > & {
                                                    ofType: Maybe<
                                                      {
                                                        __typename?: '__Type';
                                                      } & Pick<
                                                        __Type,
                                                        'kind' | 'name'
                                                      > & {
                                                          ofType: Maybe<
                                                            {
                                                              __typename?: '__Type';
                                                            } & Pick<
                                                              __Type,
                                                              'kind' | 'name'
                                                            >
                                                          >;
                                                        }
                                                    >;
                                                  }
                                              >;
                                            }
                                        >;
                                      }
                                  >;
                                }
                            >;
                          }
                      >;
                    };
                }
            >;
            type: { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                ofType: Maybe<
                  { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                      ofType: Maybe<
                        { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          > & {
                                              ofType: Maybe<
                                                {
                                                  __typename?: '__Type';
                                                } & Pick<
                                                  __Type,
                                                  'kind' | 'name'
                                                > & {
                                                    ofType: Maybe<
                                                      {
                                                        __typename?: '__Type';
                                                      } & Pick<
                                                        __Type,
                                                        'kind' | 'name'
                                                      >
                                                    >;
                                                  }
                                              >;
                                            }
                                        >;
                                      }
                                  >;
                                }
                            >;
                          }
                      >;
                    }
                >;
              };
          }
      >
    >;
    inputFields: Maybe<
      Array<
        { __typename?: '__InputValue' } & Pick<
          __InputValue,
          'name' | 'description' | 'defaultValue'
        > & {
            type: { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                ofType: Maybe<
                  { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                      ofType: Maybe<
                        { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          > & {
                                              ofType: Maybe<
                                                {
                                                  __typename?: '__Type';
                                                } & Pick<
                                                  __Type,
                                                  'kind' | 'name'
                                                > & {
                                                    ofType: Maybe<
                                                      {
                                                        __typename?: '__Type';
                                                      } & Pick<
                                                        __Type,
                                                        'kind' | 'name'
                                                      >
                                                    >;
                                                  }
                                              >;
                                            }
                                        >;
                                      }
                                  >;
                                }
                            >;
                          }
                      >;
                    }
                >;
              };
          }
      >
    >;
    interfaces: Maybe<
      Array<
        { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
            ofType: Maybe<
              { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                  ofType: Maybe<
                    { __typename?: '__Type' } & Pick<
                      __Type,
                      'kind' | 'name'
                    > & {
                        ofType: Maybe<
                          { __typename?: '__Type' } & Pick<
                            __Type,
                            'kind' | 'name'
                          > & {
                              ofType: Maybe<
                                { __typename?: '__Type' } & Pick<
                                  __Type,
                                  'kind' | 'name'
                                > & {
                                    ofType: Maybe<
                                      { __typename?: '__Type' } & Pick<
                                        __Type,
                                        'kind' | 'name'
                                      > & {
                                          ofType: Maybe<
                                            { __typename?: '__Type' } & Pick<
                                              __Type,
                                              'kind' | 'name'
                                            > & {
                                                ofType: Maybe<
                                                  {
                                                    __typename?: '__Type';
                                                  } & Pick<
                                                    __Type,
                                                    'kind' | 'name'
                                                  >
                                                >;
                                              }
                                          >;
                                        }
                                    >;
                                  }
                              >;
                            }
                        >;
                      }
                  >;
                }
            >;
          }
      >
    >;
    enumValues: Maybe<
      Array<
        { __typename?: '__EnumValue' } & Pick<
          __EnumValue,
          'name' | 'description' | 'isDeprecated' | 'deprecationReason'
        >
      >
    >;
    possibleTypes: Maybe<
      Array<
        { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
            ofType: Maybe<
              { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                  ofType: Maybe<
                    { __typename?: '__Type' } & Pick<
                      __Type,
                      'kind' | 'name'
                    > & {
                        ofType: Maybe<
                          { __typename?: '__Type' } & Pick<
                            __Type,
                            'kind' | 'name'
                          > & {
                              ofType: Maybe<
                                { __typename?: '__Type' } & Pick<
                                  __Type,
                                  'kind' | 'name'
                                > & {
                                    ofType: Maybe<
                                      { __typename?: '__Type' } & Pick<
                                        __Type,
                                        'kind' | 'name'
                                      > & {
                                          ofType: Maybe<
                                            { __typename?: '__Type' } & Pick<
                                              __Type,
                                              'kind' | 'name'
                                            > & {
                                                ofType: Maybe<
                                                  {
                                                    __typename?: '__Type';
                                                  } & Pick<
                                                    __Type,
                                                    'kind' | 'name'
                                                  >
                                                >;
                                              }
                                          >;
                                        }
                                    >;
                                  }
                              >;
                            }
                        >;
                      }
                  >;
                }
            >;
          }
      >
    >;
  };

export type InputValueFragment = { __typename?: '__InputValue' } & Pick<
  __InputValue,
  'name' | 'description' | 'defaultValue'
> & {
    type: { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
        ofType: Maybe<
          { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
              ofType: Maybe<
                { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                    ofType: Maybe<
                      { __typename?: '__Type' } & Pick<
                        __Type,
                        'kind' | 'name'
                      > & {
                          ofType: Maybe<
                            { __typename?: '__Type' } & Pick<
                              __Type,
                              'kind' | 'name'
                            > & {
                                ofType: Maybe<
                                  { __typename?: '__Type' } & Pick<
                                    __Type,
                                    'kind' | 'name'
                                  > & {
                                      ofType: Maybe<
                                        { __typename?: '__Type' } & Pick<
                                          __Type,
                                          'kind' | 'name'
                                        > & {
                                            ofType: Maybe<
                                              { __typename?: '__Type' } & Pick<
                                                __Type,
                                                'kind' | 'name'
                                              >
                                            >;
                                          }
                                      >;
                                    }
                                >;
                              }
                          >;
                        }
                    >;
                  }
              >;
            }
        >;
      };
  };

export type TypeRefFragment = { __typename?: '__Type' } & Pick<
  __Type,
  'kind' | 'name'
> & {
    ofType: Maybe<
      { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
          ofType: Maybe<
            { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                ofType: Maybe<
                  { __typename?: '__Type' } & Pick<__Type, 'kind' | 'name'> & {
                      ofType: Maybe<
                        { __typename?: '__Type' } & Pick<
                          __Type,
                          'kind' | 'name'
                        > & {
                            ofType: Maybe<
                              { __typename?: '__Type' } & Pick<
                                __Type,
                                'kind' | 'name'
                              > & {
                                  ofType: Maybe<
                                    { __typename?: '__Type' } & Pick<
                                      __Type,
                                      'kind' | 'name'
                                    > & {
                                        ofType: Maybe<
                                          { __typename?: '__Type' } & Pick<
                                            __Type,
                                            'kind' | 'name'
                                          >
                                        >;
                                      }
                                  >;
                                }
                            >;
                          }
                      >;
                    }
                >;
              }
          >;
        }
    >;
  };

export type GetAudienceByAspectKeyQueryVariables = Exact<{
  aspectKey: Feature_AspectKey_Enum;
}>;

export type GetAudienceByAspectKeyQuery = { __typename?: 'query_root' } & {
  feature_audienceAspectLink: Array<
    { __typename?: 'feature_audienceAspectLink' } & {
      audience: { __typename?: 'feature_audience' } & Pick<
        Feature_Audience,
        'name'
      > & {
          entityLinks: Array<
            { __typename?: 'feature_audienceEntityLink' } & {
              entity: { __typename?: 'feature_entity' } & Pick<
                Feature_Entity,
                'email'
              >;
            }
          >;
        };
    }
  >;
};

export const ChatCompletionOptionFragmentFragmentDoc = gql`
  fragment ChatCompletionOptionFragment on prompt_chatCompletionOption {
    bulkJobId
    createdAt
    frequencyPenalty
    id
    maxTokens
    messages
    model
    n
    presencePenalty
    result
    stop
    temperature
    topP
    user
    updatedAt
  }
`;
export const TypeRefFragmentDoc = gql`
  fragment TypeRef on __Type {
    kind
    name
    ofType {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                }
              }
            }
          }
        }
      }
    }
  }
`;
export const InputValueFragmentDoc = gql`
  fragment InputValue on __InputValue {
    name
    description
    type {
      ...TypeRef
    }
    defaultValue
  }
  ${TypeRefFragmentDoc}
`;
export const FullTypeFragmentDoc = gql`
  fragment FullType on __Type {
    kind
    name
    description
    fields(includeDeprecated: true) {
      name
      description
      args {
        ...InputValue
      }
      type {
        ...TypeRef
      }
      isDeprecated
      deprecationReason
    }
    inputFields {
      ...InputValue
    }
    interfaces {
      ...TypeRef
    }
    enumValues(includeDeprecated: true) {
      name
      description
      isDeprecated
      deprecationReason
    }
    possibleTypes {
      ...TypeRef
    }
  }
  ${InputValueFragmentDoc}
  ${TypeRefFragmentDoc}
`;
export const GetFeatureAspectAudiencesDocument = gql`
  query getFeatureAspectAudiences {
    feature_audience {
      id
      name
    }
    feature_aspect {
      id
      key
      aspectLinks {
        audience {
          name
        }
      }
    }
  }
`;
export const FilterGraphHubDeployedSchemaDocument = gql`
  query filterGraphHubDeployedSchema(
    $where: graphHub_deployedSchema_bool_exp
    $order_by: [graphHub_deployedSchema_order_by!]
  ) {
    graphHub_deployedSchema(where: $where, order_by: $order_by) {
      id
      label
      updatedAt
      createdAt
    }
  }
`;
export const FilterGraphHubDeployedSchemaChunkDocument = gql`
  query filterGraphHubDeployedSchemaChunk(
    $where: graphHub_deployedSchemaChunk_bool_exp
    $order_by: [graphHub_deployedSchemaChunk_order_by!]
  ) {
    graphHub_deployedSchemaChunk(where: $where, order_by: $order_by) {
      id
      apiReferenceData
      apiReferenceDataLabel
      chatCompletionOption {
        result
        errorId
      }
      schemaDefinition
    }
  }
`;
export const FilterGraphHubDraftSchemaDocument = gql`
  query filterGraphHubDraftSchema(
    $where: graphHub_draftSchema_bool_exp
    $order_by: [graphHub_draftSchema_order_by!]
  ) {
    graphHub_draftSchema(where: $where, order_by: $order_by) {
      id
      label
      updatedAt
      createdAt
    }
  }
`;
export const FilterGraphHubDraftSchemaChunkDocument = gql`
  query filterGraphHubDraftSchemaChunk(
    $where: graphHub_draftSchemaChunk_bool_exp
    $order_by: [graphHub_draftSchemaChunk_order_by!]
  ) {
    graphHub_draftSchemaChunk(where: $where, order_by: $order_by) {
      id
      schemaDefinition
      chatCompletionOption {
        errorId
        result
        messages
        meta
        maxTokens
        logitBias
        id
        frequencyPenalty
        model
        n
        presencePenalty
        stop
        temperature
        topP
        user
      }
    }
  }
`;
export const GetGraphHubCategoryDocument = gql`
  query getGraphHubCategory {
    graphHub_category {
      id
      createdAt
      label
      updatedAt
    }
  }
`;
export const GetDraftSchemaWithChunksByIdDocument = gql`
  query getDraftSchemaWithChunksById($id: bigint!) {
    graphHub_draftSchemaChunk(
      where: { draftSchemaId: { _eq: $id } }
      order_by: { apiReferenceDataLabel: asc_nulls_last }
    ) {
      id
      apiReferenceDataLabel
      apiReferenceData
      schemaDefinition
      draftSchemaId
      userId
      chatCompletionOption {
        result
        meta
      }
    }
    graphHub_draftSchema(where: { id: { _eq: $id } }) {
      schemaDefinition
      label
    }
  }
`;
export const GetGraphHubDeployedInstanceDocument = gql`
  query getGraphHubDeployedInstance($id: bigint!) {
    graphHub_deployedInstance_by_pk(id: $id) {
      categoryId
      createdAt
      id
      query
      deployedSchema {
        schemaDefinition
        label
        id
      }
      deployedSchemaId
      updatedAt
      userId
      variables
    }
  }
`;
export const GetGraphHubDraftInstanceDocument = gql`
  query getGraphHubDraftInstance($id: bigint!) {
    graphHub_draftInstance_by_pk(id: $id) {
      categoryId
      createdAt
      id
      query
      draftSchema {
        schemaDefinition
        label
        userId
        id
      }
      draftSchemaId
      updatedAt
      userId
      variables
    }
  }
`;
export const GetGraphHubSchemaDocument = gql`
  query getGraphHubSchema(
    $draftSchemaWhere: graphHub_draftSchema_bool_exp = null
    $draftSchemaOrderBy: [graphHub_draftSchema_order_by!]
  ) {
    graphHub_deployedSchema {
      id
      label
    }
    graphHub_draftSchema(
      where: $draftSchemaWhere
      order_by: $draftSchemaOrderBy
    ) {
      id
      label
      updatedAt
      userId
    }
  }
`;
export const GetGraphHubDeployedSchemaByIdDocument = gql`
  query getGraphHubDeployedSchemaById($id: bigint!) {
    graphHub_deployedSchema(where: { id: { _eq: $id } }) {
      createdAt
      schemaDefinition
      label
      id
      updatedAt
    }
  }
`;
export const GetGraphHubDraftSchemaByIdDocument = gql`
  query getGraphHubDraftSchemaById($id: bigint!) {
    graphHub_draftSchema(where: { id: { _eq: $id } }) {
      createdAt
      schemaDefinition
      label
      id
      updatedAt
      userId
    }
  }
`;
export const GetGraphHubDeployedSchemaChunkDocument = gql`
  query getGraphHubDeployedSchemaChunk($limit: Int = 10, $offset: Int) {
    graphHub_deployedSchemaChunk(
      limit: $limit
      offset: $offset
      order_by: { deployedSchema: { id: desc }, updatedAt: desc }
    ) {
      id
      bulkJobId
      apiReferenceDataLabel
      deployedSchemaId
      deployedSchema {
        label
      }
      chatCompletionOption {
        messages
        result
      }
      createdAt
      updatedAt
    }
  }
`;
export const GetGraphHubDraftSchemaChunkDocument = gql`
  query getGraphHubDraftSchemaChunk($limit: Int = 10, $offset: Int) {
    graphHub_draftSchemaChunk(
      limit: $limit
      offset: $offset
      order_by: {
        draftSchema: { id: desc }
        updatedAt: desc
        apiReferenceDataLabel: asc_nulls_last
      }
    ) {
      id
      apiReferenceDataLabel
      draftSchemaId
      draftSchema {
        label
      }
      chatCompletionOption {
        errorId
        result
        retries
      }
      bulkJobId
      createdAt
      updatedAt
    }
  }
`;
export const InsertGraphHubCategoryLabelDocument = gql`
  mutation insertGraphHubCategoryLabel(
    $objects: [graphHub_categoryLabel_insert_input!]!
  ) {
    insert_graphHub_categoryLabel(objects: $objects) {
      affected_rows
      returning {
        set
      }
    }
  }
`;
export const InsertGraphHubCategoryDocument = gql`
  mutation insertGraphHubCategory(
    $objects: [graphHub_category_insert_input!]!
  ) {
    insert_graphHub_category(objects: $objects) {
      affected_rows
      returning {
        createdAt
        id
        label
        updatedAt
      }
    }
  }
`;
export const InsertGraphHubDeployedInstanceDocument = gql`
  mutation insertGraphHubDeployedInstance(
    $objects: [graphHub_deployedInstance_insert_input!] = {}
  ) {
    insert_graphHub_deployedInstance(objects: $objects) {
      affected_rows
      returning {
        id
        query
        updatedAt
        userId
        variables
        categoryId
        createdAt
        deployedSchemaId
        category {
          createdAt
          id
          label
          updatedAt
        }
        deployedSchema {
          createdAt
          schemaDefinition
          id
          label
          updatedAt
        }
      }
    }
  }
`;
export const InsertGraphHubDraftInstanceDocument = gql`
  mutation insertGraphHubDraftInstance(
    $objects: [graphHub_draftInstance_insert_input!] = {}
  ) {
    insert_graphHub_draftInstance(objects: $objects) {
      affected_rows
      returning {
        id
        query
        updatedAt
        userId
        variables
        categoryId
        createdAt
        draftSchemaId
        category {
          createdAt
          id
          label
          updatedAt
        }
        draftSchema {
          userId
          createdAt
          schemaDefinition
          id
          label
          updatedAt
        }
      }
    }
  }
`;
export const UpsertGraphHubDeployedSchemaDocument = gql`
  mutation upsertGraphHubDeployedSchema(
    $objects: [graphHub_deployedSchema_insert_input!]!
  ) {
    insert_graphHub_deployedSchema(objects: $objects) {
      affected_rows
      returning {
        createdAt
        schemaDefinition
        id
        label
        updatedAt
      }
    }
  }
`;
export const UpsertGraphHubDraftSchemaDocument = gql`
  mutation upsertGraphHubDraftSchema(
    $objects: [graphHub_draftSchema_insert_input!]!
  ) {
    insert_graphHub_draftSchema(objects: $objects) {
      affected_rows
      returning {
        createdAt
        schemaDefinition
        id
        label
        userId
        updatedAt
      }
    }
  }
`;
export const UpsertGraphHubDeployedSchemaChunkDocument = gql`
  mutation upsertGraphHubDeployedSchemaChunk(
    $objects: [graphHub_deployedSchemaChunk_insert_input!]!
  ) {
    insert_graphHub_deployedSchemaChunk(
      objects: $objects
      on_conflict: {
        constraint: deployedSchemaChunk_pkey
        update_columns: [
          chatCompletionOptionId
          apiReferenceData
          apiReferenceDataLabel
          bulkJobId
        ]
      }
    ) {
      returning {
        createdAt
        chatCompletionOption {
          ...ChatCompletionOptionFragment
        }
        bulkJobId
        deployedSchemaId
        deployedSchema {
          createdAt
          schemaDefinition
          id
          label
          updatedAt
        }
        id
        updatedAt
      }
    }
  }
  ${ChatCompletionOptionFragmentFragmentDoc}
`;
export const UpsertGraphHubDraftSchemaChunkDocument = gql`
  mutation upsertGraphHubDraftSchemaChunk(
    $objects: [graphHub_draftSchemaChunk_insert_input!]!
  ) {
    insert_graphHub_draftSchemaChunk(
      objects: $objects
      on_conflict: {
        constraint: draftSchemaChunk_pkey
        update_columns: [
          chatCompletionOptionId
          apiReferenceData
          apiReferenceDataLabel
          bulkJobId
        ]
      }
    ) {
      returning {
        createdAt
        chatCompletionOption {
          ...ChatCompletionOptionFragment
        }
        bulkJobId
        draftSchemaId
        draftSchema {
          createdAt
          schemaDefinition
          id
          label
          updatedAt
        }
        id
        updatedAt
      }
    }
  }
  ${ChatCompletionOptionFragmentFragmentDoc}
`;
export const GetSchemaDocument = gql`
  query getSchema {
    __schema {
      queryType {
        name
      }
      mutationType {
        name
      }
      subscriptionType {
        name
      }
      types {
        ...FullType
      }
      directives {
        name
        description
        locations
        args {
          ...InputValue
        }
      }
    }
  }
  ${FullTypeFragmentDoc}
  ${InputValueFragmentDoc}
`;
export const GetAudienceByAspectKeyDocument = gql`
  query getAudienceByAspectKey($aspectKey: feature_aspectKey_enum!) {
    feature_audienceAspectLink(
      where: { aspect: { key: { _eq: $aspectKey } } }
    ) {
      audience {
        name
        entityLinks {
          entity {
            email
          }
        }
      }
    }
  }
`;

export type SdkFunctionWrapper = <T>(
  action: (requestHeaders?: Record<string, string>) => Promise<T>,
  operationName: string,
  operationType?: string
) => Promise<T>;

const defaultWrapper: SdkFunctionWrapper = (
  action,
  _operationName,
  _operationType
) => action();

export function getSdk(
  client: GraphQLClient,
  withWrapper: SdkFunctionWrapper = defaultWrapper
) {
  return {
    getFeatureAspectAudiences(
      variables?: GetFeatureAspectAudiencesQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetFeatureAspectAudiencesQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetFeatureAspectAudiencesQuery>(
            GetFeatureAspectAudiencesDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getFeatureAspectAudiences',
        'query'
      );
    },
    filterGraphHubDeployedSchema(
      variables?: FilterGraphHubDeployedSchemaQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<FilterGraphHubDeployedSchemaQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<FilterGraphHubDeployedSchemaQuery>(
            FilterGraphHubDeployedSchemaDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'filterGraphHubDeployedSchema',
        'query'
      );
    },
    filterGraphHubDeployedSchemaChunk(
      variables?: FilterGraphHubDeployedSchemaChunkQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<FilterGraphHubDeployedSchemaChunkQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<FilterGraphHubDeployedSchemaChunkQuery>(
            FilterGraphHubDeployedSchemaChunkDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'filterGraphHubDeployedSchemaChunk',
        'query'
      );
    },
    filterGraphHubDraftSchema(
      variables?: FilterGraphHubDraftSchemaQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<FilterGraphHubDraftSchemaQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<FilterGraphHubDraftSchemaQuery>(
            FilterGraphHubDraftSchemaDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'filterGraphHubDraftSchema',
        'query'
      );
    },
    filterGraphHubDraftSchemaChunk(
      variables?: FilterGraphHubDraftSchemaChunkQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<FilterGraphHubDraftSchemaChunkQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<FilterGraphHubDraftSchemaChunkQuery>(
            FilterGraphHubDraftSchemaChunkDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'filterGraphHubDraftSchemaChunk',
        'query'
      );
    },
    getGraphHubCategory(
      variables?: GetGraphHubCategoryQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubCategoryQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubCategoryQuery>(
            GetGraphHubCategoryDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubCategory',
        'query'
      );
    },
    getDraftSchemaWithChunksById(
      variables: GetDraftSchemaWithChunksByIdQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetDraftSchemaWithChunksByIdQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetDraftSchemaWithChunksByIdQuery>(
            GetDraftSchemaWithChunksByIdDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getDraftSchemaWithChunksById',
        'query'
      );
    },
    getGraphHubDeployedInstance(
      variables: GetGraphHubDeployedInstanceQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubDeployedInstanceQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubDeployedInstanceQuery>(
            GetGraphHubDeployedInstanceDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubDeployedInstance',
        'query'
      );
    },
    getGraphHubDraftInstance(
      variables: GetGraphHubDraftInstanceQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubDraftInstanceQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubDraftInstanceQuery>(
            GetGraphHubDraftInstanceDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubDraftInstance',
        'query'
      );
    },
    getGraphHubSchema(
      variables?: GetGraphHubSchemaQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubSchemaQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubSchemaQuery>(
            GetGraphHubSchemaDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubSchema',
        'query'
      );
    },
    getGraphHubDeployedSchemaById(
      variables: GetGraphHubDeployedSchemaByIdQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubDeployedSchemaByIdQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubDeployedSchemaByIdQuery>(
            GetGraphHubDeployedSchemaByIdDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubDeployedSchemaById',
        'query'
      );
    },
    getGraphHubDraftSchemaById(
      variables: GetGraphHubDraftSchemaByIdQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubDraftSchemaByIdQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubDraftSchemaByIdQuery>(
            GetGraphHubDraftSchemaByIdDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubDraftSchemaById',
        'query'
      );
    },
    getGraphHubDeployedSchemaChunk(
      variables?: GetGraphHubDeployedSchemaChunkQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubDeployedSchemaChunkQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubDeployedSchemaChunkQuery>(
            GetGraphHubDeployedSchemaChunkDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubDeployedSchemaChunk',
        'query'
      );
    },
    getGraphHubDraftSchemaChunk(
      variables?: GetGraphHubDraftSchemaChunkQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetGraphHubDraftSchemaChunkQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetGraphHubDraftSchemaChunkQuery>(
            GetGraphHubDraftSchemaChunkDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getGraphHubDraftSchemaChunk',
        'query'
      );
    },
    insertGraphHubCategoryLabel(
      variables: InsertGraphHubCategoryLabelMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<InsertGraphHubCategoryLabelMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<InsertGraphHubCategoryLabelMutation>(
            InsertGraphHubCategoryLabelDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'insertGraphHubCategoryLabel',
        'mutation'
      );
    },
    insertGraphHubCategory(
      variables: InsertGraphHubCategoryMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<InsertGraphHubCategoryMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<InsertGraphHubCategoryMutation>(
            InsertGraphHubCategoryDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'insertGraphHubCategory',
        'mutation'
      );
    },
    insertGraphHubDeployedInstance(
      variables?: InsertGraphHubDeployedInstanceMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<InsertGraphHubDeployedInstanceMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<InsertGraphHubDeployedInstanceMutation>(
            InsertGraphHubDeployedInstanceDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'insertGraphHubDeployedInstance',
        'mutation'
      );
    },
    insertGraphHubDraftInstance(
      variables?: InsertGraphHubDraftInstanceMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<InsertGraphHubDraftInstanceMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<InsertGraphHubDraftInstanceMutation>(
            InsertGraphHubDraftInstanceDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'insertGraphHubDraftInstance',
        'mutation'
      );
    },
    upsertGraphHubDeployedSchema(
      variables: UpsertGraphHubDeployedSchemaMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<UpsertGraphHubDeployedSchemaMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<UpsertGraphHubDeployedSchemaMutation>(
            UpsertGraphHubDeployedSchemaDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'upsertGraphHubDeployedSchema',
        'mutation'
      );
    },
    upsertGraphHubDraftSchema(
      variables: UpsertGraphHubDraftSchemaMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<UpsertGraphHubDraftSchemaMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<UpsertGraphHubDraftSchemaMutation>(
            UpsertGraphHubDraftSchemaDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'upsertGraphHubDraftSchema',
        'mutation'
      );
    },
    upsertGraphHubDeployedSchemaChunk(
      variables: UpsertGraphHubDeployedSchemaChunkMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<UpsertGraphHubDeployedSchemaChunkMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<UpsertGraphHubDeployedSchemaChunkMutation>(
            UpsertGraphHubDeployedSchemaChunkDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'upsertGraphHubDeployedSchemaChunk',
        'mutation'
      );
    },
    upsertGraphHubDraftSchemaChunk(
      variables: UpsertGraphHubDraftSchemaChunkMutationVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<UpsertGraphHubDraftSchemaChunkMutation> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<UpsertGraphHubDraftSchemaChunkMutation>(
            UpsertGraphHubDraftSchemaChunkDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'upsertGraphHubDraftSchemaChunk',
        'mutation'
      );
    },
    getSchema(
      variables?: GetSchemaQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetSchemaQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetSchemaQuery>(GetSchemaDocument, variables, {
            ...requestHeaders,
            ...wrappedRequestHeaders,
          }),
        'getSchema',
        'query'
      );
    },
    getAudienceByAspectKey(
      variables: GetAudienceByAspectKeyQueryVariables,
      requestHeaders?: Dom.RequestInit['headers']
    ): Promise<GetAudienceByAspectKeyQuery> {
      return withWrapper(
        wrappedRequestHeaders =>
          client.request<GetAudienceByAspectKeyQuery>(
            GetAudienceByAspectKeyDocument,
            variables,
            { ...requestHeaders, ...wrappedRequestHeaders }
          ),
        'getAudienceByAspectKey',
        'query'
      );
    },
  };
}
export type Sdk = ReturnType<typeof getSdk>;
