Title: User Creation Schema
Mutation details:
- userCreate(input: UserCreateInput!): User!
  - input: UserCreateInput! - Input object for creating a new user.
    - email: String! - Email address of the new user.
    - password: String! - Password for the new user.
    - organizationIds: [ID!]! - List of organization IDs to associate with the new user.
    - multiFactorAuthenticationPhone: String - Phone number used for multi-factor authentication.
    - multiFactorAuthentication: MultiFactorAuthenticationMode - Multi-factor authentication mode for the new user (SMS, SMS_NOT_VERIFIED, EMAIL, EMAIL_NOT_VERIFIED, NOT_VERIFIED).
    - onBoarding: Boolean - Indicates if the user is in the onboarding process (default is false).
  - User
    - id: String! - Unique identifier for the user.
    - createdAt: DateTime! - Date and time when the user was created.
    - createdBy: ID! - User ID who created the user.
    - email: String! - Email address of the user.
    - lastLoginAt: DateTime - Date and time when the user last logged in.
    - multiFactorAuthentication: MultiFactorAuthenticationMode - Multi-factor authentication mode for the user (SMS, SMS_NOT_VERIFIED, EMAIL, EMAIL_NOT_VERIFIED, NOT_VERIFIED).
    - multiFactorAuthenticationPhone: String - Phone number used for multi-factor authentication.
    - organizations: [ID!]! - List of organization IDs associated with the user.
    - status: UserStatus - Status of the user (ACTIVE, DISABLED).
    - updatedAt: DateTime! - Date and time when the user was last updated. An RFC-3339 compliant DateTime Scalar.
    - updatedBy: ID! - User ID who last updated the user.Examples:
```graphql
mutation CreateUser($input: UserCreateInput!) {
  userCreate(input: $input) {
    id
    createdAt
    createdBy
    email
    lastLoginAt
    multiFactorAuthentication
    multiFactorAuthenticationPhone
    organizations
    status
    updatedAt
    updatedBy
  }
}
```
Variables:
```json
{
  "input": {
    "email": "jane.doe@example.com",
    "password": "securePassword123",
    "organizationIds": ["org1", "org2"],
    "multiFactorAuthenticationPhone": "+1234567890",
    "multiFactorAuthentication": "SMS",
    "onBoarding": true
  }
}
```